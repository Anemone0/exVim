if WINDOWS()
    set clipboard+=unnamed
else
    set clipboard=unnamedplus
endif

setlocal completeopt-=preview
" map <leader>y "*y
" vmap <leader>y "*y
" map <leader>p "*p
"指定窗口出现的位置，坐标原点在屏幕左上角
winpos 100 10
"换行时自动缩进宽度，可更改（宽度同tabstop）
set shiftwidth=4
"指定按一次backspace就删除shiftwidth宽度
set smarttab

" 常规模式下用空格键来开关光标行所在折叠（注：zR 展开所有折叠，zM 关闭所有折叠）
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zO')<CR>
nnoremap zz zM

" 当文件在外部被修改，自动更新该文件
set autoread

" 常规模式下输入 cS 清除行尾空格
nmap su :set fileencoding=utf-8<cr>:set fileformat=unix<cr>

" 常规模式下输入 cM 清除行尾 ^M 符号
nmap sg :set fileencoding=gbk<cr>:set fileformat=dos<cr>
" 突出显示当前行
set cursorline
" 设置不自动换行
set wrap
" 保留5行
set scrolloff=5

"Ctrl+h/j/k/l切换窗口
noremap <c-k> <c-w>k
noremap <c-j> <c-w>j
noremap <c-h> <c-w>h
noremap <c-l> <c-w>l

" 隐藏滚动条
set guioptions-=L " 隐藏左侧滚动条
set guioptions-=r " 隐藏右侧滚动条
set guioptions-=b " 隐藏底部滚动条

" 关闭系统警告声
set noeb
set vb
" 外部更改
set autoread

set guifontwide=YouYuan:h10.5:cGB2312

"Qfix 乱码问题
function QfMakeConv()
    let qflist = getqflist()
    for i in qflist
       let i.text = iconv(i.text, "cp936", "utf-8")
    endfor
    call setqflist(qflist)
endfunction
au QuickfixCmdPost make call QfMakeConv()

"解决consle输出乱码
if WINDOWS()
    language messages zh_CN.utf-8
endif


" -----------------------------------------------------------------------------
"  < 编码配置 >
" -----------------------------------------------------------------------------
" 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错
set encoding=utf-8                                    "设置gvim内部编码，默认不更改
set fileencodings=utf-8,ucs-bom,gbk,cp936,latin-1     "设置支持打开的文件的编码
" 文件格式，默认 ffs=dos,unix
autocmd BufNewFile,BufRead * set fileformat=unix


if has('multi_byte_ime')
    hi Cursor guifg=bg guibg=White gui=NONE
    hi CursorIM guifg=NONE guibg=Skyblue gui=NONE
    set iminsert=0 imsearch=0
endif

" 启用折叠
" set foldmethod=syntax
if getfsize(expand(@%))>700
    set foldmethod=syntax
    set foldlevelstart=0
    set foldenable
else
    set foldlevelstart=999
endif

" 个人配置,非本人使用请全部注释
autocmd BufNewFile,BufRead *.h source $VIM/vimfiles/hscript.vim
autocmd BufNewFile,BufRead *.c source $VIM/vimfiles/cscript.vim
autocmd BufNewFile,BufRead *.cpp source $VIM/vimfiles/cppscript.vim
autocmd FileType python source $VIM/vimfiles/pyscript.vim
autocmd FileType arduino source $VIM/vimfiles/inoscript.vim
autocmd FileType matlab source $VIM/vimfiles/matlabscript.vim
autocmd FileType asm source $VIM/vimfiles/asmscript.vim
autocmd FileType php source $VIM/vimfiles/phpscript.vim
autocmd FileType java source $VIM/vimfiles/javascript.vim
autocmd FileType tex source $VIM/vimfiles/latexscript.vim
autocmd FileType html set ft=htmldjango.html " For SnipMate
autocmd FileType xhtml set ft=htmldjango.html " For SnipMate
autocmd FileType htmldjango.html set foldmethod=indent " For SnipMate
autocmd FileType htmldjango.html set foldlevel=1 " For SnipMate
autocmd FileType tex set spell
autocmd FileType plaintex set spell
autocmd FileType plaintex set textwidth=100
autocmd FileType bib map <F10> :%s/@//gn<CR>
autocmd FileType smali set foldmethod=indent

let g:tex_flavor = "latex"

map w e
imap ]] {<CR>
cmap W w
imap jj <ESC>
imap <C-]> <ESC>
vmap <C-]> <ESC>
cmap <C-]> <ESC>
imap kk <ESC>la
imap <Right> <ESC>la
map <C-a> ggVG
unmap <esc>

nmap <leader>v :call ToggleConcealLevel()<CR>
function! ToggleConcealLevel()
    if &conceallevel==0
        set conceallevel=2
    else
        set conceallevel=0
    endif
endfunction


" set guifont=consolas:h18.5:cANSI
" set guifont=consolas:h18.5:cGB2312

"Ctrl+h/j/k/l切换窗口
noremap <Up> <c-w>k
noremap <Down> <c-w>j
noremap <Left> <c-w>h
noremap <Right> <c-w>l

" 定制化编译
function! Compile() abort
    if findfile("make.sh",".")=="make.sh"
        execute "!make.sh"
    elseif findfile("make.bat",".")=="make.bat"
        execute "!make.bat"
    else
        execute "SCCompileRun"
    endif
endfunction

nmap <F9> :call Compile()<cr>
imap <F9> :call Compile()<cr>
