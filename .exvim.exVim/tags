!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	C:\exVim\vim74\indent\dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	C:\exVim\vim74\indent\dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#gdStyledBrushed	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="#gdStyledBrushed"> gdStyledBrushed<\/A>.$/;"	a
$	C:\exVim\vim74\tutor\tutor.cs	/^		$ (do konce øádku), atd.$/;"	m	signature:(do konce øádku)
$	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal \$$/;"	m
$	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! \$$/;"	m
$	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal! \$$/;"	m
$MANPAGER	C:\exVim\vim74\ftplugin\man.vim	/^    let $MANPAGER = ""$/;"	v
$TUTOR	C:\exVim\vim74\tutor\tutor.vim	/^  let $TUTOR = $VIMRUNTIME . s:tutorfile$/;"	v
$TUTOR	C:\exVim\vim74\tutor\tutor.vim	/^  let $TUTOR = s:tutorxx$/;"	v
$oldvariable	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^$oldvariable = 45e+75;$/;"	r
%	C:\exVim\vim74\macros\less.vim	/^noremap <script> % %<SID>L$/;"	m
%	C:\exVim\vim74\macros\matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	C:\exVim\vim74\macros\matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	C:\exVim\vim74\macros\matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
&Edit.&Find\.\.\.		y:promptfind	C:\exVim\vim74\menu.vim	/^  vnoremenu <silent>	 &Edit.&Find\\.\\.\\.		y:promptfind <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.&Paste<Tab>"+gP		<C-R>+	C:\exVim\vim74\menu.vim	/^cnoremenu	 &Edit.&Paste<Tab>"+gP		<C-R>+$/;"	m
&Edit.Find\	C:\exVim\vim74\menu.vim	/^  vnoremenu	 &Edit.Find\\ and\\ Rep&lace<Tab>:s	:s\/$/;"	m
&Edit.Find\	C:\exVim\vim74\menu.vim	/^  vnoremenu <silent>	 &Edit.Find\\ and\\ Rep&lace\\.\\.\\. y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.Put\	C:\exVim\vim74\menu.vim	/^inoremenu	 &Edit.Put\\ &After<Tab>]p	<C-O>]p$/;"	m
&Edit.Put\	C:\exVim\vim74\menu.vim	/^inoremenu	 &Edit.Put\\ &Before<Tab>[p	<C-O>[p$/;"	m
&File.&Print			:hardcopy<CR>	C:\exVim\vim74\menu.vim	/^  vnoremenu &File.&Print			:hardcopy<CR>$/;"	m
&File.&Print			:w	C:\exVim\vim74\menu.vim	/^  vnoremenu &File.&Print			:w !lpr<CR>$/;"	m
&Tools.&Diff.&Get\	C:\exVim\vim74\menu.vim	/^  vnoremenu &Tools.&Diff.&Get\\ Block		:diffget<CR>$/;"	m
&Tools.&Diff.&Put\	C:\exVim\vim74\menu.vim	/^  vnoremenu &Tools.&Diff.&Put\\ Block		:diffput<CR>$/;"	m
&Tools.&Jump\	C:\exVim\vim74\menu.vim	/^vnoremenu &Tools.&Jump\\ to\\ this\\ tag<Tab>g^]	g<C-]>$/;"	m
,	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal ,$/;"	m
,	C:\exVim\vimfiles\phpscript.vim	/^imap , ,<space>$/;"	m
,gq	C:\exVim\vim74\macros\justify.vim	/^nmap ,gq :%s\/\\s\\+\/ \/g<CR>gq1G$/;"	m
,gq	C:\exVim\vim74\macros\justify.vim	/^vmap ,gq :s\/\\s\\+\/ \/g<CR>gvgq$/;"	m
/	C:\exVim\vim74\macros\less.vim	/^noremap <script> \/ H$:call <SID>Forward()<CR>\/$/;"	m
/	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^nmap \/ <Plug>StartSearch$/;"	m
/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/,,1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal \/,,1$/;"	m
/,<1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal \/,<1$/;"	m
0	C:\exVim\vim74\syntax\hitest.vim	/^normal 0$/;"	m
0	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! 0$/;"	m
0	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal! 0$/;"	m
0	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal! 0$/;"	m
1.100	C:\exVim\vim74\menu.vim	/^cnoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-U>call <SID>SelectAll()<CR>$/;"	m
1.100	C:\exVim\vim74\menu.vim	/^inoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-O>:call <SID>SelectAll()<CR>$/;"	m
1.100	C:\exVim\vim74\menu.vim	/^noremenu  <script> <silent> 1.100 PopUp.Select\\ &All	:<C-U>call <SID>SelectAll()<CR>$/;"	m
1.20	C:\exVim\vim74\menu.vim	/^vnoremenu 1.20 PopUp.Cu&t		"+x$/;"	m
1.30	C:\exVim\vim74\menu.vim	/^cnoremenu 1.30 PopUp.&Copy		<C-Y>$/;"	m
1.30	C:\exVim\vim74\menu.vim	/^vnoremenu 1.30 PopUp.&Copy		"+y$/;"	m
1.40	C:\exVim\vim74\menu.vim	/^cnoremenu 1.40 PopUp.&Paste		<C-R>+$/;"	m
1.40	C:\exVim\vim74\menu.vim	/^nnoremenu 1.40 PopUp.&Paste		"+gP$/;"	m
1.50	C:\exVim\vim74\menu.vim	/^vnoremenu 1.50 PopUp.&Delete		x$/;"	m
1.60	C:\exVim\vim74\menu.vim	/^vnoremenu 1.60 PopUp.Select\\ Blockwise	<C-V>$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^  vnoremenu 1.70 ToolBar.Cut		"+x$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^cnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^inoremenu 1.70 PopUp.Select\\ &Word	<C-O>vaw$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^nnoremenu 1.70 PopUp.Select\\ &Word	vaw$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^onoremenu 1.70 PopUp.Select\\ &Word	aw$/;"	m
1.70	C:\exVim\vim74\menu.vim	/^vnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.73	C:\exVim\vim74\menu.vim	/^cnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.73	C:\exVim\vim74\menu.vim	/^inoremenu 1.73 PopUp.Select\\ &Sentence	<C-O>vas$/;"	m
1.73	C:\exVim\vim74\menu.vim	/^nnoremenu 1.73 PopUp.Select\\ &Sentence	vas$/;"	m
1.73	C:\exVim\vim74\menu.vim	/^onoremenu 1.73 PopUp.Select\\ &Sentence	as$/;"	m
1.73	C:\exVim\vim74\menu.vim	/^vnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.77	C:\exVim\vim74\menu.vim	/^cnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.77	C:\exVim\vim74\menu.vim	/^inoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-O>vap$/;"	m
1.77	C:\exVim\vim74\menu.vim	/^nnoremenu 1.77 PopUp.Select\\ Pa&ragraph	vap$/;"	m
1.77	C:\exVim\vim74\menu.vim	/^onoremenu 1.77 PopUp.Select\\ Pa&ragraph	ap$/;"	m
1.77	C:\exVim\vim74\menu.vim	/^vnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^  cnoremenu 1.80 ToolBar.Copy		<C-Y>$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^  vnoremenu 1.80 ToolBar.Copy		"+y$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^cnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^inoremenu 1.80 PopUp.Select\\ &Line	<C-O>V$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^nnoremenu 1.80 PopUp.Select\\ &Line	V$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^onoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	C:\exVim\vim74\menu.vim	/^vnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^  nnoremenu 1.90 ToolBar.Paste		"+gP$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^cnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^inoremenu 1.90 PopUp.Select\\ &Block	<C-O><C-V>$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^nnoremenu 1.90 PopUp.Select\\ &Block	<C-V>$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^onoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	C:\exVim\vim74\menu.vim	/^vnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
2	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var value = ([] == [1,2,3]);$/;"	r
2,	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal 2,$/;"	m
20.340	C:\exVim\vim74\menu.vim	/^vnoremenu 20.340 &Edit.Cu&t<Tab>"+x		"+x$/;"	m
20.350	C:\exVim\vim74\menu.vim	/^cnoremenu 20.350 &Edit.&Copy<Tab>"+y		<C-Y>$/;"	m
20.350	C:\exVim\vim74\menu.vim	/^vnoremenu 20.350 &Edit.&Copy<Tab>"+y		"+y$/;"	m
20.360	C:\exVim\vim74\menu.vim	/^nnoremenu 20.360 &Edit.&Paste<Tab>"+gP		"+gP$/;"	m
20.370	C:\exVim\vim74\menu.vim	/^nnoremenu 20.370 &Edit.Put\\ &Before<Tab>[p	[p$/;"	m
20.380	C:\exVim\vim74\menu.vim	/^nnoremenu 20.380 &Edit.Put\\ &After<Tab>]p	]p$/;"	m
20.390	C:\exVim\vim74\menu.vim	/^  vnoremenu 20.390 &Edit.&Delete<Tab>x		x$/;"	m
20.400	C:\exVim\vim74\menu.vim	/^cnoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-U>call <SID>SelectAll()<CR>$/;"	m
20.400	C:\exVim\vim74\menu.vim	/^inoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-O>:call <SID>SelectAll()<CR>$/;"	m
20.400	C:\exVim\vim74\menu.vim	/^noremenu  <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	:<C-U>call <SID>SelectAll()<CR>$/;"	m
3;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal 3;$/;"	m
4,	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal 4,$/;"	m
40.340.120	C:\exVim\vim74\menu.vim	/^  inoremenu 40.340.120 &Tools.&Folding.Vie&w\\ Cursor\\ Line\\ only<Tab>zMzx  <C-O>zM<C-O>zx$/;"	m
40.340.220	C:\exVim\vim74\menu.vim	/^  vnoremenu 40.340.220 &Tools.&Folding.Create\\ &Fold<Tab>zf	zf$/;"	m
42	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^def.42$/;"	r
;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal ;$/;"	m
<	C:\exVim\vim74\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	C:\exVim\vim74\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	C:\exVim\vim74\macros\less.vim	/^map < g$/;"	m
<2-LeftMouse>	<2-RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <2-LeftMouse>	<2-RightMouse>$/;"	m
<2-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <2-LeftMouse>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<2-RightMouse>	<2-LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <2-RightMouse>	<2-LeftMouse>$/;"	m
<2-RightMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <2-RightMouse> <space>$/;"	m
<3-LeftMouse>	<3-RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <3-LeftMouse>	<3-RightMouse>$/;"	m
<3-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <3-LeftMouse>  <Nop>$/;"	m
<3-RightMouse>	<3-LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <3-RightMouse>	<3-LeftMouse>$/;"	m
<3-RightMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <3-RightMouse> <space>$/;"	m
<4-LeftMouse>	<4-RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <4-LeftMouse>	<4-RightMouse>$/;"	m
<4-RightMouse>	<4-LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <4-RightMouse>	<4-LeftMouse>$/;"	m
<4-RightMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <4-RightMouse> <space>$/;"	m
<<	C:\exVim\vim74\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<BS>	C:\exVim\vim74\mswin.vim	/^vnoremap <BS> d$/;"	m
<C-2-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <C-2-LeftMouse> <C-Return>$/;"	m
<C-A>	C:\exVim\vim74\mswin.vim	/^cnoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	C:\exVim\vim74\mswin.vim	/^inoremap <C-A> <C-O>gg<C-O>gH<C-O>G$/;"	m
<C-A>	C:\exVim\vim74\mswin.vim	/^noremap <C-A> gggH<C-O>G$/;"	m
<C-A>	C:\exVim\vim74\mswin.vim	/^onoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-B>	C:\exVim\vim74\macros\less.vim	/^map <C-B> b$/;"	m
<C-C>	C:\exVim\vim74\mswin.vim	/^vnoremap <C-C> "+y$/;"	m
<C-D>	C:\exVim\vim74\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-D>	C:\exVim\vim74\macros\less.vim	/^map <C-D> d$/;"	m
<C-Down>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <C-Down> \\|:silent call <SID>MoveDown()<CR>$/;"	m
<C-E>	C:\exVim\vim74\macros\less.vim	/^map <C-E> <CR>$/;"	m
<C-F4>	C:\exVim\vim74\mswin.vim	/^cnoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F4>	C:\exVim\vim74\mswin.vim	/^inoremap <C-F4> <C-O><C-W>c$/;"	m
<C-F4>	C:\exVim\vim74\mswin.vim	/^noremap <C-F4> <C-W>c$/;"	m
<C-F4>	C:\exVim\vim74\mswin.vim	/^onoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F>	C:\exVim\vim74\evim.vim	/^cnoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	C:\exVim\vim74\evim.vim	/^inoremap <silent> <C-F> <C-O>:promptfind<CR>$/;"	m
<C-F>	C:\exVim\vim74\evim.vim	/^noremap <silent> <C-F> :promptfind<CR>$/;"	m
<C-F>	C:\exVim\vim74\evim.vim	/^onoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	C:\exVim\vim74\evim.vim	/^vnoremap <silent> <C-F> y:promptfind <C-R>"<CR>$/;"	m
<C-F>	C:\exVim\vim74\macros\less.vim	/^map <C-F> <Space>$/;"	m
<C-G>S	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-Insert>	C:\exVim\vim74\mswin.vim	/^vnoremap <C-Insert> "+y$/;"	m
<C-J>	C:\exVim\vim74\macros\less.vim	/^map <C-J> <CR>$/;"	m
<C-K>	C:\exVim\vim74\macros\less.vim	/^map <C-K> k$/;"	m
<C-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <C-LeftMouse>   <LeftMouse>$/;"	m
<C-N>	C:\exVim\vim74\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-N>	C:\exVim\vim74\macros\less.vim	/^map <C-N> <CR>$/;"	m
<C-P>	C:\exVim\vim74\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-P>	C:\exVim\vim74\macros\less.vim	/^map <C-P> k$/;"	m
<C-Q>		<C-V>	C:\exVim\vim74\mswin.vim	/^noremap <C-Q>		<C-V>$/;"	m
<C-R>	C:\exVim\vim74\macros\less.vim	/^noremap <script> <C-R> <C-L><SID>L$/;"	m
<C-Return>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <C-Return> \\|:call <SID>DoFoldOrOpenEntry('silent! only', 'e')<CR>$/;"	m
<C-S>		:update<CR>	C:\exVim\vim74\mswin.vim	/^noremap <C-S>		:update<CR>$/;"	m
<C-S>		<C-C>:update<CR>	C:\exVim\vim74\mswin.vim	/^vnoremap <C-S>		<C-C>:update<CR>$/;"	m
<C-S>		<C-O>:update<CR>	C:\exVim\vim74\mswin.vim	/^inoremap <C-S>		<C-O>:update<CR>$/;"	m
<C-S>	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-T>	C:\exVim\vim74\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-T>	C:\exVim\vim74\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_tagstack, -1)) <Bar> else <Bar> exe "norm! \\<Lt>C-T>" <Bar> endif<CR>$/;"	m
<C-Tab>	C:\exVim\vim74\mswin.vim	/^cnoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-Tab>	C:\exVim\vim74\mswin.vim	/^inoremap <C-Tab> <C-O><C-W>w$/;"	m
<C-Tab>	C:\exVim\vim74\mswin.vim	/^noremap <C-Tab> <C-W>w$/;"	m
<C-Tab>	C:\exVim\vim74\mswin.vim	/^onoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-U>	C:\exVim\vim74\macros\less.vim	/^noremap <script> <C-U> <C-U><SID>L$/;"	m
<C-U>	C:\exVim\vim74\vimrc_example.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-Up>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <C-Up>   \\|:silent call <SID>MoveUp()<CR>$/;"	m
<C-V>		"+gP	C:\exVim\vim74\mswin.vim	/^map <C-V>		"+gP$/;"	m
<C-V>		<C-R>+	C:\exVim\vim74\mswin.vim	/^cmap <C-V>		<C-R>+$/;"	m
<C-V>	C:\exVim\vim74\macros\less.vim	/^map <C-V> <Space>$/;"	m
<C-W><C-D>	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-F>	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-O>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                nmap <silent> <C-W><C-O> <C-W>o$/;"	m
<C-W><C-]>	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>d	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>f	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>o	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                nmap <silent> <C-W>o <Plug>ProjectOnly$/;"	m
<C-W>}	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X>	C:\exVim\vim74\mswin.vim	/^vnoremap <C-X> "+x$/;"	m
<C-X><C-]>	C:\exVim\vim74\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr>$/;"	m
<C-Y>	C:\exVim\vim74\macros\less.vim	/^map <C-Y> k$/;"	m
<C-Y>	C:\exVim\vim74\mswin.vim	/^inoremap <C-Y> <C-O><C-R>$/;"	m
<C-Y>	C:\exVim\vim74\mswin.vim	/^noremap <C-Y> <C-R>$/;"	m
<C-Z>	C:\exVim\vim74\mswin.vim	/^inoremap <C-Z> <C-O>u$/;"	m
<C-Z>	C:\exVim\vim74\mswin.vim	/^noremap <C-Z> u$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\gprof.vim	/^map <buffer> <silent> <C-]> :call <SID>GprofJumpToFunctionIndex()<CR>$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-]>	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-^>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <C-^> <Nop>$/;"	m
<C-i>	C:\exVim\vimfiles\asmscript.vim	/^nmap <C-i>   :call LoadTemplate("main.asm")<CR>$/;"	m
<C-i>	C:\exVim\vimfiles\cppscript.vim	/^nmap <C-i> :call AutoFill()<cr>$/;"	m
<C-i>	C:\exVim\vimfiles\cscript.vim	/^    nmap                                  <C-i>          :call LoadMain("main.c")<cr>$/;"	m
<C-i>	C:\exVim\vimfiles\hscript.vim	/^nmap <C-i> :call LoadMain("header.h")<cr>$/;"	m
<C-i>	C:\exVim\vimfiles\inoscript.vim	/^nmap <C-i>   :call LoadTemplate("main.ino")<CR>$/;"	m
<C-i>	C:\exVim\vimfiles\matlabscript.vim	/^nmap <C-i> :call LoadTemplate("main.m")<CR>$/;"	m
<C-i>	C:\exVim\vimfiles\phpscript.vim	/^nmap <C-i> :call LoadMain("main.php")<CR>$/;"	m
<C-i>	C:\exVim\vimfiles\pyscript.vim	/^nmap <C-i> :call LoadTemplate("main.py")<CR>$/;"	m
<CR>	C:\exVim\vim74\macros\less.vim	/^noremap <script> <CR> <C-E><SID>L$/;"	m
<CR>	C:\exVim\vim74\optwin.vim	/^inoremap <silent> <buffer> <CR> <Esc>:call <SID>CR()<CR>$/;"	m
<CR>	C:\exVim\vim74\optwin.vim	/^noremap <silent> <buffer> <CR> <C-\\><C-N>:call <SID>CR()<CR>$/;"	m
<D-S-s>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-S-s> <C-C><D-s>$/;"	m
<D-S-s>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-S-s> <C-O><D-s>$/;"	m
<D-S-s>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-S-s> :browse confirm saveas<CR>$/;"	m
<D-S-s>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-S-s> <Esc><D-s>$/;"	m
<D-S-s>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-S-s> <Esc><D-s>gv$/;"	m
<D-a>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-a> <C-C><D-a>$/;"	m
<D-a>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	C:\exVim\vim74\macmap.vim	/^nnoremap <silent> <special> <D-a> :if &slm != ""<Bar>exe ":norm gggH<C-O>G"<Bar> else<Bar>exe ":norm ggVG"<Bar>endif<CR>$/;"	m
<D-a>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-a> <Esc><D-a>$/;"	m
<D-c>	C:\exVim\vim74\macmap.vim	/^cnoremap <special> <D-c> <C-Y>$/;"	m
<D-c>	C:\exVim\vim74\macmap.vim	/^vnoremap <special> <D-c> "+y$/;"	m
<D-f>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-f> <C-C><D-f>$/;"	m
<D-f>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-f> \/$/;"	m
<D-f>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-f> <Esc><D-f>$/;"	m
<D-g>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-g> <C-C><D-g>$/;"	m
<D-g>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-g> <C-O><D-g>$/;"	m
<D-g>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-g> n$/;"	m
<D-g>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-g> <Esc><D-g>$/;"	m
<D-g>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-g> <Esc><D-g>$/;"	m
<D-n>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-n> <C-C><D-n>$/;"	m
<D-n>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-n> <C-O><D-n>$/;"	m
<D-n>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-n> :confirm enew<CR>$/;"	m
<D-n>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-n> <Esc><D-n>$/;"	m
<D-n>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-n> <Esc><D-n>gv$/;"	m
<D-o>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-o> <C-C><D-o>$/;"	m
<D-o>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-o> <C-O><D-o>$/;"	m
<D-o>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-o> :browse confirm e<CR>$/;"	m
<D-o>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-o> <Esc><D-o>$/;"	m
<D-o>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-o> <Esc><D-o>gv$/;"	m
<D-s>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-s> <C-C><D-s>$/;"	m
<D-s>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-s> <C-O><D-s>$/;"	m
<D-s>	C:\exVim\vim74\macmap.vim	/^nnoremap <silent> <special> <D-s> :if expand("%") == ""<Bar>browse confirm w<Bar> else<Bar>confirm w<Bar>endif<CR>$/;"	m
<D-s>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-s> <Esc><D-s>$/;"	m
<D-s>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-s> <Esc><D-s>gv$/;"	m
<D-v>	C:\exVim\vim74\macmap.vim	/^cnoremap <special> <D-v> <C-R>+$/;"	m
<D-v>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-v> "+gP$/;"	m
<D-w>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-w> <C-C><D-w>$/;"	m
<D-w>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-w> <C-O><D-w>$/;"	m
<D-w>	C:\exVim\vim74\macmap.vim	/^nnoremap <silent> <special> <D-w> :if winheight(2) < 0 <Bar> confirm enew <Bar> else <Bar> confirm close <Bar> endif<CR>$/;"	m
<D-w>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-w> <Esc><D-w>$/;"	m
<D-w>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-w> <Esc><D-w>gv$/;"	m
<D-x>	C:\exVim\vim74\macmap.vim	/^vnoremap <special> <D-x> "+x$/;"	m
<D-z>	C:\exVim\vim74\macmap.vim	/^cmap <special> <D-z> <C-C><D-z>$/;"	m
<D-z>	C:\exVim\vim74\macmap.vim	/^imap <special> <D-z> <C-O><D-z>$/;"	m
<D-z>	C:\exVim\vim74\macmap.vim	/^nnoremap <special> <D-z> u$/;"	m
<D-z>	C:\exVim\vim74\macmap.vim	/^omap <special> <D-z> <Esc><D-z>$/;"	m
<D-z>	C:\exVim\vim74\macmap.vim	/^vmap <special> <D-z> <Esc><D-z>gv$/;"	m
<Down>	C:\exVim\vim74\evim.vim	/^inoremap <silent> <Down> <C-R>=pumvisible() ? "\\<lt>Down>" : "\\<lt>C-O>gj"<CR>$/;"	m
<Down>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^      imap <buffer> <Down>   <C-o>gj$/;"	m
<Down>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  nmap <buffer> <Down> gj$/;"	m
<Down>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  vmap <buffer> <Down> gj$/;"	m
<Down>	C:\exVim\vim74\macros\less.vim	/^map <Down> <CR>$/;"	m
<End>	C:\exVim\vim74\macros\less.vim	/^map <End> G$/;"	m
<Esc><	C:\exVim\vim74\macros\less.vim	/^map <Esc>< g$/;"	m
<Esc><Space>	C:\exVim\vim74\macros\less.vim	/^map <Esc><Space> <Space>$/;"	m
<Esc>>	C:\exVim\vim74\macros\less.vim	/^map <Esc>> G$/;"	m
<Esc>v	C:\exVim\vim74\macros\less.vim	/^map <Esc>v b$/;"	m
<F10>	C:\exVim\vimfiles\cppscript.vim	/^ noremap <F10> :call LinkRun()<cr>$/;"	m
<F10>	C:\exVim\vimfiles\cppscript.vim	/^inoremap <F10> :call LinkRun()<cr>$/;"	m
<F12>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap <silent> <F12> <Plug>ToggleProject$/;"	m
<F1>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <F1> :let g:proj_doinghelp = 1<CR><F1>$/;"	m
<F2>	C:\exVim\vimfiles\cppscript.vim	/^vmap <F2> 0<c-v>I\/\/<esc>$/;"	m
<F2>	C:\exVim\vimfiles\cscript.vim	/^vmap <F2> <c-v>I\/\/<esc>$/;"	m
<F2>	C:\exVim\vimfiles\hscript.vim	/^vmap <F2> <c-v>I\/\/<esc>$/;"	m
<F3>	C:\exVim\vimfiles\cppscript.vim	/^vmap <F3> <c-v>llx$/;"	m
<F3>	C:\exVim\vimfiles\cscript.vim	/^vmap <F3> <c-v>llx$/;"	m
<F3>	C:\exVim\vimfiles\hscript.vim	/^vmap <F3> <c-v>llx$/;"	m
<F5>	C:\exVim\vimfiles\bundle\ex-vimentry\ftplugin\vimentry.vim	/^nnoremap <silent> <buffer> <F5> :call vimentry#apply_project_type()<CR>$/;"	m
<F5>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent>           <F5> :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<F9>	C:\exVim\vimfiles\asmscript.vim	/^noremap <F9> :w<cr>:call Compile()<CR>$/;"	m
<F9>	C:\exVim\vimfiles\inoscript.vim	/^noremap <F9> :w<cr>:call Compile()<CR>$/;"	m
<F9>	C:\exVim\vimfiles\matlabscript.vim	/^map <F9> :!matlab<CR>$/;"	m
<Home>	C:\exVim\vim74\macros\less.vim	/^map <Home> g$/;"	m
<Leader>0	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent> <Leader>0 :EasyhlCancel 0<CR>$/;"	m
<Leader>1	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent> <Leader>1 :EasyhlCancel 1<CR>$/;"	m
<Leader>2	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent> <Leader>2 :EasyhlCancel 2<CR>$/;"	m
<Leader>3	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent> <Leader>3 :EasyhlCancel 3<CR>$/;"	m
<Leader>4	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent> <Leader>4 :EasyhlCancel 4<CR>$/;"	m
<Leader><Leader>	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>K	C:\exVim\vim74\ftplugin\man.vim	/^  nmap <Leader>K :call <SID>PreGetPage(0)<CR>$/;"	m
<Leader>b	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>cr	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^    nmap <silent> <unique> <Leader>cr <Plug>CRV_CRefVimNormal$/;"	m
<Leader>cr	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^    vmap <silent> <unique> <Leader>cr <Plug>CRV_CRefVimVisual$/;"	m
<Leader>ig	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^  nmap <silent><unique> <Leader>ig <Plug>IndentGuidesToggle$/;"	m
<Leader>o	C:\exVim\vim74\ftplugin\changelog.vim	/^    noremap <buffer> <silent> <Leader>o <Esc>:call <SID>new_changelog_entry('')<CR>$/;"	m
<Leader>o	C:\exVim\vim74\ftplugin\changelog.vim	/^  nnoremap <silent> <Leader>o :call <SID>open_changelog()<CR>$/;"	m
<Leader>w	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<LeftDrag>	<RightDrag>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <LeftDrag>	<RightDrag>$/;"	m
<LeftDrag>	<RightDrag>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <LeftDrag>	<RightDrag>$/;"	m
<LeftMouse>	<RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <LeftMouse>	<RightMouse>$/;"	m
<LeftMouse>	<RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <LeftMouse>	<RightMouse>$/;"	m
<LeftRelease>	<RightRelease>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <LeftRelease>	<RightRelease>$/;"	m
<LeftRelease>	<RightRelease>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <LeftRelease>	<RightRelease>$/;"	m
<LocalLeader>0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer>          <LocalLeader>0 \\|:call <SID>ListSpawn("")<CR>$/;"	m
<LocalLeader><Down>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Down> <C-Down>$/;"	m
<LocalLeader><LocalLeader>	C:\exVim\vim74\ftplugin\abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader><Up>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Up> <C-Up>$/;"	m
<LocalLeader>C	C:\exVim\vim74\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	C:\exVim\vim74\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	C:\exVim\vim74\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>C :call <SID>CreateEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>E	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>E :call <SID>OpenEntry(line('.'), '', 'e', 1)<CR>$/;"	m
<LocalLeader>F0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer>          <LocalLeader>F0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>G	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>G \\|:call <SID>GrepAll(1, line('.'), "")<CR>$/;"	m
<LocalLeader>I	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>I :echo Project_GetFname(line('.'))<CR>$/;"	m
<LocalLeader>L	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>L \\|:call <SID>LoadAll(1, line('.'))<CR>$/;"	m
<LocalLeader>R	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>R :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>S	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>W	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>W \\|:call <SID>WipeAll(1, line('.'))<CR>$/;"	m
<LocalLeader>add	C:\exVim\vimfiles\cppscript.vim	/^ noremap    <buffer>  <silent>  <LocalLeader>add         :call AddAnyCase()<CR>$/;"	m
<LocalLeader>add	C:\exVim\vimfiles\cppscript.vim	/^inoremap    <buffer>  <silent>  <LocalLeader>add    <Esc>:call AddAnyCase()<CR>$/;"	m
<LocalLeader>ai	C:\exVim\vimfiles\cppscript.vim	/^ noremap    <buffer>  <silent>  <LocalLeader>ai    <Esc>:call AddAccessor()<CR>$/;"	m
<LocalLeader>ai	C:\exVim\vimfiles\cppscript.vim	/^inoremap    <buffer>  <silent>  <LocalLeader>ai         :call AddAccessor()<CR>$/;"	m
<LocalLeader>c	C:\exVim\vim74\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	C:\exVim\vim74\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	C:\exVim\vim74\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	C:\exVim\vim74\ftplugin\spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>c	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>c :call <SID>CreateEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>e	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>e :call <SID>OpenEntry(line('.'), '', '', 0)<CR>$/;"	m
<LocalLeader>f0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer>          <LocalLeader>f0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>g	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>g \\|:call <SID>GrepAll(0, line('.'), "")<CR>$/;"	m
<LocalLeader>h	C:\exVim\vim74\ftplugin\man.vim	/^      nmap <buffer> <LocalLeader>h <Plug>ManBS$/;"	m
<LocalLeader>i	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>i :echo <SID>RecursivelyConstructDirectives(line('.'))<CR>$/;"	m
<LocalLeader>if	C:\exVim\vimfiles\cppscript.vim	/^inoremap    <buffer>  <silent>  <LocalLeader>if     <Esc>:call C_InsertTemplate("idioms.function")<CR>$/;"	m
<LocalLeader>if	C:\exVim\vimfiles\cscript.vim	/^ noremap    <buffer>  <silent>  <LocalLeader>if         G:call C_InsertTemplate("idioms.function")<CR>$/;"	m
<LocalLeader>if	C:\exVim\vimfiles\cscript.vim	/^inoremap    <buffer>  <silent>  <LocalLeader>if    <Esc>G:call C_InsertTemplate("idioms.function")<CR$/;"	m
<LocalLeader>if	C:\exVim\vimfiles\cscript.vim	/^vnoremap    <buffer>  <silent>  <LocalLeader>if    <Esc>G:call C_InsertTemplate("idioms.function", "v")<CR>$/;"	m
<LocalLeader>l	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>l \\|:call <SID>LoadAll(0, line('.'))<CR>$/;"	m
<LocalLeader>o	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <LocalLeader>o <C-Return>$/;"	m
<LocalLeader>q	C:\exVim\vim74\ftplugin\mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	C:\exVim\vim74\ftplugin\mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>r	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>r :call <SID>RefreshEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>s	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <LocalLeader>s <S-Return>$/;"	m
<LocalLeader>t	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>ud	C:\exVim\vimfiles\cscript.vim	/^ noremap    <buffer>  <silent>  <LocalLeader>ud          :call PushDeclare()<CR>$/;"	m
<LocalLeader>v	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <LocalLeader>v <M-CR>$/;"	m
<LocalLeader>w	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>w \\|:call <SID>WipeAll(0, line('.'))<CR>$/;"	m
<LocalLeader>xi	C:\exVim\vimfiles\cppscript.vim	/^ noremap    <buffer>  <silent>  <LocalLeader>xi         :call InsertClassX()<CR>$/;"	m
<LocalLeader>xi	C:\exVim\vimfiles\cppscript.vim	/^inoremap    <buffer>  <silent>  <LocalLeader>xi    <Esc>:call InsertClassX()<CR>$/;"	m
<M-0>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> <M-0> :EasyhlCancel 0<CR>$/;"	m
<M-1>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> <M-1> :EasyhlWord 1<CR>$/;"	m
<M-1>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> <M-1> :EasyhlRange 1<CR>$/;"	m
<M-2-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <M-2-LeftMouse> <M-CR>$/;"	m
<M-2>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> <M-2> :EasyhlWord 2<CR>$/;"	m
<M-2>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> <M-2> :EasyhlRange 2<CR>$/;"	m
<M-3>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> <M-3> :EasyhlWord 3<CR>$/;"	m
<M-3>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> <M-3> :EasyhlRange 3<CR>$/;"	m
<M-4>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> <M-4> :EasyhlWord 4<CR>$/;"	m
<M-4>	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> <M-4> :EasyhlRange 4<CR>$/;"	m
<M-CR>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <M-CR> <Return><C-W>p$/;"	m
<M-Space>	C:\exVim\vim74\mswin.vim	/^  cnoremap <M-Space> <C-C>:simalt ~<CR>$/;"	m
<M-Space>	C:\exVim\vim74\mswin.vim	/^  inoremap <M-Space> <C-O>:simalt ~<CR>$/;"	m
<M-Space>	C:\exVim\vim74\mswin.vim	/^  noremap <M-Space> :simalt ~<CR>$/;"	m
<M-c>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^imap <M-c> <esc>:call JCommentWriter()<CR>$/;"	m
<M-c>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^map <M-c> :call JCommentWriter()<CR>$/;"	m
<M-n>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^imap <M-n> <esc>:call SearchInvalidComment(0)<cr>a$/;"	m
<M-n>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^map <M-n> :call SearchInvalidComment(0)<cr>$/;"	m
<M-p>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^imap <M-p> <esc>:call SearchInvalidComment(1)<cr>a$/;"	m
<M-p>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^map <M-p> :call SearchInvalidComment(1)<cr>$/;"	m
<PageDown>	C:\exVim\vim74\macros\less.vim	/^map <PageDown> <Space>$/;"	m
<PageUp>	C:\exVim\vim74\macros\less.vim	/^map <PageUp> b$/;"	m
<Plug>(easymotion-activate)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(neosnippet_expand)	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_jump)	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>AutoPairsReturn	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>BUncomOff	C:\exVim\vim74\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	C:\exVim\vim74\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>CRV_CRefVimAsk	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^map  <silent> <unique> <script> <Plug>CRV_CRefVimAsk      :call <SID>CRV_CRefVimAskForWord()<CR>$/;"	m
<Plug>CRV_CRefVimInvoke	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^map  <silent> <unique> <script> <Plug>CRV_CRefVimInvoke   :call <SID>CRV_CRefVimShowContents()<CR>$/;"	m
<Plug>CRV_CRefVimNormal	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^nmap <silent> <unique> <script> <Plug>CRV_CRefVimNormal   :call <SID>CRV_CRefVimWord(expand("<cword>"))<CR>$/;"	m
<Plug>CRV_CRefVimVisual	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^vmap <silent> <unique> <script> <Plug>CRV_CRefVimVisual  y:call <SID>CRV_CRefVimWord('<c-r>"')<CR>$/;"	m
<Plug>CSurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>Comment	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>Csurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DeComment	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>Dsurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>IndentGuidesDisable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesDisable :IndentGuidesDisable<CR>$/;"	m
<Plug>IndentGuidesEnable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesEnable  :IndentGuidesEnable<CR>$/;"	m
<Plug>IndentGuidesToggle	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesToggle  :IndentGuidesToggle<CR>$/;"	m
<Plug>Isurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>LUncomOff	C:\exVim\vim74\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	C:\exVim\vim74\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>MailQuote	C:\exVim\vim74\ftplugin\mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	C:\exVim\vim74\ftplugin\mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>ManBS	C:\exVim\vim74\ftplugin\man.vim	/^    nnoremap <buffer> <Plug>ManBS :%s\/.\\b\/\/g<CR>:setl nomod<CR>''$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>NetrwBrowseX	C:\exVim\vim74\plugin\netrwPlugin.vim	/^ nno <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cfile>"),0)<cr>$/;"	m
<Plug>OCamlPrintType	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
<Plug>OCamlSwitchEdit	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	C:\exVim\vim74\ftplugin\ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
<Plug>ProjectOnly	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <script> <Plug>ProjectOnly :call <SID>DoProjectOnly()<CR>$/;"	m
<Plug>SpecChangelog	C:\exVim\vim74\ftplugin\spec.vim	/^noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>StartSearch	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^noremap <Plug>StartSearch :call <SID>search_compl_start()<CR>\/$/;"	m
<Plug>SurroundRepeat	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>ToggleProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^nnoremap <script> <Plug>ToggleProject :call <SID>DoToggleProject()<CR>$/;"	m
<Plug>Traditional	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VSurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>VisualComment	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Plug>YSsurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Return>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <Return>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<RightDrag>	<LeftDrag>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <RightDrag>	<LeftDrag>$/;"	m
<RightDrag>	<LeftDrag>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <RightDrag>	<LeftDrag>$/;"	m
<RightMouse>	<LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>	<LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nmap     <buffer> <silent> <RightMouse>   <space>$/;"	m
<RightRelease>	<LeftRelease>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 <RightRelease>	<LeftRelease>$/;"	m
<RightRelease>	<LeftRelease>	C:\exVim\vim74\macros\swapmous.vim	/^noremap! <RightRelease>	<LeftRelease>$/;"	m
<S-2-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <S-2-LeftMouse> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<S-Del>	C:\exVim\vim74\mswin.vim	/^vnoremap <S-Del> "+x$/;"	m
<S-Down>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Down>   <C-o>gj$/;"	m
<S-Down>	C:\exVim\vim74\macros\less.vim	/^map <S-Down> <Space>$/;"	m
<S-Insert>		"+gP	C:\exVim\vim74\mswin.vim	/^map <S-Insert>		"+gP$/;"	m
<S-Insert>		<C-R>+	C:\exVim\vim74\mswin.vim	/^cmap <S-Insert>		<C-R>+$/;"	m
<S-Insert>		<C-V>	C:\exVim\vim74\mswin.vim	/^imap <S-Insert>		<C-V>$/;"	m
<S-Insert>		<C-V>	C:\exVim\vim74\mswin.vim	/^vmap <S-Insert>		<C-V>$/;"	m
<S-Insert>	C:\exVim\vim74\gvimrc_example.vim	/^map <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>	C:\exVim\vim74\gvimrc_example.vim	/^map! <S-Insert> <MiddleMouse>$/;"	m
<S-LeftMouse>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <S-LeftMouse>   <LeftMouse>$/;"	m
<S-Return>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <S-Return> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<S-Tab>	C:\exVim\vimfiles\bundle\pydiction\after\ftplugin\python_pydiction.vim	/^inoremap <silent> <buffer> <S-Tab> $/;"	m
<S-Up>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Up>     <C-o>gk$/;"	m
<S-Up>	C:\exVim\vim74\macros\less.vim	/^map <S-Up> b$/;"	m
<SID>:	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>AutoPairsReturn	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>L	C:\exVim\vim74\macros\less.vim	/^  noremap <SID>L L0:redraw<CR>:file<CR>$/;"	m
<SID>L	C:\exVim\vim74\macros\less.vim	/^  noremap <SID>L Lg0:redraw<CR>:file<CR>$/;"	m
<SID>TogBG	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<Space>	C:\exVim\vim74\macros\less.vim	/^noremap <script> <Space> :call <SID>NextPage()<CR><SID>L$/;"	m
<Space>	C:\exVim\vim74\optwin.vim	/^noremap <silent> <buffer> <Space> :call <SID>Space()<CR>$/;"	m
<Tab>	C:\exVim\vim74\ftplugin\cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	C:\exVim\vimfiles\bundle\pydiction\after\ftplugin\python_pydiction.vim	/^inoremap <silent> <buffer> <Tab> $/;"	m
<Tab>	C:\exVim\vimfiles\pyscript.vim	/^vmap <Tab> <c-v>I<Tab><Esc>$/;"	m
<Up>	C:\exVim\vim74\evim.vim	/^inoremap <silent> <Up> <C-R>=pumvisible() ? "\\<lt>Up>" : "\\<lt>C-O>gk"<CR>$/;"	m
<Up>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^      imap <buffer> <Up>     <C-o>gk$/;"	m
<Up>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  nmap <buffer> <Up>   gk$/;"	m
<Up>	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  vmap <buffer> <Up>   gk$/;"	m
<Up>	C:\exVim\vim74\macros\less.vim	/^map <Up> k$/;"	m
<bs>	C:\exVim\vim74\ftplugin\ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-]>	C:\exVim\vim74\ftplugin\man.vim	/^    nnoremap <buffer> <c-]> :call <SID>PreGetPage(v:count)<CR>$/;"	m
<c-n>	C:\exVim\vimfiles\javascript.vim	/^inoremap <expr><c-n> pumvisible()?"\\<c-n>":"\\<c-x>\\<c-u>"$/;"	m
<c-n>	C:\exVim\vimfiles\pyscript.vim	/^imap <c-n> <Tab>$/;"	m
<c-t>	C:\exVim\vim74\ftplugin\man.vim	/^    nnoremap <buffer> <c-t> :call <SID>PopPage()<CR>$/;"	m
<char-166><char-201><char-161>	C:\exVim\vim74\keymap\tamil_tscii.vim	/^no     <char-166><char-201><char-161>$/;"	m
<char-167><char-201><char-161>	C:\exVim\vim74\keymap\tamil_tscii.vim	/^noo    <char-167><char-201><char-161>$/;"	m
<kEnd>	C:\exVim\vim74\macros\less.vim	/^map <kEnd> G$/;"	m
<kHome>	C:\exVim\vim74\macros\less.vim	/^map <kHome> g$/;"	m
<kPageDown>	C:\exVim\vim74\macros\less.vim	/^map <kPageDown> <Space>$/;"	m
<kPageUp>	C:\exVim\vim74\macros\less.vim	/^map <kPageUp> b$/;"	m
<leader>h0	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        nnoremap <unique> <silent> <leader>h0 :EasyhlCancel 0<CR>$/;"	m
<leader>h1	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        nnoremap <unique> <silent> <leader>h1 :EasyhlWord 1<CR>$/;"	m
<leader>h1	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        vnoremap <unique> <silent> <leader>h1 :EasyhlRange 1<CR>$/;"	m
<leader>h2	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        nnoremap <unique> <silent> <leader>h2 :EasyhlWord 2<CR>$/;"	m
<leader>h2	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        vnoremap <unique> <silent> <leader>h2 :EasyhlRange 2<CR>$/;"	m
<leader>h3	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        nnoremap <unique> <silent> <leader>h3 :EasyhlWord 3<CR>$/;"	m
<leader>h3	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        vnoremap <unique> <silent> <leader>h3 :EasyhlRange 3<CR>$/;"	m
<leader>h4	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        nnoremap <unique> <silent> <leader>h4 :EasyhlWord 4<CR>$/;"	m
<leader>h4	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^        vnoremap <unique> <silent> <leader>h4 :EasyhlRange 4<CR>$/;"	m
<leader>sub	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    nnoremap <unique> <silent><leader>sub :%s\/<c-r>q\/<c-r>w\/g<CR><c-o>$/;"	m
<leader>sub	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    vnoremap <unique> <silent><leader>sub  :s\/<c-r>q\/<c-r>w\/g<CR><c-o>$/;"	m
<plug>NERDCommenterAltDelims	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', "insert")<CR>$/;"	m
<space>	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        nnoremap <buffer> <silent> <space>  \\|:silent exec 'vertical resize '.(match(g:proj_flags, '\\Ct')!=-1 && winwidth('.') > g:proj_window_width?(g:proj_window_width):(winwidth('.') + g:proj_window_increment))<CR>$/;"	m
>	C:\exVim\vim74\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	C:\exVim\vim74\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	C:\exVim\vim74\macros\less.vim	/^map > G$/;"	m
>>	C:\exVim\vim74\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	C:\exVim\vim74\macros\less.vim	/^  noremap <script> ? H0:call <SID>Backward()<CR>?$/;"	m
?	C:\exVim\vim74\macros\less.vim	/^  noremap <script> ? Hg0:call <SID>Backward()<CR>?$/;"	m
ABS	C:\exVim\graphviz\include\graphviz\arith.h	46;"	d
ABS	C:\exVim\graphviz\include\graphviz\arith.h	48;"	d
ADDRESS	C:\exVim\graphviz\bin\exparse.h	/^     ADDRESS = 265,$/;"	e	enum:extokentype
ADDRESS	C:\exVim\graphviz\bin\exparse.h	132;"	d
AGATTRWF	C:\exVim\graphviz\include\graphviz\cgraph.h	103;"	d
AGDATA	C:\exVim\graphviz\include\graphviz\cgraph.h	104;"	d
AGDIGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	54;"	d
AGDIGRAPHSTRICT	C:\exVim\graphviz\include\graphviz\graph.h	55;"	d
AGEDGE	C:\exVim\graphviz\include\graphviz\cgraph.h	91;"	d
AGEDGE	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGNODE = 1, AGEDGE, AGGRAPH } agobjkind_t;$/;"	e	enum:__anon12
AGERR	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon5
AGERR	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon11
AGFLAG_DIRECTED	C:\exVim\graphviz\include\graphviz\graph.h	48;"	d
AGFLAG_METAGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	50;"	d
AGFLAG_STRICT	C:\exVim\graphviz\include\graphviz\graph.h	49;"	d
AGGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGNODE = 1, AGEDGE, AGGRAPH } agobjkind_t;$/;"	e	enum:__anon12
AGHEAD	C:\exVim\graphviz\include\graphviz\cgraph.h	408;"	d
AGHEADPOINTER	C:\exVim\graphviz\include\graphviz\cgraph.h	436;"	d
AGID	C:\exVim\graphviz\include\graphviz\cgraph.h	101;"	d
AGIN2OUT	C:\exVim\graphviz\include\graphviz\cgraph.h	402;"	d
AGINEDGE	C:\exVim\graphviz\include\graphviz\cgraph.h	90;"	d
AGLEFTPOINTER	C:\exVim\graphviz\include\graphviz\cgraph.h	438;"	d
AGMAX	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon5
AGMAX	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon11
AGMETAGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	56;"	d
AGMKIN	C:\exVim\graphviz\include\graphviz\cgraph.h	406;"	d
AGMKOUT	C:\exVim\graphviz\include\graphviz\cgraph.h	405;"	d
AGNODE	C:\exVim\graphviz\include\graphviz\cgraph.h	88;"	d
AGNODE	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGNODE = 1, AGEDGE, AGGRAPH } agobjkind_t;$/;"	e	enum:__anon12
AGOPP	C:\exVim\graphviz\include\graphviz\cgraph.h	404;"	d
AGOUT2IN	C:\exVim\graphviz\include\graphviz\cgraph.h	403;"	d
AGOUTEDGE	C:\exVim\graphviz\include\graphviz\cgraph.h	89;"	d
AGPREV	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon5
AGPREV	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon11
AGRAPH	C:\exVim\graphviz\include\graphviz\cgraph.h	87;"	d
AGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	52;"	d
AGRAPHSTRICT	C:\exVim\graphviz\include\graphviz\graph.h	53;"	d
AGRIGHTPOINTER	C:\exVim\graphviz\include\graphviz\cgraph.h	437;"	d
AGSEQ	C:\exVim\graphviz\include\graphviz\cgraph.h	102;"	d
AGSNMAIN	C:\exVim\graphviz\include\graphviz\cgraph.h	456;"	d
AGTAG	C:\exVim\graphviz\include\graphviz\cgraph.h	99;"	d
AGTAIL	C:\exVim\graphviz\include\graphviz\cgraph.h	407;"	d
AGTYPE	C:\exVim\graphviz\include\graphviz\cgraph.h	100;"	d
AGWARN	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon5
AGWARN	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	e	enum:__anon11
AG_IS_DIRECTED	C:\exVim\graphviz\include\graphviz\graph.h	58;"	d
AG_IS_METAGRAPH	C:\exVim\graphviz\include\graphviz\graph.h	60;"	d
AG_IS_STRICT	C:\exVim\graphviz\include\graphviz\graph.h	59;"	d
AND	C:\exVim\graphviz\bin\exparse.h	/^     AND = 323,$/;"	e	enum:extokentype
AND	C:\exVim\graphviz\bin\exparse.h	190;"	d
APIS	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef enum { APIS _DUMMY_ELEM_=0 } api_t; \/* API_render, API_layout, ... *\/$/;"	e	enum:__anon13
APIS	C:\exVim\graphviz\include\graphviz\gvcext.h	28;"	d
APPROXEQ	C:\exVim\graphviz\include\graphviz\geom.h	80;"	d
APPROXEQPT	C:\exVim\graphviz\include\graphviz\geom.h	81;"	d
ARRAY	C:\exVim\graphviz\bin\exparse.h	/^     ARRAY = 266,$/;"	e	enum:extokentype
ARRAY	C:\exVim\graphviz\bin\exparse.h	133;"	d
ARRAY_SIZE	C:\exVim\graphviz\include\graphviz\gvcjob.h	26;"	d
ATT_GRAPH_H	C:\exVim\graphviz\include\graphviz\cgraph.h	15;"	d
AVG	C:\exVim\graphviz\include\graphviz\arith.h	50;"	d
Abaqus_ToggleComment	C:\exVim\vim74\ftplugin\abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
Accents	C:\exVim\vim74\syntax\tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
AcceptSelection	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
Action	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^interface Action {$/;"	i
Action.results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public Result[] results() ;$/;"	m	interface:Action	access:public	signature:()
Action.value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Action	access:public	signature:()
ActionImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public ActionImpl(String n,Result[] r) {$/;"	m	class:ActionImpl	access:public	signature:(String n,Result[] r)
ActionImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^class ActionImpl implements Action {$/;"	c	inherits:Action
ActionImpl.ActionImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public ActionImpl(String n,Result[] r) {$/;"	m	class:ActionImpl	access:public	signature:(String n,Result[] r)
ActionImpl.annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.exceptionMappings	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public ExceptionMapping[] exceptionMappings() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.interceptorRefs	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public InterceptorRef[] interceptorRefs() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String name ;$/;"	f	class:ActionImpl	access:default
ActionImpl.params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.res	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	Result[] res;$/;"	f	class:ActionImpl	access:default
ActionImpl.results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Result[] results() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String value() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public ActionImpl2(String n,Result[] r) {$/;"	m	class:ActionImpl2	access:public	signature:(String n,Result[] r)
ActionImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^class ActionImpl2 implements Action {$/;"	c	inherits:Action
ActionImpl2.ActionImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public ActionImpl2(String n,Result[] r) {$/;"	m	class:ActionImpl2	access:public	signature:(String n,Result[] r)
ActionImpl2.annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String name ;$/;"	f	class:ActionImpl2	access:default
ActionImpl2.params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.res	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	Result[] res;$/;"	f	class:ActionImpl2	access:default
ActionImpl2.results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Result[] results() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String value() {$/;"	m	class:ActionImpl2	access:public	signature:()
Add	C:\exVim\vim74\syntax\cucumber.vim	/^function! s:Add(name)$/;"	f
AddAccessor	C:\exVim\vimfiles\cppscript.vim	/^function! AddAccessor()$/;"	f
AddAnyCase	C:\exVim\vimfiles\cppscript.vim	/^function! AddAnyCase()$/;"	f
AddAutoCommands	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:AddAutoCommands()$/;"	f
AddBlockTag	C:\exVim\vim74\indent\html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
AddBlockTag	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:AddBlockTag(tag, id, ...) "{{{$/;"	f
AddEmpty	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^fun! s:AddEmpty()$/;"	f
AddEntry	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function AddEntry()$/;"	f
AddFloatingWindow	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:AddFloatingWindow(title,ver,max,min)$/;"	f
AddFloatingWindows	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:AddFloatingWindows()$/;"	f
AddITags	C:\exVim\vim74\indent\html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
AddITags	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:AddITags(taglist) "{{{$/;"	f
AddLeftDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddLine	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddLmIfMathH	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:AddLmIfMathH(compiling_info) " {{{2$/;"	f
AddMethods	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! s:AddMethods() $/;"	f
AddRightDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddTabularPattern	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddToClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
AddToPreviews	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! s:AddToPreviews(kind,name)$/;"	f
AdjustPos	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int AdjustPos(LPRECT rect,char *in)$/;"	f	signature:(LPRECT rect,char *in)
AdjustPos	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int AdjustPos(LPRECT rect,char *in)$/;"	f	signature:(LPRECT rect,char *in)
AdjustPosEx	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int AdjustPosEx(LPRECT rect, int w,int h)$/;"	f	signature:(LPRECT rect, int w,int h)
AdjustPosEx	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int AdjustPosEx(LPRECT rect, int w,int h)$/;"	f	signature:(LPRECT rect, int w,int h)
Agattr_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agattr_s {		\/* dynamic string attributes *\/$/;"	s
Agattr_s::dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *dict;		\/* shared dict to interpret attr field *\/$/;"	m	struct:Agattr_s	access:public
Agattr_s::h	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t h;			\/* common data header *\/$/;"	m	struct:Agattr_s	access:public
Agattr_s::str	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char **str;			\/* the attribute string values *\/$/;"	m	struct:Agattr_s	access:public
Agattr_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agattr_s Agattr_t;	\/* string attribute container *\/$/;"	t	typeref:struct:Agattr_s
Agcbdisc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agcbdisc_s {$/;"	s
Agcbdisc_s::__anon3::del	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjfn_t del;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_s::__anon3::ins	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjfn_t ins;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_s::__anon3::mod	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjupdfn_t mod;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_s::edge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_s::graph	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_s::node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
Agcbdisc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agcbdisc_s Agcbdisc_t;	\/* client event callbacks *\/$/;"	t	typeref:struct:Agcbdisc_s
Agcbstack_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agcbstack_s {		\/* object event callbacks *\/$/;"	s
Agcbstack_s::f	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbdisc_t *f;		\/* methods *\/$/;"	m	struct:Agcbstack_s	access:public
Agcbstack_s::prev	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbstack_t *prev;		\/* kept in a stack, unlike other disciplines *\/$/;"	m	struct:Agcbstack_s	access:public
Agcbstack_s::state	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *state;		\/* closure *\/$/;"	m	struct:Agcbstack_s	access:public
Agcbstack_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agcbstack_s Agcbstack_t;	\/* enclosing state for cbdisc *\/$/;"	t	typeref:struct:Agcbstack_s
Agclos_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agclos_s {$/;"	s
Agclos_s::callbacks_enabled	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char callbacks_enabled;	\/* issue user callbacks or hold them? *\/$/;"	m	struct:Agclos_s	access:public
Agclos_s::cb	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbstack_t *cb;		\/* user and system callback function stacks *\/$/;"	m	struct:Agclos_s	access:public
Agclos_s::disc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdisc_t disc;		\/* resource discipline functions *\/$/;"	m	struct:Agclos_s	access:public
Agclos_s::lookup_by_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *lookup_by_id[3];$/;"	m	struct:Agclos_s	access:public
Agclos_s::lookup_by_name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *lookup_by_name[3];$/;"	m	struct:Agclos_s	access:public
Agclos_s::seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned long seq[3];	\/* local object sequence number counter *\/$/;"	m	struct:Agclos_s	access:public
Agclos_s::state	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdstate_t state;		\/* resource closures *\/$/;"	m	struct:Agclos_s	access:public
Agclos_s::strdict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *strdict;		\/* shared string dict *\/$/;"	m	struct:Agclos_s	access:public
Agclos_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agclos_s Agclos_t;	\/* common fields for graph\/subgs *\/$/;"	t	typeref:struct:Agclos_s
Agdata_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agdata_t {		\/* for main graph *\/$/;"	s
Agdata_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agdata_t Agdata_t;$/;"	t	typeref:struct:Agdata_t
Agdata_t::edgeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *edgeattr;$/;"	m	struct:Agdata_t	access:public
Agdata_t::globattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *globattr;$/;"	m	struct:Agdata_t	access:public
Agdata_t::max_edge_id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int max_node_id, max_edge_id;$/;"	m	struct:Agdata_t	access:public
Agdata_t::max_node_id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int max_node_id, max_edge_id;$/;"	m	struct:Agdata_t	access:public
Agdata_t::node_dict	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *node_dict;$/;"	m	struct:Agdata_t	access:public
Agdata_t::nodeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *nodeattr;$/;"	m	struct:Agdata_t	access:public
Agdatadict_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agdatadict_s {		\/* set of dictionaries per graph *\/$/;"	s
Agdatadict_s::__anon4::e	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
Agdatadict_s::__anon4::g	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
Agdatadict_s::__anon4::n	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
Agdatadict_s::dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } dict;$/;"	m	struct:Agdatadict_s	typeref:struct:Agdatadict_s::__anon4	access:public
Agdatadict_s::h	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t h;			\/* installed in list of graph recs *\/$/;"	m	struct:Agdatadict_s	access:public
Agdatadict_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agdatadict_s Agdatadict_t;	\/* set of dictionaries per graph *\/$/;"	t	typeref:struct:Agdatadict_s
Agdesc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agdesc_s {		\/* graph descriptor *\/$/;"	s
Agdesc_s::directed	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned directed:1;	\/* if edges are asymmetric *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::flatlock	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned flatlock:1;	\/* if sets are flattened into lists in cdt *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::has_attrs	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned has_attrs:1;	\/* if string attr tables should be initialized *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::has_cmpnd	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned has_cmpnd:1;	\/* if may contain collapsed nodes *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::maingraph	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned maingraph:1;	\/* if this is the top level graph *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::no_loop	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned no_loop:1;		\/* if no loops *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::no_write	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned no_write:1;	\/* if a temporary subgraph *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_s::strict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned strict:1;		\/* if multi-edges forbidden *\/$/;"	m	struct:Agdesc_s	access:public
Agdesc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agdesc_s Agdesc_t;	\/* graph descriptor *\/$/;"	t	typeref:struct:Agdesc_s
Agdict_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agdict_t {$/;"	s
Agdict_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agdict_t Agdict_t;$/;"	t	typeref:struct:Agdict_t
Agdict_t::dict	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *dict;$/;"	m	struct:Agdict_t	access:public
Agdict_t::list	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agsym_t **list;$/;"	m	struct:Agdict_t	access:public
Agdict_t::name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agdict_t	access:public
Agdisc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agdisc_s {		\/* user's discipline *\/$/;"	s
Agdisc_s::id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agiddisc_t *id;$/;"	m	struct:Agdisc_s	access:public
Agdisc_s::io	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agiodisc_t *io;$/;"	m	struct:Agdisc_s	access:public
Agdisc_s::mem	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agmemdisc_t *mem;$/;"	m	struct:Agdisc_s	access:public
Agdisc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agdisc_s Agdisc_t;	\/* union of client discipline methods *\/$/;"	t	typeref:struct:Agdisc_s
Agdstate_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agdstate_s {$/;"	s
Agdstate_s::id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *id;$/;"	m	struct:Agdstate_s	access:public
Agdstate_s::mem	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *mem;$/;"	m	struct:Agdstate_s	access:public
Agdstate_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agdstate_s Agdstate_t;	\/* client state (closures) *\/$/;"	t	typeref:struct:Agdstate_s
Agedge_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agedge_s {$/;"	s
Agedge_s::base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agedge_s	access:public
Agedge_s::id_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t id_link;		\/* main graph only *\/$/;"	m	struct:Agedge_s	access:public
Agedge_s::node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agnode_t *node;		\/* the endpoint node *\/$/;"	m	struct:Agedge_s	access:public
Agedge_s::seq_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t seq_link;$/;"	m	struct:Agedge_s	access:public
Agedge_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agedge_s Agedge_t;	\/* node pair *\/$/;"	t	typeref:struct:Agedge_s
Agedge_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agedge_t {$/;"	s
Agedge_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agedge_t Agedge_t;$/;"	t	typeref:struct:Agedge_t
Agedge_t::attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agedge_t	access:public
Agedge_t::didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agedge_t	access:public
Agedge_t::handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agedge_t	access:public
Agedge_t::head	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *head, *tail;$/;"	m	struct:Agedge_t	access:public
Agedge_t::id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int id;$/;"	m	struct:Agedge_t	access:public
Agedge_t::printkey	C:\exVim\graphviz\include\graphviz\graph.h	/^	int printkey:4;$/;"	m	struct:Agedge_t	access:public
Agedge_t::tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agedge_t	access:public
Agedge_t::tail	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *head, *tail;$/;"	m	struct:Agedge_t	access:public
Agedge_t::u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agedgeinfo_t u;$/;"	m	struct:Agedge_t	access:public
Agedgeinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agedgeinfo_t {$/;"	s
Agedgeinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } Agedgeinfo_t;$/;"	t	typeref:struct:Agedgeinfo_t
Agedgeinfo_t::adjacent	C:\exVim\graphviz\include\graphviz\types.h	/^	char adjacent;          \/* true for flat edge with adjacent nodes *\/$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::conc_opp_flag	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean conc_opp_flag;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::count	C:\exVim\graphviz\include\graphviz\types.h	/^	short count;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::cutvalue	C:\exVim\graphviz\include\graphviz\types.h	/^	int cutvalue, tree_index;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double dist;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::edge_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char edge_type;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::factor	C:\exVim\graphviz\include\graphviz\types.h	/^	double factor;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Edge state for GUI ops *\/$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::head_label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::head_port	C:\exVim\graphviz\include\graphviz\types.h	/^	port tail_port, head_port;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::label_ontop	C:\exVim\graphviz\include\graphviz\types.h	/^	char label_ontop;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::minlen	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short minlen;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::path	C:\exVim\graphviz\include\graphviz\types.h	/^	Ppolyline_t path;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char showboxes;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::spl	C:\exVim\graphviz\include\graphviz\types.h	/^	splines *spl;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::tail_label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::tail_port	C:\exVim\graphviz\include\graphviz\types.h	/^	port tail_port, head_port;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::to_orig	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *to_orig;	\/* for dot's shapes.c    *\/$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::to_virt	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *to_virt;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::tree_index	C:\exVim\graphviz\include\graphviz\types.h	/^	int cutvalue, tree_index;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::weight	C:\exVim\graphviz\include\graphviz\types.h	/^	int weight;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::xlabel	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgeinfo_t::xpenalty	C:\exVim\graphviz\include\graphviz\types.h	/^	short xpenalty;$/;"	m	struct:Agedgeinfo_t	access:public
Agedgepair_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agedgepair_s {$/;"	s
Agedgepair_s::in	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agedge_t out, in;$/;"	m	struct:Agedgepair_s	access:public
Agedgepair_s::out	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agedge_t out, in;$/;"	m	struct:Agedgepair_s	access:public
Agedgepair_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agedgepair_s Agedgepair_t;	\/* the edge object *\/$/;"	t	typeref:struct:Agedgepair_s
Agedgeref_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef Dtlink_t	Agedgeref_t;$/;"	t
Agiddisc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agiddisc_s {		\/* object ID allocator *\/$/;"	s
Agiddisc_s::alloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    long (*alloc) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::close	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*close) (void *state);$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::free	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*free) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::idregister	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*idregister) (void *state, int objtype, void *obj);$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::map	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    long (*map) (void *state, int objtype, char *str, unsigned long *id,$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::open	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*open) (Agraph_t * g, Agdisc_t*);	\/* associated with a graph *\/$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_s::print	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *(*print) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
Agiddisc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agiddisc_s Agiddisc_t;	\/* object ID allocator *\/$/;"	t	typeref:struct:Agiddisc_s
Agiodisc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agiodisc_s {$/;"	s
Agiodisc_s::afread	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*afread) (void *chan, char *buf, int bufsize);$/;"	m	struct:Agiodisc_s	access:public
Agiodisc_s::flush	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*flush) (void *chan);	\/* sync *\/$/;"	m	struct:Agiodisc_s	access:public
Agiodisc_s::putstr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*putstr) (void *chan, const char *str);$/;"	m	struct:Agiodisc_s	access:public
Agiodisc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agiodisc_s Agiodisc_t;	\/* IO services *\/$/;"	t	typeref:struct:Agiodisc_s
Agmemdisc_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agmemdisc_s {		\/* memory allocator *\/$/;"	s
Agmemdisc_s::alloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*alloc) (void *state, size_t req);$/;"	m	struct:Agmemdisc_s	access:public
Agmemdisc_s::close	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*close) (void *state);$/;"	m	struct:Agmemdisc_s	access:public
Agmemdisc_s::free	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*free) (void *state, void *ptr);$/;"	m	struct:Agmemdisc_s	access:public
Agmemdisc_s::open	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*open) (Agdisc_t*);	\/* independent of other resources *\/$/;"	m	struct:Agmemdisc_s	access:public
Agmemdisc_s::resize	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*resize) (void *state, void *ptr, size_t old, size_t req);$/;"	m	struct:Agmemdisc_s	access:public
Agmemdisc_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agmemdisc_s Agmemdisc_t;	\/* memory allocator *\/$/;"	t	typeref:struct:Agmemdisc_s
Agnode_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agnode_s {$/;"	s
Agnode_s::base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agnode_s	access:public
Agnode_s::mainsub	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agsubnode_t mainsub;	\/* embedded for main graph *\/$/;"	m	struct:Agnode_s	access:public
Agnode_s::root	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *root;$/;"	m	struct:Agnode_s	access:public
Agnode_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agnode_s Agnode_t;	\/* node (atom) *\/$/;"	t	typeref:struct:Agnode_s
Agnode_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agnode_t {$/;"	s
Agnode_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agnode_t Agnode_t;$/;"	t	typeref:struct:Agnode_t
Agnode_t::attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agnode_t	access:public
Agnode_t::didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agnode_t	access:public
Agnode_t::graph	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraph_t *graph;$/;"	m	struct:Agnode_t	access:public
Agnode_t::handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agnode_t	access:public
Agnode_t::id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int id;$/;"	m	struct:Agnode_t	access:public
Agnode_t::name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agnode_t	access:public
Agnode_t::pad	C:\exVim\graphviz\include\graphviz\graph.h	/^	int pad:4;$/;"	m	struct:Agnode_t	access:public
Agnode_t::tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agnode_t	access:public
Agnode_t::u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnodeinfo_t u;$/;"	m	struct:Agnode_t	access:public
Agnodeinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agnodeinfo_t {$/;"	s
Agnodeinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } Agnodeinfo_t;$/;"	t	typeref:struct:Agnodeinfo_t
Agnodeinfo_t::UF_parent	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *UF_parent;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::UF_size	C:\exVim\graphviz\include\graphviz\types.h	/^	int UF_size;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::clust	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *clust;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::clustnode	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean clustnode;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::coord	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf coord;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double *pos, dist;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::flat_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::flat_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Node state for GUI ops *\/$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::has_port	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean  has_port;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::heapindex	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::height	C:\exVim\graphviz\include\graphviz\types.h	/^	double width, height;  \/* inches *\/$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::hops	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::ht	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::id	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::inleaf	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *inleaf, *outleaf;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::lim	C:\exVim\graphviz\include\graphviz\types.h	/^	int low, lim;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::low	C:\exVim\graphviz\include\graphviz\types.h	/^	int low, lim;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::lw	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::mark	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::mval	C:\exVim\graphviz\include\graphviz\types.h	/^	double mval;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::next	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *next, *prev;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::node_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::onstack	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::order	C:\exVim\graphviz\include\graphviz\types.h	/^	int rank, order;	\/* initially, order = 1 for ordered edges *\/$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::other	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::outleaf	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *inleaf, *outleaf;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::pad	C:\exVim\graphviz\include\graphviz\types.h	/^	double pad[1];$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::par	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *par;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::pinned	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char pinned;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::pos	C:\exVim\graphviz\include\graphviz\types.h	/^	double *pos, dist;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::prev	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *next, *prev;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::priority	C:\exVim\graphviz\include\graphviz\types.h	/^	int priority;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::rank	C:\exVim\graphviz\include\graphviz\types.h	/^	int rank, order;	\/* initially, order = 1 for ordered edges *\/$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::ranktype	C:\exVim\graphviz\include\graphviz\types.h	/^	char ranktype, weight_class;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::rep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t* rep;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::rw	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::save_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist save_in, save_out;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::save_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist save_in, save_out;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::set	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *set;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::shape	C:\exVim\graphviz\include\graphviz\types.h	/^	shape_desc *shape;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::shape_info	C:\exVim\graphviz\include\graphviz\types.h	/^	void *shape_info;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char showboxes;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::state	C:\exVim\graphviz\include\graphviz\types.h	/^	char state;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::tree_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist tree_in, tree_out;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::tree_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist tree_in, tree_out;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::weight_class	C:\exVim\graphviz\include\graphviz\types.h	/^	char ranktype, weight_class;$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::width	C:\exVim\graphviz\include\graphviz\types.h	/^	double width, height;  \/* inches *\/$/;"	m	struct:Agnodeinfo_t	access:public
Agnodeinfo_t::xlabel	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *xlabel;$/;"	m	struct:Agnodeinfo_t	access:public
Agnoderef_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef Agsubnode_t	Agnoderef_t;$/;"	t
Agobj_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agobj_s {$/;"	s
Agobj_s::data	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t *data;$/;"	m	struct:Agobj_s	access:public
Agobj_s::tag	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agtag_t tag;$/;"	m	struct:Agobj_s	access:public
Agobj_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agobj_s Agobj_t;	\/* generic object header *\/$/;"	t	typeref:struct:Agobj_s
Agproto_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agproto_t {$/;"	s
Agproto_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agproto_t Agproto_t;$/;"	t	typeref:struct:Agproto_t
Agproto_t::e	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agedge_t *e;$/;"	m	struct:Agproto_t	access:public
Agproto_t::n	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *n;$/;"	m	struct:Agproto_t	access:public
Agproto_t::prev	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agproto_t *prev;$/;"	m	struct:Agproto_t	access:public
Agraph_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agraph_s {$/;"	s
Agraph_s::base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agraph_s	access:public
Agraph_s::clos	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agclos_t *clos;		\/* shared resources *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::desc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdesc_t desc;$/;"	m	struct:Agraph_s	access:public
Agraph_s::e_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *e_seq, *e_id;	\/* holders for edge sets *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::e_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *e_seq, *e_id;	\/* holders for edge sets *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::g_dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *g_dict;		\/* subgraphs - descendants *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t link;$/;"	m	struct:Agraph_s	access:public
Agraph_s::n_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *n_id;		\/* the node set indexed by ID *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::n_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *n_seq;		\/* the node set in sequence *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::parent	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *parent, *root;	\/* subgraphs - ancestors *\/$/;"	m	struct:Agraph_s	access:public
Agraph_s::root	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *parent, *root;	\/* subgraphs - ancestors *\/$/;"	m	struct:Agraph_s	access:public
Agraph_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agraph_s Agraph_t;	\/* graph, subgraph (or hyperedge) *\/$/;"	t	typeref:struct:Agraph_s
Agraph_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agraph_t {$/;"	s
Agraph_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agraph_t Agraph_t;$/;"	t	typeref:struct:Agraph_t
Agraph_t::attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agraph_t	access:public
Agraph_t::didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agraph_t	access:public
Agraph_t::handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agraph_t	access:public
Agraph_t::inedges	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
Agraph_t::kind	C:\exVim\graphviz\include\graphviz\graph.h	/^	int kind:4;$/;"	m	struct:Agraph_t	access:public
Agraph_t::meta_node	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *meta_node;$/;"	m	struct:Agraph_t	access:public
Agraph_t::name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agraph_t	access:public
Agraph_t::nodes	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
Agraph_t::outedges	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
Agraph_t::proto	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agproto_t *proto;$/;"	m	struct:Agraph_t	access:public
Agraph_t::root	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraph_t *root;$/;"	m	struct:Agraph_t	access:public
Agraph_t::tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agraph_t	access:public
Agraph_t::u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraphinfo_t u;$/;"	m	struct:Agraph_t	access:public
Agraph_t::univ	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdata_t *univ;$/;"	m	struct:Agraph_t	access:public
Agraphinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agraphinfo_t {$/;"	s
Agraphinfo_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } Agraphinfo_t;$/;"	t	typeref:struct:Agraphinfo_t
Agraphinfo_t::alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;			\/* bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::border	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf border[4];	\/* sizes of margins for graph labels *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::charset	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char charset; \/* input character set *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::cleanup	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*cleanup) (graph_t * g);   \/* function to deallocate layout-specific data *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::clust	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t **clust;	\/* clusters are in clust[1..n_cluster] !!! *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::comp	C:\exVim\graphviz\include\graphviz\types.h	/^	nlist_t comp;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::dotroot	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *dotroot;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::drawing	C:\exVim\graphviz\include\graphviz\types.h	/^	layout_t *drawing;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::exact_ranksep	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean exact_ranksep;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::expanded	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean expanded;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::flags	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short flags;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::fontnames	C:\exVim\graphviz\include\graphviz\types.h	/^	fontname_kind fontnames;		\/* to override mangling in SVG *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Graph state for GUI ops *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::gvc	C:\exVim\graphviz\include\graphviz\types.h	/^	GVC_t *gvc;	\/* context for "globals" over multiple graphs *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::has_flat_edges	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_flat_edges;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::has_images	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_images;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::has_labels	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char has_labels;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::has_sinkrank	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_sinkrank;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::has_sourcerank	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_sourcerank;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::ht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* below and above extremal ranks *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::ht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* below and above extremal ranks *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::installed	C:\exVim\graphviz\include\graphviz\types.h	/^	char installed;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label;	\/* if the cluster has a title *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::label_pos	C:\exVim\graphviz\include\graphviz\types.h	/^	char label_pos;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::leader	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *leader, **rankleader;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::level	C:\exVim\graphviz\include\graphviz\types.h	/^	int level;		\/* cluster nesting level (not node level!) *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::ln	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *ln, *rn;	\/* left, right nodes of bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::maxrank	C:\exVim\graphviz\include\graphviz\types.h	/^	short minrank, maxrank;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::maxrep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t	*minrep, *maxrep;	\/* set leaders for min and max rank *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::maxset	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *minset, *maxset;	\/* set leaders *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::minrank	C:\exVim\graphviz\include\graphviz\types.h	/^	short minrank, maxrank;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::minrep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t	*minrep, *maxrep;	\/* set leaders for min and max rank *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::minset	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *minset, *maxset;	\/* set leaders *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::move	C:\exVim\graphviz\include\graphviz\types.h	/^	int move;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::n_cluster	C:\exVim\graphviz\include\graphviz\types.h	/^	int n_cluster;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::n_nodes	C:\exVim\graphviz\include\graphviz\types.h	/^	long n_nodes;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::ndim	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short ndim;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::neato_nlist	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **neato_nlist;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::nlist	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *nlist;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::nodesep	C:\exVim\graphviz\include\graphviz\types.h	/^	int nodesep, ranksep;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::odim	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short odim;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::parent	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *parent;        \/* containing cluster (not parent subgraph) *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::rank	C:\exVim\graphviz\include\graphviz\types.h	/^	rank_t *rank;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::rankdir	C:\exVim\graphviz\include\graphviz\types.h	/^	int rankdir;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::rankleader	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *leader, **rankleader;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::ranksep	C:\exVim\graphviz\include\graphviz\types.h	/^	int nodesep, ranksep;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::rn	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *ln, *rn;	\/* left, right nodes of bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::set_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char set_type;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char	showboxes;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::spring	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::sum_t	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
Agraphinfo_t::t	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
Agrec_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agrec_s {$/;"	s
Agrec_s::name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *name;$/;"	m	struct:Agrec_s	access:public
Agrec_s::next	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t *next;$/;"	m	struct:Agrec_s	access:public
Agrec_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agrec_s Agrec_t;	\/* generic runtime record *\/$/;"	t	typeref:struct:Agrec_s
Agsubnode_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agsubnode_s {		\/* the node-per-graph-or-subgraph record *\/$/;"	s
Agsubnode_s::id_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t id_link;$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::in_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_id, *out_id;	\/* by node\/ID for random access *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::in_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_seq, *out_seq;	\/* by node\/sequence for serial access *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agnode_t *node;		\/* the object *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::out_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_id, *out_id;	\/* by node\/ID for random access *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::out_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_seq, *out_seq;	\/* by node\/sequence for serial access *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_s::seq_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t seq_link;		\/* must be first *\/$/;"	m	struct:Agsubnode_s	access:public
Agsubnode_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agsubnode_s Agsubnode_t;$/;"	t	typeref:struct:Agsubnode_s
Agsym_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agsym_s {		\/* symbol in one of the above dictionaries *\/$/;"	s
Agsym_s::defval	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *defval;		\/* its default value for initialization *\/$/;"	m	struct:Agsym_s	access:public
Agsym_s::fixed	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char fixed;	\/* immutable value *\/$/;"	m	struct:Agsym_s	access:public
Agsym_s::id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int id;			\/* its index in attr[] *\/$/;"	m	struct:Agsym_s	access:public
Agsym_s::kind	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char kind;		\/* referent object type *\/$/;"	m	struct:Agsym_s	access:public
Agsym_s::link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t link;$/;"	m	struct:Agsym_s	access:public
Agsym_s::name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *name;			\/* attribute's name *\/$/;"	m	struct:Agsym_s	access:public
Agsym_s::print	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char print;	\/* always print *\/$/;"	m	struct:Agsym_s	access:public
Agsym_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agsym_s Agsym_t;	\/* string attribute descriptors *\/$/;"	t	typeref:struct:Agsym_s
Agsym_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    struct Agsym_t {$/;"	s
Agsym_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef struct Agsym_t Agsym_t;$/;"	t	typeref:struct:Agsym_t
Agsym_t::fixed	C:\exVim\graphviz\include\graphviz\graph.h	/^	unsigned char fixed;$/;"	m	struct:Agsym_t	access:public
Agsym_t::index	C:\exVim\graphviz\include\graphviz\graph.h	/^	int index;$/;"	m	struct:Agsym_t	access:public
Agsym_t::name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name, *value;$/;"	m	struct:Agsym_t	access:public
Agsym_t::printed	C:\exVim\graphviz\include\graphviz\graph.h	/^	unsigned char printed;$/;"	m	struct:Agsym_t	access:public
Agsym_t::value	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name, *value;$/;"	m	struct:Agsym_t	access:public
Agtag_s	C:\exVim\graphviz\include\graphviz\cgraph.h	/^struct Agtag_s {$/;"	s
Agtag_s::attrwf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned attrwf:1;		\/* attrs written (parity, write.c) *\/$/;"	m	struct:Agtag_s	access:public
Agtag_s::id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned long id;		\/* client  ID *\/$/;"	m	struct:Agtag_s	access:public
Agtag_s::mtflock	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned mtflock:1;		\/* move-to-front lock, see above *\/$/;"	m	struct:Agtag_s	access:public
Agtag_s::objtype	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned objtype:2;		\/* see literal tags below *\/$/;"	m	struct:Agtag_s	access:public
Agtag_s::seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned seq:(sizeof(unsigned) * 8 - 4);	\/* sequence no. *\/$/;"	m	struct:Agtag_s	access:public
Agtag_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef struct Agtag_s Agtag_t;$/;"	t	typeref:struct:Agtag_s
Alien2	C:\exVim\vim74\indent\html.vim	/^func! s:Alien2()$/;"	f
Alien2	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:Alien2() "{{{$/;"	f
Alien3	C:\exVim\vim74\indent\html.vim	/^func! s:Alien3()$/;"	f
Alien3	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:Alien3() "{{{$/;"	f
Alien4	C:\exVim\vim74\indent\html.vim	/^func! s:Alien4()$/;"	f
Alien4	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:Alien4() "{{{$/;"	f
Alien5	C:\exVim\vim74\indent\html.vim	/^func! s:Alien5()$/;"	f
Alien5	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:Alien5() "{{{$/;"	f
AltMultipart	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AntSyntaxScript	C:\exVim\vim74\syntax\ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
AppendCommentToLine	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
AppendPropCarefully	C:\exVim\vim74\tools\xcmdsrv_client.c	/^AppendPropCarefully(dpy, window, property, value, length)$/;"	f	file:
AppendPropCarefully	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static int	AppendPropCarefully __ARGS((Display *display,$/;"	p	file:	signature:(Display *display, Window window, Atom property, char *value, int length)
AppendStars	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:AppendStars(amount)$/;"	f
AppendStr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:AppendStr(string)$/;"	f
Args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^function! s:Args() " {{{2$/;"	f
AttributeElement	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^	class AttributeElement #{{{2$/;"	c	class:Vjde
AutoFill	C:\exVim\vimfiles\cppscript.vim	/^function! AutoFill()$/;"	f
AutoPairsBackInsert	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsBackInsert()$/;"	f
AutoPairsDelete	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsFastWrap()$/;"	f
AutoPairsInit	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsInit()$/;"	f
AutoPairsInsert	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsInsert(key)$/;"	f
AutoPairsJump	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsJump()$/;"	f
AutoPairsMap	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsMap(key)$/;"	f
AutoPairsReturn	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsReturn()$/;"	f
AutoPairsSpace	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsSpace()$/;"	f
AutoPairsToggle	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsToggle()$/;"	f
AutoPairsTryInit	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! AutoPairsTryInit()$/;"	f
B2BF	C:\exVim\graphviz\include\graphviz\geom.h	77;"	d
BEGIN	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	79;"	d	file:
BETWEEN	C:\exVim\graphviz\include\graphviz\arith.h	75;"	d
BETWEEN	C:\exVim\graphviz\include\graphviz\arith.h	77;"	d
BF2B	C:\exVim\graphviz\include\graphviz\geom.h	78;"	d
BMAdd	C:\exVim\vim74\menu.vim	/^func! s:BMAdd()$/;"	f
BMFilename	C:\exVim\vim74\menu.vim	/^func! s:BMFilename(name, num)$/;"	f
BMHash	C:\exVim\vim74\menu.vim	/^func! s:BMHash(name)$/;"	f
BMHash2	C:\exVim\vim74\menu.vim	/^func! s:BMHash2(name)$/;"	f
BMMunge	C:\exVim\vim74\menu.vim	/^func! s:BMMunge(fname, bnum)$/;"	f
BMRemove	C:\exVim\vim74\menu.vim	/^func! s:BMRemove()$/;"	f
BMShow	C:\exVim\vim74\menu.vim	/^func! s:BMShow(...)$/;"	f
BMTruncName	C:\exVim\vim74\menu.vim	/^func! s:BMTruncName(fname)$/;"	f
BREAK	C:\exVim\graphviz\bin\exparse.h	/^     BREAK = 267,$/;"	e	enum:extokentype
BREAK	C:\exVim\graphviz\bin\exparse.h	134;"	d
BROWSER	C:\exVim\graphviz\bin\config.h	6;"	d
Backward	C:\exVim\vim74\macros\less.vim	/^fun! s:Backward()$/;"	f
Base	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^from .base import Base$/;"	i
BasePath	C:\exVim\vim74\tools\ccfilter.c	/^char	       BasePath[1024];$/;"	v
BeginElementFound	C:\exVim\vim74\indent\erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
BeginElementFoundIfEmpty	C:\exVim\vim74\indent\erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
BeginningOfClauseFound	C:\exVim\vim74\indent\erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol)$/;"	f
Bin2Dec	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Bin2Dec(bin)$/;"	f
BinOptionG	C:\exVim\vim74\optwin.vim	/^fun! <SID>BinOptionG(name, val)$/;"	f
BinOptionL	C:\exVim\vim74\optwin.vim	/^fun! <SID>BinOptionL(name)$/;"	f
BindzoneCheck	C:\exVim\vim74\filetype.vim	/^func! s:BindzoneCheck(default)$/;"	f
Blame	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Block_pattern	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
Blocktag	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:Blocktag(blocktag, ind) "{{{$/;"	f
Bookmark.AddBookmark	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.compareTo	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufEnterHook	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
BufReadIndex	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufReadPostHook	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufWriteIndexFile	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufWritePostHook	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
BuildCaseTable	C:\exVim\vim74\tools\unicode.vim	/^func! BuildCaseTable(name, index)$/;"	f
BuildCombiningTable	C:\exVim\vim74\tools\unicode.vim	/^func! BuildCombiningTable()$/;"	f
BuildFoldTable	C:\exVim\vim74\tools\unicode.vim	/^func! BuildFoldTable()$/;"	f
BuildPrompt	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuildWidthTable	C:\exVim\vim74\tools\unicode.vim	/^func! BuildWidthTable(pattern, tableName)$/;"	f
Builtin	C:\exVim\vim74\syntax\reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Builtins.cd	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.cd cd$/;"	m
Builtins.echo	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.echo echo$/;"	m
Builtins.eval	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.eval eval$/;"	m
Builtins.exec	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.exec exec$/;"	m
Builtins.export	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.export export$/;"	m
Builtins.getopts	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.getopts getopts$/;"	m
Builtins.hash	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.hash hash$/;"	m
Builtins.newgrp	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.newgrp newgrp$/;"	m
Builtins.pwd	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.pwd pwd$/;"	m
Builtins.read	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.read read$/;"	m
Builtins.readonly	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.readonly readonly$/;"	m
Builtins.return	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.return return$/;"	m
Builtins.times	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.times times$/;"	m
Builtins.type	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.type type$/;"	m
Builtins.umask	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.umask umask$/;"	m
Builtins.wait	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Builtins.wait wait$/;"	m
Bundle	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
CALL	C:\exVim\graphviz\bin\exparse.h	/^     CALL = 268,$/;"	e	enum:extokentype
CALL	C:\exVim\graphviz\bin\exparse.h	135;"	d
CASE	C:\exVim\graphviz\bin\exparse.h	/^     CASE = 269,$/;"	e	enum:extokentype
CASE	C:\exVim\graphviz\bin\exparse.h	136;"	d
CAST	C:\exVim\graphviz\bin\exparse.h	/^     CAST = 334,$/;"	e	enum:extokentype
CAST	C:\exVim\graphviz\bin\exparse.h	201;"	d
CDT_VERSION	C:\exVim\graphviz\include\graphviz\cdt.h	9;"	d
CHARACTER	C:\exVim\graphviz\bin\exparse.h	/^     CHARACTER = 261,$/;"	e	enum:extokentype
CHARACTER	C:\exVim\graphviz\bin\exparse.h	128;"	d
CLASS_FILE_TYPE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String CLASS_FILE_TYPE = "class";$/;"	f	class:DynamicClassLoader	access:public
CLASS_PATH	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String CLASS_PATH$/;"	f	class:DynamicClassLoader	access:public
CLIPBB	C:\exVim\graphviz\include\graphviz\geom.h	57;"	d
CLUSTER_OBJTYPE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {ROOTGRAPH_OBJTYPE, CLUSTER_OBJTYPE, NODE_OBJTYPE, EDGE_OBJTYPE} obj_type;$/;"	e	enum:__anon23
CMP	C:\exVim\graphviz\include\graphviz\arith.h	52;"	d
CMYK_BYTE	C:\exVim\graphviz\include\graphviz\color.h	/^typedef enum { HSVA_DOUBLE, RGBA_BYTE, RGBA_WORD, CMYK_BYTE,$/;"	e	enum:__anon6
CMakeGetIndent	C:\exVim\vim74\indent\cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COLOR_INDEX	C:\exVim\graphviz\include\graphviz\color.h	/^		RGBA_DOUBLE, COLOR_STRING, COLOR_INDEX } color_type_t;$/;"	e	enum:__anon6
COLOR_MALLOC_FAIL	C:\exVim\graphviz\include\graphviz\color.h	47;"	d
COLOR_OK	C:\exVim\graphviz\include\graphviz\color.h	49;"	d
COLOR_STRING	C:\exVim\graphviz\include\graphviz\color.h	/^		RGBA_DOUBLE, COLOR_STRING, COLOR_INDEX } color_type_t;$/;"	e	enum:__anon6
COLOR_UNKNOWN	C:\exVim\graphviz\include\graphviz\color.h	48;"	d
COLUM	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	g	file:
COMMA	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String COMMA = ",";$/;"	f	class:Completion	access:public
COMMENT	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
COMPILER_AIX	C:\exVim\vim74\tools\ccfilter.c	37;"	d	file:
COMPILER_ATT	C:\exVim\vim74\tools\ccfilter.c	38;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	57;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	59;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	61;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	63;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	65;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	67;"	d	file:
COMPILER_DEFAULT	C:\exVim\vim74\tools\ccfilter.c	69;"	d	file:
COMPILER_GCC	C:\exVim\vim74\tools\ccfilter.c	36;"	d	file:
COMPILER_HPUX	C:\exVim\vim74\tools\ccfilter.c	41;"	d	file:
COMPILER_IRIX	C:\exVim\vim74\tools\ccfilter.c	39;"	d	file:
COMPILER_Names	C:\exVim\vim74\tools\ccfilter.c	/^char	*COMPILER_Names[][2] =$/;"	v
COMPILER_QTY	C:\exVim\vim74\tools\ccfilter.c	54;"	d	file:
COMPILER_SOLARIS	C:\exVim\vim74\tools\ccfilter.c	40;"	d	file:
COMPILER_UNKNOWN	C:\exVim\vim74\tools\ccfilter.c	35;"	d	file:
CONSTANT	C:\exVim\graphviz\bin\exparse.h	/^     CONSTANT = 270,$/;"	e	enum:extokentype
CONSTANT	C:\exVim\graphviz\bin\exparse.h	137;"	d
CONTAINS	C:\exVim\graphviz\include\graphviz\geom.h	48;"	d
CONTINUE	C:\exVim\graphviz\bin\exparse.h	/^     CONTINUE = 271,$/;"	e	enum:extokentype
CONTINUE	C:\exVim\graphviz\bin\exparse.h	138;"	d
CR	C:\exVim\vim74\optwin.vim	/^fun! <SID>CR()$/;"	f
CRV_CRefVimAskForWord	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function <SID>CRV_CRefVimAskForWord()$/;"	f
CRV_CRefVimShowContents	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function <SID>CRV_CRefVimShowContents()$/;"	f
CRV_CRefVimWord	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function <SID>CRV_CRefVimWord(str)$/;"	f
CRefVim	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:CRefVim(str)$/;"	f
CRefVimAskForWord	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:CRefVimAskForWord()$/;"	f
CSC	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteBySymbolFile CSC call excscope#get_searchresult('<args>', 'c')$/;"	c
CSCD	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSCD call excscope#go_direct('c') " Find functions calling this function$/;"	c
CSCOPE_CMD	C:\exVim\vimfiles\tools\shell\batch\update-cscope.bat	/^    set CSCOPE_CMD="%TOOLS%\\windows\\cscope.exe"$/;"	v
CSD	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteBySymbolFile CSD call excscope#get_searchresult('<args>', 'da')$/;"	c
CSDD	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSDD call excscope#go_direct('da') " Find functions called by this function$/;"	c
CSE	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteBySymbolFile CSE call excscope#get_searchresult('<args>', 'e')$/;"	c
CSED	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSED call excscope#go_direct('e') " Find this egrep pattern$/;"	c
CSG	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteBySymbolFile CSG call excscope#get_searchresult('<args>', 'g')$/;"	c
CSGD	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSGD call excscope#go_direct('g') " Find this definition$/;"	c
CSH	C:\exVim\vim74\filetype.vim	/^func! s:CSH()$/;"	f
CSI	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteByProjectFile CSI call excscope#get_searchresult('<args>', 'i')$/;"	c
CSIC	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSIC call excscope#get_searchresult(fnamemodify( bufname("%"), ":p:t" ), 'i')$/;"	c
CSID	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSID call excscope#go_direct('i') " Find files #including this file$/;"	c
CSParser	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^	public class CSParser {$/;"	c	namespace:Wangfc	access:public
CSS	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -nargs=1 -complete=customlist,exUtility#CompleteBySymbolFile CSS call excscope#get_searchresult('<args>', 's')$/;"	c
CSS1	C:\exVim\vim74\syntax\2html.vim	/^function! s:CSS1(id)$/;"	f
CSSD	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! CSSD call excscope#go_direct('s') " Find this C symbol$/;"	c
CSSIndent	C:\exVim\vim74\indent\html.vim	/^func! s:CSSIndent()$/;"	f
CSSIndent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:CSSIndent() "{{{$/;"	f
CSelect	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol CSelect call excscope#select('<args>')$/;"	c
CTAGS_CMD	C:\exVim\vimfiles\tools\shell\batch\update-tags.bat	/^    set CTAGS_CMD="%TOOLS%\\windows\\ctags.exe"$/;"	v
CTOR_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int CTOR_INFO = 1;$/;"	f	class:ClassInfo	access:public
CWD	C:\exVim\vim74\tools\ccfilter.c	/^char	       CWD[1024];$/;"	v
CWD_PATTERN	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^    set CWD_PATTERN=%%a$/;"	v
CWD_PATTERN	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^set CWD_PATTERN=%cd%$/;"	v
CacheErrors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
CalcVCol	C:\exVim\vim74\indent\erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
CalculateStats	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^public class CalculateStats {$/;"	c
CalculateStats.Choices	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    protected enum Choices {$/;"	g	class:CalculateStats	access:protected
CalculateStats.Choices.Choices	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        private Choices(int value){ this.value = value; }$/;"	m	class:CalculateStats.Choices	file:	access:private	signature:(int value)
CalculateStats.Choices.value	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        private int value;$/;"	f	class:CalculateStats.Choices	file:	access:private
CalculateStats.fromulate	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    public static boolean fromulate() throws FoobarException{$/;"	m	class:CalculateStats	access:public	signature:()
CalculateStats.main	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    public static void main(String[] args) throws Exception{$/;"	m	class:CalculateStats	access:public	signature:(String[] args)
CalculateStats.testtry	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    private String testtry(){$/;"	m	class:CalculateStats	file:	access:private	signature:()
CanCommentLine	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
Cancell	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:Cancell() " {{{$/;"	f
CdlAsignment	C:\exVim\vim74\indent\cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	C:\exVim\vim74\indent\cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
Center	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
CfHiLink	C:\exVim\vim74\syntax\cf.vim	/^command -nargs=+ CfHiLink hi def link <args>$/;"	c
CheckBlockTag	C:\exVim\vim74\indent\html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
CheckFileType	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:CheckFileType()$/;"	f
CheckForString	C:\exVim\vim74\indent\clojure.vim	/^	function! s:CheckForString()$/;"	f
CheckTag	C:\exVim\vim74\indent\html.vim	/^func! s:CheckTag(itag)$/;"	f
CheckTag	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:CheckTag(itag) "{{{$/;"	f
CheckToIgnoreRightParan	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:CheckToIgnoreRightParan( prev_lnum, num_levels )$/;"	f
Check_inp	C:\exVim\vim74\filetype.vim	/^func! s:Check_inp()$/;"	f
ChgDir	C:\exVim\vim74\autoload\vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChgDir	C:\exVim\vim74\autoload\zip.vim	/^fun! s:ChgDir(newdir,errlvl,errmsg)$/;"	f
Choices	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        private Choices(int value){ this.value = value; }$/;"	m	class:CalculateStats.Choices	file:	access:private	signature:(int value)
Choices	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    protected enum Choices {$/;"	g	class:CalculateStats	access:protected
Choose	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
Choose	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseCommandMap	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^public class ClassInfo {$/;"	c
ClassInfo.CTOR_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int CTOR_INFO = 1;$/;"	f	class:ClassInfo	access:public
ClassInfo.DOUBLE_QUOTE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:ClassInfo	access:public
ClassInfo.END_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String END_PAREN = ")";$/;"	f	class:ClassInfo	access:public
ClassInfo.FIELD_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int FIELD_INFO = 0;$/;"	f	class:ClassInfo	access:public
ClassInfo.INNER_CLASS_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int INNER_CLASS_INFO = 3;$/;"	f	class:ClassInfo	access:public
ClassInfo.LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String LIST = "list";$/;"	f	class:ClassInfo	access:public
ClassInfo.METHOD_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int METHOD_INFO = 2;$/;"	f	class:ClassInfo	access:public
ClassInfo.NIL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String NIL = "nil";$/;"	f	class:ClassInfo	access:public
ClassInfo.NL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String NL = "\\n";$/;"	f	class:ClassInfo	access:public
ClassInfo.PACKAGE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PACKAGE   = 2;$/;"	f	class:ClassInfo	access:public
ClassInfo.PRIVATE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:ClassInfo	access:public
ClassInfo.PROTECTED	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PROTECTED = 1;$/;"	f	class:ClassInfo	access:public
ClassInfo.PUBLIC	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:ClassInfo	access:public
ClassInfo.SPACE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String SPACE = " ";$/;"	f	class:ClassInfo	access:public
ClassInfo.START_LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String START_LIST;$/;"	f	class:ClassInfo	access:public
ClassInfo.START_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String START_PAREN = "(";$/;"	f	class:ClassInfo	access:public
ClassInfo.T	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String T = "t";$/;"	f	class:ClassInfo	access:public
ClassInfo.accessLevel	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static String accessLevel(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
ClassInfo.className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  static String className(Class c) {$/;"	m	class:ClassInfo	access:default	signature:(Class c)
ClassInfo.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void getClassInfo(String className,$/;"	m	class:ClassInfo	access:public	signature:(String className, String[]imports,String path)
ClassInfo.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void getClassInfo(String className,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className,String path)
ClassInfo.getInheritedInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^ private static void getInheritedInnerClasses(Class c, StringBuffer sb)  {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.getInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static void getInnerClasses(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.getMemberInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static void getMemberInfo(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.hasMember	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void hasMember(String className, String memberName,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className, String memberName,String path)
ClassInfo.innerClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer innerClassInfo(Class ic) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class ic)
ClassInfo.isAccessible	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers, int level)
ClassInfo.isAncestorOf	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:ClassInfo	access:public	signature:(String ancestor, String child)
ClassInfo.listClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  static StringBuffer listClasses(Class[] classes) {$/;"	m	class:ClassInfo	access:default	signature:(Class[] classes)
ClassInfo.listExceptions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer listExceptions(Class[] classes) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class[] classes)
ClassInfo.listModifiers	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer listModifiers(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
ClassInfo.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void main (String[] args) {$/;"	m	class:ClassInfo	access:public	signature:(String[] args)
ClassInfo.printWithinQuotes	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:ClassInfo	file:	access:private	signature:(String item)
ClassInfo.tokenizeCtor	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeCtor(Constructor ctor) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Constructor ctor)
ClassInfo.tokenizeField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeField(Field field) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Field field)
ClassInfo.tokenizeMethod	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeMethod(Method method) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Method method)
ClassPathDir	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    ClassPathDir (File directory) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory)
ClassPathDir	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^class ClassPathDir extends ClassPathEntry {$/;"	c	inherits:ClassPathEntry
ClassPathDir.ClassPathDir	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    ClassPathDir (File directory) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory)
ClassPathDir.addRecursively	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    void addRecursively(File directory, File rootDir) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory, File rootDir)
ClassPathDir.directory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    private File directory;$/;"	f	class:ClassPathDir	file:	access:private
ClassPathDir.load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    void load() {$/;"	m	class:ClassPathDir	access:default	signature:()
ClassPathDir.toString	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    public String toString() {$/;"	m	class:ClassPathDir	access:public	signature:()
ClassPathEntry	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    ClassPathEntry () {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^abstract class ClassPathEntry {$/;"	c
ClassPathEntry.ClassPathEntry	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    ClassPathEntry () {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.addClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected void addClass(String qualifiedName) {$/;"	m	class:ClassPathEntry	access:protected	signature:(String qualifiedName)
ClassPathEntry.clear	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    void clear() {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.entryMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    private static Map entryMap = new HashMap();$/;"	f	class:ClassPathEntry	file:	access:private
ClassPathEntry.getClassNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    List getClassNames(String unqualifiedName)$/;"	m	class:ClassPathEntry	access:default	signature:(String unqualifiedName)
ClassPathEntry.instanceForEntry	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    static ClassPathEntry instanceForEntry(File resource)$/;"	m	class:ClassPathEntry	access:default	signature:(File resource)
ClassPathEntry.isLoaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    public boolean isLoaded() {$/;"	m	class:ClassPathEntry	access:public	signature:()
ClassPathEntry.load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    abstract void load() throws IOException;$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.loaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected boolean loaded = false;$/;"	f	class:ClassPathEntry	access:protected
ClassPathEntry.nameToClassMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected MultiValueMap nameToClassMap = new MultiValueMap();$/;"	f	class:ClassPathEntry	access:protected
ClassPathEntry.reload	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    void reload() throws IOException {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.setLoaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    public void setLoaded(boolean loaded) {$/;"	m	class:ClassPathEntry	access:public	signature:(boolean loaded)
ClassPathZip	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    ClassPathZip (File zipOrJar) {$/;"	m	class:ClassPathZip	access:default	signature:(File zipOrJar)
ClassPathZip	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^class ClassPathZip extends ClassPathEntry {$/;"	c	inherits:ClassPathEntry
ClassPathZip.ClassPathZip	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    ClassPathZip (File zipOrJar) {$/;"	m	class:ClassPathZip	access:default	signature:(File zipOrJar)
ClassPathZip.load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    void load() throws IOException {$/;"	m	class:ClassPathZip	access:default	signature:()
ClassPathZip.toString	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    public String toString() {$/;"	m	class:ClassPathZip	access:public	signature:()
ClassPathZip.zipOrJar	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    private File zipOrJar;$/;"	f	class:ClassPathZip	file:	access:private
ClassSep	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
ClassesByName	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassesByName.java	/^public class ClassesByName {$/;"	c
ClassesByName.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassesByName.java	/^	public static void main(String[] args) {$/;"	m	class:ClassesByName	access:public	signature:(String[] args)
CleanUp	C:\exVim\vim74\macros\matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUp	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClearAllCtrlPCaches	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
ClearCtrlPCache	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
ClearTokenCacheIfNeeded	C:\exVim\vim74\indent\erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
Clearstack	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:Clearstack(sname)$/;"	f
ClojureCheckForStringWorker	C:\exVim\vim74\indent\clojure.vim	/^	function! s:ClojureCheckForStringWorker()$/;"	f
ClojureIsMethodSpecialCaseWorker	C:\exVim\vim74\indent\clojure.vim	/^	function! s:ClojureIsMethodSpecialCaseWorker(position)$/;"	f
Close	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:Close()$/;"	f
CloseBug	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function CloseBug()$/;"	f
CobolIndentBlock	C:\exVim\vim74\ftplugin\cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
CoffeeBufNew	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
Col	C:\exVim\vim74\tools\ccfilter.c	/^unsigned long  Col;$/;"	v
ColoredText	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void ColoredText(int r , int g, int b ,char *p , int l) ;$/;"	p	file:	signature:(int r , int g, int b ,char *p , int l)
ColoredText	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void ColoredText(int r , int g, int b ,char *p , int l) {$/;"	f	signature:(int r , int g, int b ,char *p , int l)
Comment	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:Comment(arg)$/;"	f
CommentBlock	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
Commit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareCompilerPriority	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:CompareCompilerPriority(compiler1, compiler2) " {{{1$/;"	f
Compile	C:\exVim\vimfiles\asmscript.vim	/^function! Compile()$/;"	f
Compile	C:\exVim\vimfiles\inoscript.vim	/^function! Compile()$/;"	f
CompileInternal	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:CompileInternal(arg_list, async) " compile only {{{1$/;"	f
CompileRunInternal	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:CompileRunInternal(comp_param, async) " {{{1$/;"	f
CompilerSet	C:\exVim\vim74\compiler\ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\bcc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\checkstyle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\decada.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fortran_F.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fortran_cv.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fortran_elf90.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fortran_g77.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fortran_lf95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\fpc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\g95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\gfortran.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\gnat.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\hp_acc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\icc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\ifort.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\intel.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\irix5_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\irix5_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\javac.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\jikes.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\mips_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\mipspro_c89.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\mipspro_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\modelsim_vcom.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\msbuild.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\neato.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\onsgmls.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\pbx.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\perl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\php.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\pyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\se.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\splint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\xbuild.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\xmllint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vim74\compiler\xmlwf.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vimfiles\bundle\vim-matlab\compiler\mlint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	C:\exVim\vimfiles\bundle\vjde\compiler\javac_ex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteTabularizeCommand	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
Completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^public class Completion {$/;"	c
Completion.COMMA	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String COMMA = ",";$/;"	f	class:Completion	access:public
Completion.DEFAULT	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int DEFAULT   = 2;$/;"	f	class:Completion	access:public
Completion.DOUBLE_QUOTE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:Completion	access:public
Completion.END_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String END_PAREN = "]";$/;"	f	class:Completion	access:public
Completion.LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String LIST = "";$/;"	f	class:Completion	access:public
Completion.NIL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String NIL = "[]";$/;"	f	class:Completion	access:public
Completion.NL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String NL = "\\n";$/;"	f	class:Completion	access:public
Completion.PRIVATE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:Completion	access:public
Completion.PROTECTED	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PROTECTED = 1;$/;"	f	class:Completion	access:public
Completion.PUBLIC	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:Completion	access:public
Completion.SPACE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String SPACE = " ";$/;"	f	class:Completion	access:public
Completion.START_LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String START_LIST;$/;"	f	class:Completion	access:public
Completion.START_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String START_PAREN = "[";$/;"	f	class:Completion	access:public
Completion.T	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String T = "t";$/;"	f	class:Completion	access:public
Completion.className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String className(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
Completion.componentName	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String componentName(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
Completion.getClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static Class getClass(DynamicClassLoader dcl,String path,String name,String[] imports) {$/;"	m	class:Completion	file:	access:private	signature:(DynamicClassLoader dcl,String path,String name,String[] imports)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className) {$/;"	m	class:Completion	access:public	signature:(String path,String className)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className, int level) {$/;"	m	class:Completion	access:public	signature:(String path,String className, int level)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports,int level)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports)
Completion.getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports,int level) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports,int level)
Completion.isAccessible	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:Completion	file:	access:private	signature:(int modifiers, int level)
Completion.isAncestorOf	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:Completion	access:public	signature:(String ancestor, String child)
Completion.listClassArray	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String listClassArray(Class[] classes) {$/;"	m	class:Completion	access:default	signature:(Class[] classes)
Completion.listClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void listClassInfo(Class c, int level, StringBuffer sb) {$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.listConstructors	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void listConstructors(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void main (String[] args) {$/;"	m	class:Completion	access:public	signature:(String[] args)
Completion.printClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printClass(String name) {$/;"	m	class:Completion	file:	access:private	signature:(String name)
Completion.printConstructor	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printConstructor(String name, Class[] params) {$/;"	m	class:Completion	file:	access:private	signature:(String name, Class[] params)
Completion.printExceptions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printExceptions(Class[] exceptions) {$/;"	m	class:Completion	file:	access:private	signature:(Class[] exceptions)
Completion.printField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^   private static String printField(String leader,String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String leader,String name, String type)
Completion.printField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printField(String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String name, String type)
Completion.printMethod	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printMethod(String name,$/;"	m	class:Completion	file:	access:private	signature:(String name, String returnType, Class[] args)
Completion.printWithinQuotes	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:Completion	file:	access:private	signature:(String item)
Completion.recursiveListFields	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListFields(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.recursiveListInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListInnerClasses(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.recursiveListMethods	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListMethods(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Component	C:\exVim\vim74\tools\shtags.pl	/^Component:	$id[1]$/;"	l
ComposePath	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:ComposePath(base,subdir)$/;"	f
ConditionalWriter	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! ConditionalWriter()$/;"	f
ConstructInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:ConstructInfo(home, c_d, scriptin, scriptout, flags, filter)$/;"	f
ConvertLeadingSpacesToTabs	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
Count	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountBrackets	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:CountBrackets( buffer )$/;"	f
CountITags	C:\exVim\vim74\indent\html.vim	/^func! s:CountITags(text)$/;"	f
CountITags	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:CountITags(...) "{{{$/;"	f
CountNonESCedOccurances	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CountTagsAndState	C:\exVim\vim74\indent\html.vim	/^func! s:CountTagsAndState(text)$/;"	f
CountUnbalancedParan	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:CountUnbalancedParan( line, paran_to_check )$/;"	f
CountWrapper	C:\exVim\vim74\ftplugin\vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
CppDocReader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^	class CppDocReader #{{{2$/;"	c	class:Vjde
CreateCoordKeyDict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreateDelimMapFromCms	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateEntriesFromDir	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:CreateEntriesFromDir(recursive)$/;"	f
CreateMaps	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreateNewFile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
Creator.BufNamePrefix	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CssFirstUnfinished	C:\exVim\vim74\indent\html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
CssPrevNonComment	C:\exVim\vim74\indent\html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
CssUnfinished	C:\exVim\vim74\indent\html.vim	/^func! s:CssUnfinished(text)$/;"	f
CtagsCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! CtagsCompletion(word,...) "{{{2$/;"	f
CtagsCompletion2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! CtagsCompletion2(cls,word,...) "{{{2$/;"	f
CtagsTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    class CtagsTag #{{{2$/;"	c	class:Vjde
CtagsTagList	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    class CtagsTagList #{{{2$/;"	c	class:Vjde
CtagsTag_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! CtagsTag_New(name, file, kind, line, scope, inherits, className, access,ns,cmd)$/;"	f
CtrlP	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CucumberComplete	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentChar	C:\exVim\vim74\indent\clojure.vim	/^	function! s:CurrentChar()$/;"	f
CurrentLineWhitespaceOff	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! -nargs=* CurrentLineWhitespaceOff call <SID>CurrentLineWhitespaceOff( <f-args> )$/;"	c
CurrentLineWhitespaceOff	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:CurrentLineWhitespaceOff( level )$/;"	f
CurrentLineWhitespaceOn	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! CurrentLineWhitespaceOn call <SID>CurrentLineWhitespaceOn()$/;"	c
CurrentLineWhitespaceOn	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:CurrentLineWhitespaceOn()$/;"	f
CurrentWord	C:\exVim\vim74\indent\clojure.vim	/^	function! s:CurrentWord()$/;"	f
CursorPos	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^function! CursorPos()$/;"	f
Cycle	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DEC	C:\exVim\graphviz\bin\exparse.h	/^     DEC = 332,$/;"	e	enum:extokentype
DEC	C:\exVim\graphviz\bin\exparse.h	199;"	d
DECLARE	C:\exVim\graphviz\bin\exparse.h	/^     DECLARE = 272,$/;"	e	enum:extokentype
DECLARE	C:\exVim\graphviz\bin\exparse.h	139;"	d
DEF	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^  DEF: 123$/;"	r
DEFAULT	C:\exVim\graphviz\bin\exparse.h	/^     DEFAULT = 273,$/;"	e	enum:extokentype
DEFAULT	C:\exVim\graphviz\bin\exparse.h	140;"	d
DEFAULT	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int DEFAULT   = 2;$/;"	f	class:Completion	access:public
DEFAULT_DPI	C:\exVim\graphviz\bin\config.h	22;"	d
DEFAULT_FONTPATH	C:\exVim\graphviz\bin\config.h	25;"	d
DEGREES	C:\exVim\graphviz\include\graphviz\arith.h	89;"	d
DENNIS	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        NORTH(1), SOUTH(2), EAST(3), DENNIS(4);$/;"	e	enum:CalculateStats.Choices	file:	access:public
DIGCOLA	C:\exVim\graphviz\bin\config.h	28;"	d
DIST	C:\exVim\graphviz\include\graphviz\geom.h	63;"	d
DIST2	C:\exVim\graphviz\include\graphviz\geom.h	62;"	d
DOC_LENGTH	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	13;"	d	file:
DOUBLE_QUOTE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:ClassInfo	access:public
DOUBLE_QUOTE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:Completion	access:public
DTDISC	C:\exVim\graphviz\include\graphviz\cdt.h	107;"	d
DTD_Attribute	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^	class DTD_Attribute #{{{2$/;"	c	class:Vjde
DTD_Element	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^	class DTD_Element #{{{2$/;"	c	class:Vjde
DTD_Entity	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^	class DTD_Entity #{{{2$/;"	c	class:Vjde
DTD_Loader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^    class DTD_Loader #{{{2$/;"	c	class:Vjde
DTD_Parser	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^	class DTD_Parser #{{{2$/;"	c	class:Vjde
DTOFFSET	C:\exVim\graphviz\include\graphviz\cdt.h	114;"	d
DTOFFSET	C:\exVim\graphviz\include\graphviz\cdt.h	116;"	d
DTTREEMATCH	C:\exVim\graphviz\include\graphviz\cdt.h	292;"	d
DTTREESEARCH	C:\exVim\graphviz\include\graphviz\cdt.h	293;"	d
DT_APPEND	C:\exVim\graphviz\include\graphviz\cdt.h	174;"	d
DT_ATTACH	C:\exVim\graphviz\include\graphviz\cdt.h	172;"	d
DT_BAG	C:\exVim\graphviz\include\graphviz\cdt.h	147;"	d
DT_CLEAR	C:\exVim\graphviz\include\graphviz\cdt.h	167;"	d
DT_CLOSE	C:\exVim\graphviz\include\graphviz\cdt.h	178;"	d
DT_DELETE	C:\exVim\graphviz\include\graphviz\cdt.h	162;"	d
DT_DEQUE	C:\exVim\graphviz\include\graphviz\cdt.h	153;"	d
DT_DETACH	C:\exVim\graphviz\include\graphviz\cdt.h	173;"	d
DT_DISC	C:\exVim\graphviz\include\graphviz\cdt.h	179;"	d
DT_ENDCLOSE	C:\exVim\graphviz\include\graphviz\cdt.h	182;"	d
DT_ENDOPEN	C:\exVim\graphviz\include\graphviz\cdt.h	181;"	d
DT_FIRST	C:\exVim\graphviz\include\graphviz\cdt.h	168;"	d
DT_FOUND	C:\exVim\graphviz\include\graphviz\cdt.h	143;"	d
DT_HASHSIZE	C:\exVim\graphviz\include\graphviz\cdt.h	183;"	d
DT_INSERT	C:\exVim\graphviz\include\graphviz\cdt.h	161;"	d
DT_LAST	C:\exVim\graphviz\include\graphviz\cdt.h	169;"	d
DT_LIST	C:\exVim\graphviz\include\graphviz\cdt.h	150;"	d
DT_MATCH	C:\exVim\graphviz\include\graphviz\cdt.h	170;"	d
DT_METH	C:\exVim\graphviz\include\graphviz\cdt.h	180;"	d
DT_METHODS	C:\exVim\graphviz\include\graphviz\cdt.h	154;"	d
DT_NEXT	C:\exVim\graphviz\include\graphviz\cdt.h	164;"	d
DT_OBAG	C:\exVim\graphviz\include\graphviz\cdt.h	149;"	d
DT_OPEN	C:\exVim\graphviz\include\graphviz\cdt.h	177;"	d
DT_OSET	C:\exVim\graphviz\include\graphviz\cdt.h	148;"	d
DT_PREV	C:\exVim\graphviz\include\graphviz\cdt.h	165;"	d
DT_PRIME	C:\exVim\graphviz\include\graphviz\cdt.h	319;"	d
DT_QUEUE	C:\exVim\graphviz\include\graphviz\cdt.h	152;"	d
DT_RENEW	C:\exVim\graphviz\include\graphviz\cdt.h	166;"	d
DT_SAMECMP	C:\exVim\graphviz\include\graphviz\cdt.h	157;"	d
DT_SAMEHASH	C:\exVim\graphviz\include\graphviz\cdt.h	158;"	d
DT_SEARCH	C:\exVim\graphviz\include\graphviz\cdt.h	163;"	d
DT_SET	C:\exVim\graphviz\include\graphviz\cdt.h	146;"	d
DT_STACK	C:\exVim\graphviz\include\graphviz\cdt.h	151;"	d
DT_VSEARCH	C:\exVim\graphviz\include\graphviz\cdt.h	171;"	d
DYNAMIC	C:\exVim\graphviz\bin\exparse.h	/^     DYNAMIC = 274,$/;"	e	enum:extokentype
DYNAMIC	C:\exVim\graphviz\bin\exparse.h	141;"	d
Date	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	C:\exVim\vim74\ftplugin\debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	C:\exVim\vim74\ftplugin\debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	C:\exVim\vim74\ftplugin\debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
DebugPrintReturn	C:\exVim\vim74\indent\php.vim	/^function! DebugPrintReturn(scriptLine)$/;"	f
Dec2Bin	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Dec2Bin(b10)$/;"	f
Dec2Hex	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Dec2Hex(b10)$/;"	f
Dec2Oct	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Dec2Oct(b10)$/;"	f
Dec2Rom	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Dec2Rom(dec)$/;"	f
DecreaseFunc	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
DecreaseIndent	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:DecreaseIndent()$/;"	f
Def	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^  Def: 123$/;"	r
DefPython	C:\exVim\vim74\autoload\python3complete.vim	/^function! s:DefPython()$/;"	f
DefPython	C:\exVim\vim74\autoload\pythoncomplete.vim	/^function! s:DefPython()$/;"	f
DefRuby	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineInlineMarkup	C:\exVim\vim74\syntax\rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
DefineOneInlineMarkup	C:\exVim\vim74\syntax\rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
DetectCoffee	C:\exVim\vimfiles\bundle\vim-coffee-script\ftdetect\coffee.vim	/^function! s:DetectCoffee()$/;"	f
DetectCompiler	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:DetectCompiler(lang_name) " {{{1$/;"	f
DetectCompilerGenerally	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:DetectCompilerGenerally(compiling_command) " {{{2$/;"	f
DetectGmake	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\make.vim	/^function! s:DetectGmake(not_used_arg)$/;"	f
Dict2info	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:Dict2info(dict)$/;"	f
Dict_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dt_s		Dict_t;	\/* for libdict compatibility *\/$/;"	t	typeref:struct:_dt_s
Diff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DiffGitCached	C:\exVim\vim74\ftplugin\gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DiffOrig	C:\exVim\vim74\vimrc_example.vim	/^  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis$/;"	c
DirComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DisableWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! DisableWhitespace call <SID>DisableWhitespace()$/;"	c
DisableWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:DisableWhitespace()$/;"	f
Dispatch	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DisplayInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DisplayInfo()$/;"	f
Distribution	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function Distribution(dist)$/;"	f
DoEnsurePlacementSize_au	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoEnsurePlacementSize_au()$/;"	f
DoEntryFromDir	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoEntryFromDir(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
DoFoldOrOpenEntry	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoFoldOrOpenEntry(cmd0, cmd1)$/;"	f
DoMatchParen	C:\exVim\vim74\plugin\matchparen.vim	/^command! DoMatchParen runtime plugin\/matchparen.vim | windo doau CursorMoved$/;"	c
DoProjectOnly	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        function! s:DoProjectOnly()$/;"	f
DoRemoteReply	C:\exVim\vim74\plugin\rrhelper.vim	/^function DoRemoteReply(id, cnt, group, file)$/;"	f
DoSetup	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoSetup()$/;"	f
DoSetupAndSplit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoSetupAndSplit()$/;"	f
DoSetupAndSplit_au	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoSetupAndSplit_au()$/;"	f
DoToggleProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:DoToggleProject()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_af_af.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_chinese_gb.936.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_chinese_taiwan.950.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^   fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^   fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^   fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^   fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ko_kr.euckr.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ko_kr.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	function Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_pt_br.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_pt_pt.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_ru_ru.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sk_sk.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_slovak_slovak_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_vi_vn.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_zh_cn.gb2312.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_zh_cn.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	C:\exVim\vim74\lang\menu_zh_tw.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Document	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	public Document(String ps,String src,String cname,String m) {$/;"	m	class:Document	access:public	signature:(String ps,String src,String cname,String m)
Document	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^public class Document {$/;"	c
Document.Document	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	public Document(String ps,String src,String cname,String m) {$/;"	m	class:Document	access:public	signature:(String ps,String src,String cname,String m)
Document.className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String className;$/;"	f	class:Document	access:default
Document.getTags	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String getTags(String old) {$/;"	m	class:Document	file:	access:private	signature:(String old)
Document.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^        public static void main(String[] args) {$/;"	m	class:Document	access:public	signature:(String[] args)
Document.member	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String member;$/;"	f	class:Document	access:default
Document.paths	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String paths;$/;"	f	class:Document	access:default
Document.read	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	public String read() throws Exception {$/;"	m	class:Document	access:public	signature:()
Document.readFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String readFile(File f) throws IOException {$/;"	m	class:Document	file:	access:private	signature:(File f)
Document.readSource	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String readSource(File f ) throws Exception {$/;"	m	class:Document	file:	access:private	signature:(File f )
Document.src	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String src;$/;"	f	class:Document	access:default
Document.tagMaps	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	static HashMap tagMaps= new HashMap();$/;"	f	class:Document	access:default
Document.useHTML	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^        boolean useHTML = true;$/;"	f	class:Document	access:default
DoesBlockHaveDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
DotPromptUser	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
Dox	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^command! -nargs=0 Dox :call <SID>DoxygenCommentFunc()$/;"	c
DoxAuthor	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^command! -nargs=0 DoxAuthor :call <SID>DoxygenAuthorFunc()$/;"	c
DoxBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^command! -nargs=0 DoxBlock :call <SID>DoxygenBlockFunc()$/;"	c
DoxLic	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^command! -nargs=0 DoxLic :call <SID>DoxygenLicenseFunc()$/;"	c
DoxUndoc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^command! -nargs=1 DoxUndoc :call <SID>DoxygenUndocumentFunc(<q-args>)$/;"	c
DoxygenAuthorFunc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! <SID>DoxygenAuthorFunc()$/;"	f
DoxygenBlockFunc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! <SID>DoxygenBlockFunc()$/;"	f
DoxygenCommentFunc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! <SID>DoxygenCommentFunc()$/;"	f
DoxygenLicenseFunc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! <SID>DoxygenLicenseFunc()$/;"	f
DoxygenUndocumentFunc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! <SID>DoxygenUndocumentFunc(blockTag)$/;"	f
Doxygen_Hilights	C:\exVim\vim74\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights()$/;"	f
Doxygen_Hilights_Base	C:\exVim\vim74\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights_Base()$/;"	f
Dt_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dt_s		Dt_t;$/;"	t	typeref:struct:_dt_s
Dtcompar_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef int			(*Dtcompar_f)_ARG_((Dt_t*,Void_t*,Void_t*,Dtdisc_t*));$/;"	t
Dtdata_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dtdata_s	Dtdata_t;$/;"	t	typeref:struct:_dtdata_s
Dtdisc_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dtdisc_s	Dtdisc_t;$/;"	t	typeref:struct:_dtdisc_s
Dtevent_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef int			(*Dtevent_f)_ARG_((Dt_t*,int,Void_t*,Dtdisc_t*));$/;"	t
Dtfree_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef void 			(*Dtfree_f)_ARG_((Dt_t*,Void_t*,Dtdisc_t*));$/;"	t
Dthash_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef unsigned int		(*Dthash_f)_ARG_((Dt_t*,Void_t*,Dtdisc_t*));$/;"	t
Dthold_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dthold_s	Dthold_t;$/;"	t	typeref:struct:_dthold_s
Dtlink_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dtlink_s	Dtlink_t;$/;"	t	typeref:struct:_dtlink_s
Dtmake_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef Void_t* 		(*Dtmake_f)_ARG_((Dt_t*,Void_t*,Dtdisc_t*));$/;"	t
Dtmemory_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef Void_t*			(*Dtmemory_f)_ARG_((Dt_t*,Void_t*,size_t,Dtdisc_t*));$/;"	t
Dtmethod_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dtmethod_s	Dtmethod_t;$/;"	t	typeref:struct:_dtmethod_s
DtraceCheck	C:\exVim\vim74\filetype.vim	/^func! s:DtraceCheck()$/;"	f
Dtsearch_f	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef Void_t*			(*Dtsearch_f)_ARG_((Dt_t*,Void_t*,int));$/;"	t
Dtstat_t	C:\exVim\graphviz\include\graphviz\cdt.h	/^typedef struct _dtstat_s	Dtstat_t;$/;"	t	typeref:struct:_dtstat_s
DxyCreateSmallSpecial	C:\exVim\vim74\syntax\doxygen.vim	/^  fun! s:DxyCreateSmallSpecial( kword, name )$/;"	f
DylanGetIndent	C:\exVim\vim74\indent\dylan.vim	/^function DylanGetIndent()$/;"	f
DynamicClassLoader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public DynamicClassLoader(String path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String path)
DynamicClassLoader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^public class DynamicClassLoader extends ClassLoader {$/;"	c	inherits:ClassLoader
DynamicClassLoader.CLASS_FILE_TYPE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String CLASS_FILE_TYPE = "class";$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.CLASS_PATH	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String CLASS_PATH$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.DynamicClassLoader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public DynamicClassLoader(String path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String path)
DynamicClassLoader.FILE_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String FILE_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.PACKAGE_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final char PACKAGE_SEPARATOR = '.'; $/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.PATH_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String PATH_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.getClass4Name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getClass4Name(String name) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String name)
DynamicClassLoader.getClassNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getClassNames(String pkg_path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String pkg_path)
DynamicClassLoader.getPackageNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getPackageNames() {$/;"	m	class:DynamicClassLoader	access:public	signature:()
DynamicClassLoader.list4Class	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void list4Class(String argFile,String fullname,Vector v,int length) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,String fullname,Vector v,int length)
DynamicClassLoader.listClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void listClass(String argFile,Vector v) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,Vector v)
DynamicClassLoader.listDir	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void listDir(File argFile,Vector v,String pre) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile,Vector v,String pre)
DynamicClassLoader.loadClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public Class loadClass(String argClassName) throws ClassNotFoundException {$/;"	m	class:DynamicClassLoader	access:public	signature:(String argClassName)
DynamicClassLoader.loadFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private byte[] loadFile(File argFile) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile)
DynamicClassLoader.loadFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private byte[] loadFile(ZipFile argFile, String argClassName) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(ZipFile argFile, String argClassName)
DynamicClassLoader.load_path	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private String load_path = null;$/;"	f	class:DynamicClassLoader	file:	access:private
DynamicClassLoader.loaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^    HashMap loaded = new HashMap();$/;"	f	class:DynamicClassLoader	access:default
DynamicClassLoader.read	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private static byte[] read (InputStream is, int size) throws IOException {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(InputStream is, int size)
EAST	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        NORTH(1), SOUTH(2), EAST(3), DENNIS(4);$/;"	e	enum:CalculateStats.Choices	file:	access:public
ECHO	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	816;"	d	file:
EDGEOF	C:\exVim\graphviz\include\graphviz\cgraph.h	457;"	d
EDGE_OBJTYPE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {ROOTGRAPH_OBJTYPE, CLUSTER_OBJTYPE, NODE_OBJTYPE, EDGE_OBJTYPE} obj_type;$/;"	e	enum:__anon23
ED_adjacent	C:\exVim\graphviz\include\graphviz\types.h	541;"	d
ED_alg	C:\exVim\graphviz\include\graphviz\types.h	536;"	d
ED_conc_opp_flag	C:\exVim\graphviz\include\graphviz\types.h	537;"	d
ED_count	C:\exVim\graphviz\include\graphviz\types.h	538;"	d
ED_cutvalue	C:\exVim\graphviz\include\graphviz\types.h	539;"	d
ED_dist	C:\exVim\graphviz\include\graphviz\types.h	559;"	d
ED_edge_type	C:\exVim\graphviz\include\graphviz\types.h	540;"	d
ED_factor	C:\exVim\graphviz\include\graphviz\types.h	542;"	d
ED_gui_state	C:\exVim\graphviz\include\graphviz\types.h	543;"	d
ED_head_label	C:\exVim\graphviz\include\graphviz\types.h	544;"	d
ED_head_port	C:\exVim\graphviz\include\graphviz\types.h	545;"	d
ED_label	C:\exVim\graphviz\include\graphviz\types.h	546;"	d
ED_label_ontop	C:\exVim\graphviz\include\graphviz\types.h	548;"	d
ED_minlen	C:\exVim\graphviz\include\graphviz\types.h	549;"	d
ED_path	C:\exVim\graphviz\include\graphviz\types.h	550;"	d
ED_showboxes	C:\exVim\graphviz\include\graphviz\types.h	551;"	d
ED_spl	C:\exVim\graphviz\include\graphviz\types.h	552;"	d
ED_tail_label	C:\exVim\graphviz\include\graphviz\types.h	553;"	d
ED_tail_port	C:\exVim\graphviz\include\graphviz\types.h	554;"	d
ED_to_orig	C:\exVim\graphviz\include\graphviz\types.h	555;"	d
ED_to_virt	C:\exVim\graphviz\include\graphviz\types.h	556;"	d
ED_tree_index	C:\exVim\graphviz\include\graphviz\types.h	557;"	d
ED_weight	C:\exVim\graphviz\include\graphviz\types.h	560;"	d
ED_xlabel	C:\exVim\graphviz\include\graphviz\types.h	547;"	d
ED_xpenalty	C:\exVim\graphviz\include\graphviz\types.h	558;"	d
ELEM	C:\exVim\graphviz\include\graphviz\gvcext.h	33;"	d
ELEM	C:\exVim\graphviz\include\graphviz\gvcext.h	53;"	d
ELSE	C:\exVim\graphviz\bin\exparse.h	/^     ELSE = 275,$/;"	e	enum:extokentype
ELSE	C:\exVim\graphviz\bin\exparse.h	142;"	d
EMCommandLineMap	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
EMIT_CDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GDRAW, EMIT_CDRAW, EMIT_TDRAW, EMIT_HDRAW, $/;"	e	enum:__anon24
EMIT_CLABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GLABEL, EMIT_CLABEL, EMIT_TLABEL, EMIT_HLABEL, $/;"	e	enum:__anon24
EMIT_CLUSTERS_LAST	C:\exVim\graphviz\include\graphviz\gvcjob.h	86;"	d
EMIT_COLORS	C:\exVim\graphviz\include\graphviz\gvcjob.h	85;"	d
EMIT_EDGE_SORTED	C:\exVim\graphviz\include\graphviz\gvcjob.h	88;"	d
EMIT_EDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_NDRAW, EMIT_EDRAW, EMIT_NLABEL, EMIT_ELABEL,$/;"	e	enum:__anon24
EMIT_ELABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_NDRAW, EMIT_EDRAW, EMIT_NLABEL, EMIT_ELABEL,$/;"	e	enum:__anon24
EMIT_GDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GDRAW, EMIT_CDRAW, EMIT_TDRAW, EMIT_HDRAW, $/;"	e	enum:__anon24
EMIT_GLABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GLABEL, EMIT_CLABEL, EMIT_TLABEL, EMIT_HLABEL, $/;"	e	enum:__anon24
EMIT_HDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GDRAW, EMIT_CDRAW, EMIT_TDRAW, EMIT_HDRAW, $/;"	e	enum:__anon24
EMIT_HLABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GLABEL, EMIT_CLABEL, EMIT_TLABEL, EMIT_HLABEL, $/;"	e	enum:__anon24
EMIT_NDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_NDRAW, EMIT_EDRAW, EMIT_NLABEL, EMIT_ELABEL,$/;"	e	enum:__anon24
EMIT_NLABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_NDRAW, EMIT_EDRAW, EMIT_NLABEL, EMIT_ELABEL,$/;"	e	enum:__anon24
EMIT_PREORDER	C:\exVim\graphviz\include\graphviz\gvcjob.h	87;"	d
EMIT_SORTED	C:\exVim\graphviz\include\graphviz\gvcjob.h	84;"	d
EMIT_TDRAW	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GDRAW, EMIT_CDRAW, EMIT_TDRAW, EMIT_HDRAW, $/;"	e	enum:__anon24
EMIT_TLABEL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	EMIT_GLABEL, EMIT_CLABEL, EMIT_TLABEL, EMIT_HLABEL, $/;"	e	enum:__anon24
ENABLE_LTDL	C:\exVim\graphviz\bin\config.h	31;"	d
END_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String END_PAREN = ")";$/;"	f	class:ClassInfo	access:public
END_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String END_PAREN = "]";$/;"	f	class:Completion	access:public
EOB_ACT_CONTINUE_SCAN	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	104;"	d	file:
EOB_ACT_END_OF_FILE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	105;"	d	file:
EOB_ACT_LAST_MATCH	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	106;"	d	file:
EQ	C:\exVim\graphviz\bin\exparse.h	/^     EQ = 325,$/;"	e	enum:extokentype
EQ	C:\exVim\graphviz\bin\exparse.h	192;"	d
EXCSClose	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! EXCSClose call excscope#close_window()$/;"	c
EXCSOpen	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! EXCSOpen call excscope#open_window()$/;"	c
EXCSParseFunction	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! EXCSParseFunction call excscope#parse_function()$/;"	c
EXCSToggle	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! EXCSToggle call excscope#toggle_window()$/;"	c
EXCScopeCWord	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^command! EXCScopeCWord call excscope#select(expand('<cword>'))$/;"	c
EXGSearchCWord	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! EXGSearchCWord call exgsearch#search(expand('<cword>'), '-s')$/;"	c
EXGSearchClose	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! EXGSearchClose call exgsearch#close_window()$/;"	c
EXGSearchOpen	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! EXGSearchOpen call exgsearch#open_window()$/;"	c
EXGSearchToggle	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! EXGSearchToggle call exgsearch#toggle_window()$/;"	c
EXHierarchyCWord	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! EXHierarchyCWord call exhierarchy#view(expand('<cword>'), 'all')$/;"	c
EXHierarchyClose	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! EXHierarchyClose call exhierarchy#close_window()$/;"	c
EXHierarchyOpen	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! EXHierarchyOpen call exhierarchy#open_window()$/;"	c
EXHierarchyToggle	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! EXHierarchyToggle call exhierarchy#toggle_window()$/;"	c
EXIT	C:\exVim\graphviz\bin\exparse.h	/^     EXIT = 276,$/;"	e	enum:extokentype
EXIT	C:\exVim\graphviz\bin\exparse.h	143;"	d
EXPANDBB	C:\exVim\graphviz\include\graphviz\geom.h	54;"	d
EXPANDBP	C:\exVim\graphviz\include\graphviz\geom.h	51;"	d
EXProject	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! -n=? -complete=file EXProject call exproject#open('<args>')$/;"	c
EXProjectBuild	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectBuild call exproject#build_tree()$/;"	c
EXProjectClose	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectClose call exproject#close_window()$/;"	c
EXProjectFind	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectFind call exproject#find_current_edit(1)$/;"	c
EXProjectOpen	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectOpen call exproject#open_window()$/;"	c
EXProjectRefresh	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectRefresh call exproject#refresh_current_folder()$/;"	c
EXProjectToNERDTree	C:\exVim\vimfiles\bundle\ex-project\after\plugin\exproject.vim	/^    function! EXProjectToNERDTree()$/;"	f
EXProjectToggle	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^command! EXProjectToggle call exproject#toggle_window()$/;"	c
EXQFixClose	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^command! EXQFixClose call exqfix#close_window()$/;"	c
EXQFixOpen	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^command! EXQFixOpen call exqfix#open_window()$/;"	c
EXQFixPaste	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^command! EXQFixPaste call exqfix#paste('*')$/;"	c
EXQFixToggle	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^command! EXQFixToggle call exqfix#toggle_window()$/;"	c
EXSTYPE	C:\exVim\graphviz\bin\exparse.h	/^typedef union EXSTYPE$/;"	u
EXSTYPE	C:\exVim\graphviz\bin\exparse.h	/^} EXSTYPE;$/;"	t	typeref:union:EXSTYPE
EXSTYPE::buffer	C:\exVim\graphviz\bin\exparse.h	/^	struct Exbuf_s*	buffer;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exbuf_s	access:public
EXSTYPE::expr	C:\exVim\graphviz\bin\exparse.h	/^	struct Exnode_s*expr;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exnode_s	access:public
EXSTYPE::floating	C:\exVim\graphviz\bin\exparse.h	/^	double		floating;$/;"	m	union:EXSTYPE	access:public
EXSTYPE::id	C:\exVim\graphviz\bin\exparse.h	/^	struct Exid_s*	id;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exid_s	access:public
EXSTYPE::integer	C:\exVim\graphviz\bin\exparse.h	/^	Sflong_t	integer;$/;"	m	union:EXSTYPE	access:public
EXSTYPE::op	C:\exVim\graphviz\bin\exparse.h	/^	int		op;$/;"	m	union:EXSTYPE	access:public
EXSTYPE::reference	C:\exVim\graphviz\bin\exparse.h	/^	struct Exref_s*	reference;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exref_s	access:public
EXSTYPE::string	C:\exVim\graphviz\bin\exparse.h	/^	char*		string;$/;"	m	union:EXSTYPE	access:public
EXSTYPE::user	C:\exVim\graphviz\bin\exparse.h	/^	void*		user;$/;"	m	union:EXSTYPE	access:public
EXSTYPE_IS_DECLARED	C:\exVim\graphviz\bin\exparse.h	231;"	d
EXSTYPE_IS_TRIVIAL	C:\exVim\graphviz\bin\exparse.h	229;"	d
EXSymbolCWord	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! EXSymbolCWord call exsymbol#list(expand('<cword>'))$/;"	c
EXSymbolClose	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! EXSymbolClose call exsymbol#close_window()$/;"	c
EXSymbolList	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! EXSymbolList call exsymbol#list_all()$/;"	c
EXSymbolOpen	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! EXSymbolOpen call exsymbol#open_window()$/;"	c
EXSymbolToggle	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! EXSymbolToggle call exsymbol#toggle_window()$/;"	c
EXTOKENTYPE	C:\exVim\graphviz\bin\exparse.h	40;"	d
EXTagsCWord	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^command! EXTagsCWord call extags#select(expand('<cword>'))$/;"	c
EXTagsClose	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^command! EXTagsClose call extags#close_window()$/;"	c
EXTagsOpen	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^command! EXTagsOpen call extags#open_window()$/;"	c
EXTagsToggle	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^command! EXTagsToggle call extags#toggle_window()$/;"	c
EXbalt	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXbalt call ex#buffer#to_alternate_edit_buf()$/;"	c
EXbd	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXbd call ex#buffer#keep_window_bd()$/;"	c
EXbn	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXbn call ex#buffer#navigate('bn')$/;"	c
EXbp	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXbp call ex#buffer#navigate('bp')$/;"	c
EXgp	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXgp call ex#window#goto_plugin_window()$/;"	c
EXplugins	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXplugins call ex#echo_registered_plugins()$/;"	c
EXsw	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^command! EXsw call ex#window#switch_window()$/;"	c
EasyMotion	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
EasyMotion#DotRepeat	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\migemo\cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\migemo\eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\migemo\utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotionInitHL	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^augroup EasyMotionInitHL$/;"	a
EasyhlCancel	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -n=1 EasyhlCancel call <SID>hl_cancel('<args>')$/;"	c
EasyhlRange	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -n=1 -range EasyhlRange <line1>,<line2>call <SID>hl_range('<args>')$/;"	c
EasyhlWord	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -n=1 EasyhlWord call <SID>hl_cword('<args>')$/;"	c
Echo	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:Echo(message)$/;"	f
Edit	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
Edit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditConfig	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
EditElsewhere	C:\exVim\vim74\macros\editexisting.vim	/^func s:EditElsewhere(filename)$/;"	f
EditExisting	C:\exVim\vim74\macros\editexisting.vim	/^func! EditExisting(fname, command)$/;"	f
EditRunComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditVimrc	C:\exVim\vim74\menu.vim	/^fun! s:EditVimrc()$/;"	f
Email	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>Email()$/;"	f
Emmet	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^command! -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests(<f-args>)$/;"	c
EmptyString	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^const char *const EmptyString = "";$/;"	v
EmptystackP	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:EmptystackP(sname)$/;"	f
EnableWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! EnableWhitespace call <SID>EnableWhitespace()$/;"	c
EnableWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:EnableWhitespace()$/;"	f
End	C:\exVim\vim74\macros\less.vim	/^fun! s:End()$/;"	f
EndBlockIndent	C:\exVim\vim74\indent\ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
Enter_annotation_buffer	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f
EnumWndProc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
EnumWndProc	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
EnumWndProc	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
Environ.CDPATH	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.CDPATH ${CDPATH}$/;"	m
Environ.HOME	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.HOME ${HOME}$/;"	m
Environ.IFS	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.IFS ${IFS}$/;"	m
Environ.LC_CTYPE	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.LC_CTYPE ${LC_CTYPE}$/;"	m
Environ.LC_MESSAGES	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.LC_MESSAGES ${LC_MESSAGES}$/;"	m
Environ.MAIL	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.MAIL ${MAIL}$/;"	m
Environ.MAILCHECK	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.MAILCHECK ${MAILCHECK}$/;"	m
Environ.PATH	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.PATH ${PATH}$/;"	m
Environ.PS1	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.PS1 ${PS1}$/;"	m
Environ.PS2	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.PS2 ${PS2}$/;"	m
Environ.SHACCT	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.SHACCT ${SHACCT}$/;"	m
Environ.SHELL	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Environ.SHELL ${SHELL}$/;"	m
ErlangCalcIndent	C:\exVim\vim74\indent\erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
ErlangCalcIndent2	C:\exVim\vim74\indent\erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
ErlangFoldText	C:\exVim\vim74\ftplugin\erlang.vim	/^function ErlangFoldText()$/;"	f
ErlangIndent	C:\exVim\vim74\indent\erlang.vim	/^function! ErlangIndent()$/;"	f
ErrMsg	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Errors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
Esc	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:Esc(str)$/;"	f
Escape	C:\exVim\vim74\autoload\zip.vim	/^fun! s:Escape(fname,isfilt)$/;"	f
EuphoriaCheck	C:\exVim\vim74\filetype.vim	/^func! s:EuphoriaCheck()$/;"	f
Event.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
Examples	C:\exVim\vim74\tools\efm_perl.pl	/^Examples:$/;"	l
ExecuteInTree	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Exit_annotation_buffer	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
ExitingOneLineScope	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Expand	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:Expand(str, ...) " expand the string{{{2$/;"	f
ExpandMap	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^function! s:ExpandMap(map)$/;"	f
ExpandSinglelineComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:ExpandSinglelineComments(line)$/;"	f
ExpandSinglelineCommentsEx	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:ExpandSinglelineCommentsEx(line, space)$/;"	f
Explore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Explore		call netrw#Explore(<count>,0,0+<bang>0,<q-args>)$/;"	c
ExplorePatHls	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:ExplorePatHls(pattern)$/;"	f
ExtraBrackets	C:\exVim\vim74\indent\falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraBrackets	C:\exVim\vim74\indent\ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
Extract_type_data	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f
F	C:\exVim\vim74\macros\less.vim	/^map F :e<CR>G<SID>L:sleep 1<CR>F$/;"	m
F	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
F2I	C:\exVim\graphviz\bin\exparse.h	/^     F2I = 307,$/;"	e	enum:extokentype
F2I	C:\exVim\graphviz\bin\exparse.h	174;"	d
F2S	C:\exVim\graphviz\bin\exparse.h	/^     F2S = 308,$/;"	e	enum:extokentype
F2S	C:\exVim\graphviz\bin\exparse.h	175;"	d
F2X	C:\exVim\graphviz\bin\exparse.h	/^     F2X = 314,$/;"	e	enum:extokentype
F2X	C:\exVim\graphviz\bin\exparse.h	181;"	d
FALSE	C:\exVim\graphviz\include\graphviz\cgraph.h	24;"	d
FALSE	C:\exVim\graphviz\include\graphviz\types.h	30;"	d
FH	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal FH$/;"	m
FIELD_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int FIELD_INFO = 0;$/;"	f	class:ClassInfo	access:public
FILES	C:\exVim\vimfiles\tools\shell\batch\update-cscope.bat	/^    set FILES="%DEST%\\files"$/;"	v
FILES	C:\exVim\vimfiles\tools\shell\batch\update-tags.bat	/^    set FILES=-L "%DEST%\\files"$/;"	v
FILES	C:\exVim\vimfiles\tools\shell\batch\update-tags.bat	/^    set FILES=-R .$/;"	v
FILE_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String FILE_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
FILL_LINEAR	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FILL_NONE, FILL_SOLID, FILL_LINEAR, FILL_RADIAL } fill_type;$/;"	e	enum:__anon16
FILL_NONE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FILL_NONE, FILL_SOLID, FILL_LINEAR, FILL_RADIAL } fill_type;$/;"	e	enum:__anon16
FILL_RADIAL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FILL_NONE, FILL_SOLID, FILL_LINEAR, FILL_RADIAL } fill_type;$/;"	e	enum:__anon16
FILL_SOLID	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FILL_NONE, FILL_SOLID, FILL_LINEAR, FILL_RADIAL } fill_type;$/;"	e	enum:__anon16
FIRSTINREF	C:\exVim\graphviz\include\graphviz\cgraph.h	451;"	d
FIRSTNREF	C:\exVim\graphviz\include\graphviz\cgraph.h	440;"	d
FIRSTOUTREF	C:\exVim\graphviz\include\graphviz\cgraph.h	449;"	d
FLEX_SCANNER	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	7;"	d	file:
FLOATING	C:\exVim\graphviz\bin\exparse.h	/^     FLOATING = 262,$/;"	e	enum:extokentype
FLOATING	C:\exVim\graphviz\bin\exparse.h	129;"	d
FONT_BOLD	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FONT_REGULAR, FONT_BOLD, FONT_ITALIC } font_type;$/;"	e	enum:__anon17
FONT_ITALIC	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FONT_REGULAR, FONT_BOLD, FONT_ITALIC } font_type;$/;"	e	enum:__anon17
FONT_REGULAR	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FONT_REGULAR, FONT_BOLD, FONT_ITALIC } font_type;$/;"	e	enum:__anon17
FOR	C:\exVim\graphviz\bin\exparse.h	/^     FOR = 277,$/;"	e	enum:extokentype
FOR	C:\exVim\graphviz\bin\exparse.h	144;"	d
FTRules	C:\exVim\vim74\filetype.vim	/^func! s:FTRules()$/;"	f
FTVB	C:\exVim\vim74\filetype.vim	/^func! s:FTVB(alt)$/;"	f
FT_BMP	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_BMP, FT_GIF, FT_PNG, FT_JPEG,$/;"	e	enum:__anon44
FT_EPS	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_PDF, FT_PS, FT_EPS, FT_SVG, FT_XML,$/;"	e	enum:__anon44
FT_GIF	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_BMP, FT_GIF, FT_PNG, FT_JPEG,$/;"	e	enum:__anon44
FT_ICO	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_RIFF, FT_WEBP, FT_ICO, FT_TIFF$/;"	e	enum:__anon44
FT_JPEG	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_BMP, FT_GIF, FT_PNG, FT_JPEG,$/;"	e	enum:__anon44
FT_NULL	C:\exVim\graphviz\include\graphviz\usershape.h	/^    typedef enum { FT_NULL,$/;"	e	enum:__anon44
FT_PDF	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_PDF, FT_PS, FT_EPS, FT_SVG, FT_XML,$/;"	e	enum:__anon44
FT_PNG	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_BMP, FT_GIF, FT_PNG, FT_JPEG,$/;"	e	enum:__anon44
FT_PS	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_PDF, FT_PS, FT_EPS, FT_SVG, FT_XML,$/;"	e	enum:__anon44
FT_RIFF	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_RIFF, FT_WEBP, FT_ICO, FT_TIFF$/;"	e	enum:__anon44
FT_SVG	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_PDF, FT_PS, FT_EPS, FT_SVG, FT_XML,$/;"	e	enum:__anon44
FT_TIFF	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_RIFF, FT_WEBP, FT_ICO, FT_TIFF$/;"	e	enum:__anon44
FT_WEBP	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_RIFF, FT_WEBP, FT_ICO, FT_TIFF$/;"	e	enum:__anon44
FT_XML	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FT_PDF, FT_PS, FT_EPS, FT_SVG, FT_XML,$/;"	e	enum:__anon44
FTasm	C:\exVim\vim74\filetype.vim	/^func! s:FTasm()$/;"	f
FTasmsyntax	C:\exVim\vim74\filetype.vim	/^func! s:FTasmsyntax()$/;"	f
FTbtm	C:\exVim\vim74\filetype.vim	/^func! s:FTbtm()$/;"	f
FTchange	C:\exVim\vim74\filetype.vim	/^func! s:FTchange()$/;"	f
FTe	C:\exVim\vim74\filetype.vim	/^func! s:FTe()$/;"	f
FTent	C:\exVim\vim74\filetype.vim	/^func! s:FTent()$/;"	f
FTheader	C:\exVim\vim74\filetype.vim	/^func! s:FTheader()$/;"	f
FThtml	C:\exVim\vim74\filetype.vim	/^func! s:FThtml()$/;"	f
FTidl	C:\exVim\vim74\filetype.vim	/^func! s:FTidl()$/;"	f
FTinc	C:\exVim\vim74\filetype.vim	/^func! s:FTinc()$/;"	f
FTlpc	C:\exVim\vim74\filetype.vim	/^func! s:FTlpc()$/;"	f
FTm	C:\exVim\vim74\filetype.vim	/^func! s:FTm()$/;"	f
FTmm	C:\exVim\vim74\filetype.vim	/^func! s:FTmm()$/;"	f
FTmms	C:\exVim\vim74\filetype.vim	/^func! s:FTmms()$/;"	f
FTnroff	C:\exVim\vim74\filetype.vim	/^func! s:FTnroff()$/;"	f
FTperl	C:\exVim\vim74\filetype.vim	/^func! s:FTperl()$/;"	f
FTpl	C:\exVim\vim74\filetype.vim	/^func! s:FTpl()$/;"	f
FTprogress_asm	C:\exVim\vim74\filetype.vim	/^func! s:FTprogress_asm()$/;"	f
FTprogress_cweb	C:\exVim\vim74\filetype.vim	/^func! s:FTprogress_cweb()$/;"	f
FTprogress_pascal	C:\exVim\vim74\filetype.vim	/^func! s:FTprogress_pascal()$/;"	f
FTr	C:\exVim\vim74\filetype.vim	/^func! s:FTr()$/;"	f
FTtex	C:\exVim\vim74\filetype.vim	/^func! s:FTtex()$/;"	f
FTxml	C:\exVim\vim74\filetype.vim	/^func! s:FTxml()$/;"	f
FTy	C:\exVim\vim74\filetype.vim	/^func! s:FTy()$/;"	f
FUNCTION	C:\exVim\graphviz\bin\exparse.h	/^     FUNCTION = 278,$/;"	e	enum:extokentype
FUNCTION	C:\exVim\graphviz\bin\exparse.h	145;"	d
FWToggle	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^command! -nargs=0 FWToggle call s:FloatWindow_Toggle()$/;"	c
Faa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Faa$/;"	m
FalconGetIndent	C:\exVim\vim74\indent\falcon.vim	/^function FalconGetIndent(...)$/;"	f
Fb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fb$/;"	m
Fba	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fba$/;"	m
Fha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fha$/;"	m
FileExplorer	C:\exVim\vim74\plugin\netrwPlugin.vim	/^augroup FileExplorer$/;"	a
FileFormat	C:\exVim\vim74\menu.vim	/^fun! s:FileFormat()$/;"	f
FileName	C:\exVim\vim74\tools\ccfilter.c	/^char	       FileName[1024];$/;"	v
FileRead	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileReadable	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:FileReadable(fname)$/;"	f
Filter	C:\exVim\vimfiles\bundle\ex-gsearch\ftplugin\exgsearch.vim	/^command! -buffer -nargs=1 Filter call exgsearch#filter('<args>', 'pattern', 0)$/;"	c
Filter	C:\exVim\vimfiles\bundle\ex-symbol\ftplugin\exsymbol.vim	/^command! -buffer -nargs=1 Filter call exsymbol#filter('<args>', 0)$/;"	c
FilterFile	C:\exVim\vimfiles\bundle\ex-gsearch\ftplugin\exgsearch.vim	/^command! -buffer -nargs=1 FilterFile call exgsearch#filter('<args>', 'file', 0)$/;"	c
FilterString	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
Finalise	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>Finalised()$/;"	f
Find	C:\exVim\vim74\optwin.vim	/^fun! <SID>Find(lnum)$/;"	f
FindAnyTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:FindAnyTag(rangeStart, rangeEnd)$/;"	f
FindBoundingLinesOfSexyCom	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindCornerOfSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
FindCornersOfSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
FindDelimiterIndex	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindFirstTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:FindFirstTag(rangeStart, rangeEnd, tagName)$/;"	f
FindFoldBottom	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:FindFoldBottom(line)$/;"	f
FindFoldTop	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:FindFoldTop(line)$/;"	f
FindIndToken	C:\exVim\vim74\indent\erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
FindLeftOfSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
FindLet	C:\exVim\vim74\indent\ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindLet	C:\exVim\vim74\indent\sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindNextSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
FindOpenBracket	C:\exVim\vim74\indent\php.vim	/^function! FindOpenBracket(lnum, blockStarter) " {{{$/;"	f
FindPage	C:\exVim\vim74\ftplugin\man.vim	/^func <SID>FindPage(sect, page)$/;"	f
FindPair	C:\exVim\vim74\indent\ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	C:\exVim\vim74\indent\sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPrevLEIndentedLineMatchingRegex	C:\exVim\vim74\indent\yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f
FindPrevLessIndentedLine	C:\exVim\vim74\indent\yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f
FindRightOfSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
FindTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:FindTag(rangeStart, rangeEnd, tagName, tagParam)$/;"	f
FindTheIfOfAnElse	C:\exVim\vim74\indent\php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	C:\exVim\vim74\indent\php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
FindVimWindow	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void FindVimWindow()$/;"	f
FindVimWindow	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^void FindVimWindow()$/;"	f
Find_common_path	C:\exVim\vim74\ftplugin\ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
FinishCommit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FirstUpper	C:\exVim\vimfiles\cppscript.vim	/^function! s:FirstUpper(string)$/;"	f
First_word_len	C:\exVim\vim74\indent\awk.vim	/^function! s:First_word_len( line )$/;"	f
FixBeginfigs	C:\exVim\vim74\ftplugin\mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
FixFText	C:\exVim\vim74\menu.vim	/^fun! s:FixFText()$/;"	f
Fixedgq	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixup	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FlagSet.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FloatWindow_Toggle	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:FloatWindow_Toggle()$/;"	f
FnameEscape	C:\exVim\vim74\menu.vim	/^func! s:FnameEscape(fname)$/;"	f
Fnameescape	C:\exVim\vim74\ftplugin\ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
FoldColumn_build	C:\exVim\vim74\syntax\2html.vim	/^  function! s:FoldColumn_build(char, len, numfill, char2, class, click)$/;"	f
FoldColumn_fill	C:\exVim\vim74\syntax\2html.vim	/^  function! s:FoldColumn_fill()$/;"	f
FoldCompare	C:\exVim\vim74\syntax\2html.vim	/^  function! s:FoldCompare(f1, f2)$/;"	f
Foldexpr_markdown	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^    function! Foldexpr_markdown(lnum)$/;"	f
Foldtext_markdown	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^    function! Foldtext_markdown()$/;"	f
FoobarException	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^class FoobarException extends Exception{}$/;"	c	inherits:Exception
ForceUpdate	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
FormatChunk	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^func! s:FormatChunk(open, close)$/;"	f
FortranGetFixedIndent	C:\exVim\vim74\indent\fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	C:\exVim\vim74\indent\fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	C:\exVim\vim74\indent\fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
Forward	C:\exVim\vim74\macros\less.vim	/^fun! s:Forward()$/;"	f
ForwardToZshChecker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
Fpa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fpa$/;"	m
Fpb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fpb$/;"	m
Fpc	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Fpc$/;"	m
FreshState	C:\exVim\vim74\indent\html.vim	/^func! s:FreshState(lnum)$/;"	f
FreshState	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:FreshState(lnum) "{{{$/;"	f
FullName	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>FullName()$/;"	f
FunctionDeclare	C:\exVim\vimfiles\cppscript.vim	/^function! FunctionDeclare(decFun,decFun_1,endpos)$/;"	f
G	C:\exVim\vim74\macros\less.vim	/^noremap <script> G G<SID>L$/;"	m
G	C:\exVim\vim74\syntax\2html.vim	/^  norm! G$/;"	m
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^    set GAWK_CMD=gawk$/;"	v
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^set GAWK_CMD="%TOOLS%\\windows\\gawk.exe"$/;"	v
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-inherits.bat	/^    set GAWK_CMD=gawk$/;"	v
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-inherits.bat	/^set GAWK_CMD="%TOOLS%\\windows\\gawk.exe"$/;"	v
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-symbols.bat	/^    set GAWK_CMD=gawk$/;"	v
GAWK_CMD	C:\exVim\vimfiles\tools\shell\batch\update-symbols.bat	/^set GAWK_CMD="%TOOLS%\\windows\\gawk.exe"$/;"	v
GCUpper	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! GCUpper(what)$/;"	f
GCUpperCommon	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! GCUpperCommon(what)$/;"	f
GCUpperDot	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! GCUpperDot(what)$/;"	f
GCUpperSpace	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! GCUpperSpace(what)$/;"	f
GD_alg	C:\exVim\graphviz\include\graphviz\types.h	341;"	d
GD_bb	C:\exVim\graphviz\include\graphviz\types.h	337;"	d
GD_border	C:\exVim\graphviz\include\graphviz\types.h	342;"	d
GD_charset	C:\exVim\graphviz\include\graphviz\types.h	351;"	d
GD_cl_cnt	C:\exVim\graphviz\include\graphviz\types.h	343;"	d
GD_cleanup	C:\exVim\graphviz\include\graphviz\types.h	339;"	d
GD_clust	C:\exVim\graphviz\include\graphviz\types.h	344;"	d
GD_comp	C:\exVim\graphviz\include\graphviz\types.h	346;"	d
GD_dist	C:\exVim\graphviz\include\graphviz\types.h	340;"	d
GD_dotroot	C:\exVim\graphviz\include\graphviz\types.h	345;"	d
GD_drawing	C:\exVim\graphviz\include\graphviz\types.h	336;"	d
GD_exact_ranksep	C:\exVim\graphviz\include\graphviz\types.h	347;"	d
GD_expanded	C:\exVim\graphviz\include\graphviz\types.h	348;"	d
GD_flags	C:\exVim\graphviz\include\graphviz\types.h	349;"	d
GD_flip	C:\exVim\graphviz\include\graphviz\types.h	365;"	d
GD_fontnames	C:\exVim\graphviz\include\graphviz\types.h	391;"	d
GD_gui_state	C:\exVim\graphviz\include\graphviz\types.h	350;"	d
GD_gvc	C:\exVim\graphviz\include\graphviz\types.h	338;"	d
GD_has_flat_edges	C:\exVim\graphviz\include\graphviz\types.h	354;"	d
GD_has_images	C:\exVim\graphviz\include\graphviz\types.h	353;"	d
GD_has_labels	C:\exVim\graphviz\include\graphviz\types.h	352;"	d
GD_has_sinkrank	C:\exVim\graphviz\include\graphviz\types.h	356;"	d
GD_has_sourcerank	C:\exVim\graphviz\include\graphviz\types.h	355;"	d
GD_ht1	C:\exVim\graphviz\include\graphviz\types.h	357;"	d
GD_ht2	C:\exVim\graphviz\include\graphviz\types.h	358;"	d
GD_inleaf	C:\exVim\graphviz\include\graphviz\types.h	359;"	d
GD_installed	C:\exVim\graphviz\include\graphviz\types.h	360;"	d
GD_label	C:\exVim\graphviz\include\graphviz\types.h	361;"	d
GD_label_pos	C:\exVim\graphviz\include\graphviz\types.h	389;"	d
GD_leader	C:\exVim\graphviz\include\graphviz\types.h	362;"	d
GD_level	C:\exVim\graphviz\include\graphviz\types.h	335;"	d
GD_ln	C:\exVim\graphviz\include\graphviz\types.h	368;"	d
GD_maxrank	C:\exVim\graphviz\include\graphviz\types.h	369;"	d
GD_maxrep	C:\exVim\graphviz\include\graphviz\types.h	374;"	d
GD_maxset	C:\exVim\graphviz\include\graphviz\types.h	370;"	d
GD_minrank	C:\exVim\graphviz\include\graphviz\types.h	371;"	d
GD_minrep	C:\exVim\graphviz\include\graphviz\types.h	373;"	d
GD_minset	C:\exVim\graphviz\include\graphviz\types.h	372;"	d
GD_move	C:\exVim\graphviz\include\graphviz\types.h	375;"	d
GD_n_cluster	C:\exVim\graphviz\include\graphviz\types.h	376;"	d
GD_n_nodes	C:\exVim\graphviz\include\graphviz\types.h	377;"	d
GD_ndim	C:\exVim\graphviz\include\graphviz\types.h	378;"	d
GD_neato_nlist	C:\exVim\graphviz\include\graphviz\types.h	380;"	d
GD_nlist	C:\exVim\graphviz\include\graphviz\types.h	381;"	d
GD_nodesep	C:\exVim\graphviz\include\graphviz\types.h	382;"	d
GD_odim	C:\exVim\graphviz\include\graphviz\types.h	379;"	d
GD_outleaf	C:\exVim\graphviz\include\graphviz\types.h	383;"	d
GD_parent	C:\exVim\graphviz\include\graphviz\types.h	334;"	d
GD_rank	C:\exVim\graphviz\include\graphviz\types.h	384;"	d
GD_rankdir	C:\exVim\graphviz\include\graphviz\types.h	364;"	d
GD_rankdir2	C:\exVim\graphviz\include\graphviz\types.h	363;"	d
GD_rankleader	C:\exVim\graphviz\include\graphviz\types.h	385;"	d
GD_ranksep	C:\exVim\graphviz\include\graphviz\types.h	386;"	d
GD_realflip	C:\exVim\graphviz\include\graphviz\types.h	367;"	d
GD_realrankdir	C:\exVim\graphviz\include\graphviz\types.h	366;"	d
GD_rn	C:\exVim\graphviz\include\graphviz\types.h	387;"	d
GD_set_type	C:\exVim\graphviz\include\graphviz\types.h	388;"	d
GD_showboxes	C:\exVim\graphviz\include\graphviz\types.h	390;"	d
GD_spring	C:\exVim\graphviz\include\graphviz\types.h	392;"	d
GD_sum_t	C:\exVim\graphviz\include\graphviz\types.h	393;"	d
GD_t	C:\exVim\graphviz\include\graphviz\types.h	394;"	d
GE	C:\exVim\graphviz\bin\exparse.h	/^     GE = 326,$/;"	e	enum:extokentype
GE	C:\exVim\graphviz\bin\exparse.h	193;"	d
GETOPT_H	C:\exVim\graphviz\bin\getopt.h	22;"	d
GF	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GS	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol GS call exgsearch#search('<args>', '-s')$/;"	c
GSR	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol GSR call exgsearch#search('<args>', '-r')$/;"	c
GSUB	C:\exVim\graphviz\bin\exparse.h	/^     GSUB = 279,$/;"	e	enum:extokentype
GSUB	C:\exVim\graphviz\bin\exparse.h	146;"	d
GSW	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol GSW call exgsearch#search('<args>', '-w')$/;"	c
GTabularize	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
GUI_STATE_ACTIVE	C:\exVim\graphviz\include\graphviz\types.h	256;"	d
GUI_STATE_DELETED	C:\exVim\graphviz\include\graphviz\types.h	259;"	d
GUI_STATE_SELECTED	C:\exVim\graphviz\include\graphviz\types.h	257;"	d
GUI_STATE_VISITED	C:\exVim\graphviz\include\graphviz\types.h	258;"	d
GVATTR_BOOL	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { GVATTR_STRING, GVATTR_BOOL, GVATTR_COLOR } gvattr_t;$/;"	e	enum:__anon19
GVATTR_COLOR	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { GVATTR_STRING, GVATTR_BOOL, GVATTR_COLOR } gvattr_t;$/;"	e	enum:__anon19
GVATTR_STRING	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { GVATTR_STRING, GVATTR_BOOL, GVATTR_COLOR } gvattr_t;$/;"	e	enum:__anon19
GVCEXT_H	C:\exVim\graphviz\include\graphviz\gvcext.h	17;"	d
GVCJOB_H	C:\exVim\graphviz\include\graphviz\gvcjob.h	17;"	d
GVCOMMON_H	C:\exVim\graphviz\include\graphviz\gvcommon.h	15;"	d
GVCOMMON_s	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^    typedef struct GVCOMMON_s {$/;"	s
GVCOMMON_s::auto_outfile_names	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	boolean config, auto_outfile_names;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::builtins	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const lt_symlist_t *builtins;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::cmdname	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	char *cmdname;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::config	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	boolean config, auto_outfile_names;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::demand_loading	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int demand_loading;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::errorfn	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^        void (*errorfn) (const char *fmt, ...);$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::info	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	char **info;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::lib	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const char **lib; $/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::show_boxes	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const char **show_boxes; \/* emit code for correct box coordinates *\/$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::verbose	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int verbose;$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_s::viewNum	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int viewNum;     \/* current view - 1 based count of views,$/;"	m	struct:GVCOMMON_s	access:public
GVCOMMON_t	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^    } GVCOMMON_t;$/;"	t	typeref:struct:GVCOMMON_s
GVCONFIG_H	C:\exVim\graphviz\include\graphviz\gvconfig.h	20;"	d
GVC_H	C:\exVim\graphviz\include\graphviz\gvc.h	15;"	d
GVC_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef struct GVC_s GVC_t;$/;"	t	typeref:struct:GVC_s
GVDEVICE_BINARY_FORMAT	C:\exVim\graphviz\include\graphviz\gvcjob.h	93;"	d
GVDEVICE_COMPRESSED_FORMAT	C:\exVim\graphviz\include\graphviz\gvcjob.h	94;"	d
GVDEVICE_DOES_LAYERS	C:\exVim\graphviz\include\graphviz\gvcjob.h	90;"	d
GVDEVICE_DOES_PAGES	C:\exVim\graphviz\include\graphviz\gvcjob.h	89;"	d
GVDEVICE_DOES_TRUECOLOR	C:\exVim\graphviz\include\graphviz\gvcjob.h	92;"	d
GVDEVICE_EVENTS	C:\exVim\graphviz\include\graphviz\gvcjob.h	91;"	d
GVDEVICE_NO_WRITER	C:\exVim\graphviz\include\graphviz\gvcjob.h	95;"	d
GVDEVICE_PLUGIN_H	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	15;"	d
GVG_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef struct GVG_s GVG_t;$/;"	t	typeref:struct:GVG_s
GVJ_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    struct GVJ_s {$/;"	s
GVJ_s::active_tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *active_tooltip;		\/* tooltip of active object - or NULL *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::bb	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf    bb;		\/* graph bb with padding - graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::boundingBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	box     boundingBox;    \/* cumulative boundingBox over all pages - device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::button	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned char button;   \/* active button *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::callbacks	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvdevice_callbacks_t *callbacks;$/;"	m	struct:GVJ_s	access:public
GVJ_s::canvasBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf	canvasBox;	\/* viewport area - points *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::click	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		click,$/;"	m	struct:GVJ_s	access:public
GVJ_s::clip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf    clip;		\/* clip region in graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::common	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVCOMMON_t *common;$/;"	m	struct:GVJ_s	access:public
GVJ_s::context	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *context;		\/* gd or cairo surface *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::current_obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *current_obj;      \/* graph object that pointer is in currently *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::device	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_device_t device;$/;"	m	struct:GVJ_s	access:public
GVJ_s::device_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf device_dpi;$/;"	m	struct:GVJ_s	access:public
GVJ_s::device_sets_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean device_sets_dpi;$/;"	m	struct:GVJ_s	access:public
GVJ_s::devscale	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  devscale;	\/* composite device to points: dpi, y_goes_down *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::display	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *display;$/;"	m	struct:GVJ_s	access:public
GVJ_s::dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf	dpi;		\/* device resolution device-units-per-inch *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::external_context	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean external_context;	\/* context belongs to caller *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::fit_mode	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean	fit_mode,$/;"	m	struct:GVJ_s	access:public
GVJ_s::flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int flags;		\/* emit_graph flags *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::focus	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  focus;		\/* viewport focus - graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::graph_index	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int graph_index;$/;"	m	struct:GVJ_s	access:public
GVJ_s::gvc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVC_t *gvc;		\/* parent gvc *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::has_been_rendered	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		has_been_rendered;$/;"	m	struct:GVJ_s	access:public
GVJ_s::has_grown	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		has_grown,$/;"	m	struct:GVJ_s	access:public
GVJ_s::height	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        unsigned int height;    \/* device height - device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::imagedata	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *imagedata;	\/* location of imagedata *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::input_filename	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *input_filename;$/;"	m	struct:GVJ_s	access:public
GVJ_s::keybindings	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvevent_key_binding_t *keybindings;$/;"	m	struct:GVJ_s	access:public
GVJ_s::keycodes	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *keycodes;$/;"	m	struct:GVJ_s	access:public
GVJ_s::layerNum	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int layerNum;		\/* current layer - 1 based*\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::layout_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *layout_type;$/;"	m	struct:GVJ_s	access:public
GVJ_s::loadimage	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_loadimage_t loadimage;$/;"	m	struct:GVJ_s	access:public
GVJ_s::margin	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        pointf  margin;		\/* job-specific margin - points *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::needs_refresh	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		needs_refresh,$/;"	m	struct:GVJ_s	access:public
GVJ_s::next	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVJ_t *next;		\/* linked list of jobs *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::next_active	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVJ_t *next_active;	\/* linked list of active jobs (e.g. multiple windows) *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::numLayers	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int numLayers;		\/* number of layers *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::numPages	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int	numPages;	\/* number of pages *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::numkeys	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int numkeys;$/;"	m	struct:GVJ_s	access:public
GVJ_s::obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_state_t *obj;	\/* objects can be nested (at least clusters can)$/;"	m	struct:GVJ_s	access:public
GVJ_s::oldpointer	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf oldpointer;	\/* old pointer position in device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_data	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *output_data;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_data_allocated	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned int output_data_allocated;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_data_position	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned int output_data_position;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_file	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	FILE *output_file;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_filename	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *output_filename;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_lang	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int output_lang;$/;"	m	struct:GVJ_s	access:public
GVJ_s::output_langname	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *output_langname;$/;"	m	struct:GVJ_s	access:public
GVJ_s::pad	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  pad;		\/* padding around bb - graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pageBoundingBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	box     pageBoundingBox;\/* rotated boundingBox - device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pageBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf	pageBox;	\/* current page in graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pageSize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf	pageSize;	\/* page size in graph units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pagesArrayElem	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayElem; \/* 2D coord of current page - 0,0 based *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pagesArrayFirst	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayFirst;\/* 2D starting corner in *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pagesArrayMajor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayMajor;\/* 2D major increment *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pagesArrayMinor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayMinor;\/* 2D minor increment *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pagesArraySize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point 	pagesArraySize; \/* 2D size of page array *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::pointer	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf pointer;		\/* pointer position in device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::render	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_render_t render;$/;"	m	struct:GVJ_s	access:public
GVJ_s::rotation	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int	rotation;	\/* viewport rotation (degrees)  0=portrait, 90=landscape *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::scale	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  scale;		\/* composite device to graph units (zoom and dpi) *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::screen	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int screen;$/;"	m	struct:GVJ_s	access:public
GVJ_s::selected_href	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *selected_href;		\/* href of selected object - or NULL *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::selected_obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *selected_obj;      \/* graph object that has been selected *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::selected_obj_attributes	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gv_argvlist_t selected_obj_attributes; \/* attribute triplets: name, value, type *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::selected_obj_type_name	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gv_argvlist_t selected_obj_type_name; \/* (e.g. "edge" "node3" "e" "->" "node5" "") *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::translation	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  translation;    \/* composite translation *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::view	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  view;		\/* viewport size - points *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::width	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        unsigned int width;     \/* device width - device units *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::window	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *window;		\/* display-specific data for gvrender plugin *\/$/;"	m	struct:GVJ_s	access:public
GVJ_s::zoom	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double  zoom;		\/* viewport zoom factor (points per graph unit) *\/$/;"	m	struct:GVJ_s	access:public
GVJ_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef struct GVJ_s GVJ_t;$/;"	t	typeref:struct:GVJ_s
GVPLUGIN_H	C:\exVim\graphviz\include\graphviz\gvplugin.h	17;"	d
GVPLUGIN_IMAGELOAD_H	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	15;"	d
GVPLUGIN_LAYOUT_H	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	15;"	d
GVPLUGIN_RENDER_H	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	15;"	d
GVPLUGIN_TEXTLAYOUT_H	C:\exVim\graphviz\include\graphviz\gvplugin_textlayout.h	15;"	d
GVPR_H	C:\exVim\graphviz\include\graphviz\gvpr.h	19;"	d
GVRENDER_DOES_ARROWS	C:\exVim\graphviz\include\graphviz\gvcjob.h	98;"	d
GVRENDER_DOES_LABELS	C:\exVim\graphviz\include\graphviz\gvcjob.h	99;"	d
GVRENDER_DOES_MAPS	C:\exVim\graphviz\include\graphviz\gvcjob.h	100;"	d
GVRENDER_DOES_MAP_BSPLINE	C:\exVim\graphviz\include\graphviz\gvcjob.h	105;"	d
GVRENDER_DOES_MAP_CIRCLE	C:\exVim\graphviz\include\graphviz\gvcjob.h	102;"	d
GVRENDER_DOES_MAP_ELLIPSE	C:\exVim\graphviz\include\graphviz\gvcjob.h	104;"	d
GVRENDER_DOES_MAP_POLYGON	C:\exVim\graphviz\include\graphviz\gvcjob.h	103;"	d
GVRENDER_DOES_MAP_RECTANGLE	C:\exVim\graphviz\include\graphviz\gvcjob.h	101;"	d
GVRENDER_DOES_TARGETS	C:\exVim\graphviz\include\graphviz\gvcjob.h	107;"	d
GVRENDER_DOES_TOOLTIPS	C:\exVim\graphviz\include\graphviz\gvcjob.h	106;"	d
GVRENDER_DOES_TRANSFORM	C:\exVim\graphviz\include\graphviz\gvcjob.h	97;"	d
GVRENDER_DOES_Z	C:\exVim\graphviz\include\graphviz\gvcjob.h	108;"	d
GVRENDER_NO_WHITE_BG	C:\exVim\graphviz\include\graphviz\gvcjob.h	109;"	d
GVRENDER_Y_GOES_DOWN	C:\exVim\graphviz\include\graphviz\gvcjob.h	96;"	d
GV_ARITH_H	C:\exVim\graphviz\include\graphviz\arith.h	18;"	d
GV_COLOR_H	C:\exVim\graphviz\include\graphviz\color.h	15;"	d
GV_GEOM_H	C:\exVim\graphviz\include\graphviz\geom.h	18;"	d
GV_NEXT_SET	C:\exVim\graphviz\include\graphviz\gvpr.h	37;"	d
GV_TYPES_H	C:\exVim\graphviz\include\graphviz\types.h	16;"	d
GV_USE_EXIT	C:\exVim\graphviz\include\graphviz\gvpr.h	31;"	d
GV_USE_JUMP	C:\exVim\graphviz\include\graphviz\gvpr.h	35;"	d
GV_USE_OUTGRAPH	C:\exVim\graphviz\include\graphviz\gvpr.h	33;"	d
GenerateEntry	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GenerateEntry(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
Generator	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\genvimdata.rb	/^class Generator$/;"	c
Generator	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\tld2xmldata.rb	/^class Generator$/;"	c
GetAdaIndent	C:\exVim\vim74\indent\ada.vim	/^function GetAdaIndent()$/;"	f
GetAddition	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:GetAddition(line, match, memarg, bracket)$/;"	f
GetAwkIndent	C:\exVim\vim74\indent\awk.vim	/^function! GetAwkIndent()$/;"	f
GetBstIndent	C:\exVim\vim74\indent\bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBufferRubyClass	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCSSIndent	C:\exVim\vim74\indent\css.vim	/^function GetCSSIndent()$/;"	f
GetCTAGSCompletionLines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! GetCTAGSCompletionLines(previewer) "{{{2$/;"	f
GetCd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetCd(info, home)$/;"	f
GetChaiScriptIndent	C:\exVim\vim74\indent\chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetChar	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
GetClojureIndent	C:\exVim\vim74\indent\clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCmdArg	C:\exVim\vim74\ftplugin\man.vim	/^func <SID>GetCmdArg(sect, page)$/;"	f
GetCobolIndent	C:\exVim\vim74\indent\cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCoffeeHtmlIndent	C:\exVim\vimfiles\bundle\vim-coffee-script\after\indent\html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetCombinedString	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:GetCombinedString(rangeStart, rangeEnd)$/;"	f
GetCompilerSingleTemplate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:GetCompilerSingleTemplate(lang_name, compiler_name, key) " {{{1$/;"	f
GetConfigIndent	C:\exVim\vim74\indent\config.vim	/^function GetConfigIndent()$/;"	f
GetCorrectRHelpIndent	C:\exVim\vim74\indent\rhelp.vim	/^function GetCorrectRHelpIndent()$/;"	f
GetCucumberIndent	C:\exVim\vim74\indent\cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetCurrentShell	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:GetCurrentShell() " {{{2$/;"	f
GetDTDIndent	C:\exVim\vim74\indent\dtd.vim	/^function GetDTDIndent()$/;"	f
GetDefaultPolicy	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetDialect	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
GetEiffelIndent	C:\exVim\vim74\indent\eiffel.vim	/^function GetEiffelIndent()$/;"	f
GetEncoding	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetEncoding(info)$/;"	f
GetErlangFold	C:\exVim\vim74\ftplugin\erlang.vim	/^function GetErlangFold(lnum)$/;"	f
GetErubyIndent	C:\exVim\vim74\indent\eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	C:\exVim\vim74\indent\eterm.vim	/^function GetEtermIndent()$/;"	f
GetFilter	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetFilter(info, parent_filter)$/;"	f
GetFlags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetFlags(info)$/;"	f
GetFrameScriptIndent	C:\exVim\vim74\indent\framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetGitconfigIndent	C:\exVim\vim74\indent\gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitoliteIndent	C:\exVim\vim74\indent\gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
GetHamlIndent	C:\exVim\vim74\indent\haml.vim	/^function! GetHamlIndent()$/;"	f
GetHeaderLevel	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
GetHeaderLineNum	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
GetHome	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetHome(info, parent_home)$/;"	f
GetIAB	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^	def VjdeTemplateManager.GetIAB(name,path='')$/;"	F	class:Vjde.VjdeTemplateManager
GetIdlangIndent	C:\exVim\vim74\indent\idlang.vim	/^function GetIdlangIndent(lnum)$/;"	f
GetImportsStr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! GetImportsStr() "{{{2$/;"	f
GetInd	C:\exVim\vim74\indent\ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetInd	C:\exVim\vim74\indent\sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIndentation	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:GetIndentation(string)$/;"	f
GetIndtokenAtCol	C:\exVim\vim74\indent\erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
GetIshdIndent	C:\exVim\vim74\indent\ishd.vim	/^fun! GetIshdIndent(lnum)$/;"	f
GetJIndent	C:\exVim\vim74\indent\j.vim	/^function GetJIndent() abort$/;"	f
GetJSONIndent	C:\exVim\vim74\indent\json.vim	/^function GetJSONIndent()$/;"	f
GetJavaCompletionLines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! GetJavaCompletionLines(arr)$/;"	f
GetJavaIndent	C:\exVim\vim74\indent\java.vim	/^function GetJavaIndent()$/;"	f
GetJavascriptIndent	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJspImportStr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:GetJspImportStr() "{{{2$/;"	f
GetLDIndent	C:\exVim\vim74\indent\ld.vim	/^function GetLDIndent()$/;"	f
GetLastRealCodeLNum	C:\exVim\vim74\indent\php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLatestVimScripts	C:\exVim\vim74\autoload\getscript.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLatestVimScripts	C:\exVim\vim74\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLevelOfHeaderAtLine	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
GetLineWithoutFullComment	C:\exVim\vim74\indent\ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	C:\exVim\vim74\indent\liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLogtalkIndent	C:\exVim\vim74\indent\logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	C:\exVim\vim74\indent\lua.vim	/^function! GetLuaIndent()$/;"	f
GetMSL	C:\exVim\vim74\indent\falcon.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	C:\exVim\vim74\indent\ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMakeIndent	C:\exVim\vim74\indent\make.vim	/^function GetMakeIndent()$/;"	f
GetMakePrg	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakeprg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMarkLine	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:GetMarkLine(mark)$/;"	f
GetMarkdownIndent	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetMatlabIndent	C:\exVim\vim74\indent\matlab.vim	/^function GetMatlabIndent(lnum)$/;"	f
GetMatlabIndent	C:\exVim\vimfiles\bundle\vim-matlab\indent\matlab.vim	/^function GetMatlabIndent()$/;"	f
GetMavenClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetMdIndent	C:\exVim\vim74\indent\rmd.vim	/^function GetMdIndent()$/;"	f
GetMetaPostIndent	C:\exVim\vim74\indent\mp.vim	/^function! GetMetaPostIndent()$/;"	f
GetMmaIndent	C:\exVim\vim74\indent\mma.vim	/^function GetMmaIndent()$/;"	f
GetNextChar	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int GetNextChar(char* buf,int max_size) {$/;"	f	signature:(char* buf,int max_size)
GetNextChar	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int GetNextChar(char* buf,int max_size);$/;"	p	file:	signature:(char* buf,int max_size)
GetNextHeaderLineNumberAtLevel	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
GetNextParameterName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:GetNextParameterName()$/;"	f
GetNextThrowName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:GetNextThrowName()$/;"	f
GetOCamlIndent	C:\exVim\vim74\indent\ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndent	C:\exVim\vim74\indent\objc.vim	/^function GetObjCIndent()$/;"	f
GetOcamlBuildMakeprg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
GetOccamIndent	C:\exVim\vim74\indent\occam.vim	/^function GetOccamIndent()$/;"	f
GetOffsetOf	C:\exVim\vim74\indent\config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
GetOneScript	C:\exVim\vim74\autoload\getscript.vim	/^fun! s:GetOneScript(...)$/;"	f
GetOtherMakeprg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
GetOutputPython	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! s:GetOutputPython() " {{{2$/;"	f
GetPage	C:\exVim\vim74\ftplugin\man.vim	/^func <SID>GetPage(...)$/;"	f
GetParentHeaderLineNumber	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
GetPascalIndent	C:\exVim\vim74\indent\pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerl6Indent	C:\exVim\vim74\indent\perl6.vim	/^function! GetPerl6Indent()$/;"	f
GetPerlIndent	C:\exVim\vim74\indent\perl.vim	/^function! GetPerlIndent()$/;"	f
GetPhpIndent	C:\exVim\vim74\indent\php.vim	/^function! GetPhpIndent()$/;"	f
GetPoVRayIndent	C:\exVim\vim74\indent\pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPrevNonCommentLineNum	C:\exVim\vim74\indent\pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
GetPrevNormalLine	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPreviousHeaderLineNumberAtLevel	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
GetProfile	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\glsl\cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetPrologIndent	C:\exVim\vim74\indent\prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPythonIndent	C:\exVim\vim74\indent\python.vim	/^function GetPythonIndent(lnum)$/;"	f
GetRHelpIndent	C:\exVim\vim74\indent\rhelp.vim	/^function GetRHelpIndent()$/;"	f
GetRIndent	C:\exVim\vim74\indent\r.vim	/^function GetRIndent()$/;"	f
GetRSTIndent	C:\exVim\vim74\indent\rst.vim	/^function GetRSTIndent()$/;"	f
GetReadlineIndent	C:\exVim\vim74\indent\readline.vim	/^function GetReadlineIndent()$/;"	f
GetRmdIndent	C:\exVim\vim74\indent\rmd.vim	/^function GetRmdIndent()$/;"	f
GetRnowebIndent	C:\exVim\vim74\indent\rnoweb.vim	/^function GetRnowebIndent()$/;"	f
GetRrstIndent	C:\exVim\vim74\indent\rrst.vim	/^function GetRrstIndent()$/;"	f
GetRstIndent	C:\exVim\vim74\indent\rrst.vim	/^function GetRstIndent()$/;"	f
GetRubyCompletionLines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! GetRubyCompletionLines(previewer) "{{{2$/;"	f
GetRubyIndent	C:\exVim\vim74\indent\ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSDLIndent	C:\exVim\vim74\indent\sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	C:\exVim\vim74\indent\sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! GetSQLIndent()$/;"	f
GetSassIndent	C:\exVim\vim74\indent\sass.vim	/^function! GetSassIndent()$/;"	f
GetScript	C:\exVim\vim74\autoload\getscript.vim	/^com!        -nargs=0 GetScript           call getscript#GetLatestVimScripts()$/;"	c
GetScriptOpen	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetScriptOpen(info, home)$/;"	f
GetScriptType	C:\exVim\vim74\indent\html.vim	/^func! s:GetScriptType(str)$/;"	f
GetScriptType	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:GetScriptType(str) "{{{$/;"	f
GetScriptin	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetScriptin(info, home)$/;"	f
GetScriptout	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GetScriptout(info, home)$/;"	f
GetScripts	C:\exVim\vim74\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()$/;"	c
GetSexyComLeft	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetShIndent	C:\exVim\vim74\indent\sh.vim	/^function! GetShIndent()$/;"	f
GetShell	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetShellLastExitCodeVariable	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:GetShellLastExitCodeVariable() " {{{2$/;"	f
GetShellPipe	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:GetShellPipe(tee_used) " {{{2$/;"	f
GetStmtStarterIndent	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
GetStylusIndent	C:\exVim\vimfiles\bundle\vim-stylus\indent\stylus.vim	/^function! GetStylusIndent()$/;"	f
GetTFIndent	C:\exVim\vim74\indent\tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	C:\exVim\vim74\indent\tcl.vim	/^function GetTclIndent()$/;"	f
GetTeXIndent	C:\exVim\vim74\indent\tex.vim	/^function! GetTeXIndent() " {{{$/;"	f
GetTempfile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:GetTempfile(fname)$/;"	f
GetTildeIndent	C:\exVim\vim74\indent\tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetTokensFromLine	C:\exVim\vim74\indent\erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
GetTreetopIndent	C:\exVim\vim74\indent\treetop.vim	/^function GetTreetopIndent()$/;"	f
GetTrimmedLine	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetVHDLindent	C:\exVim\vim74\indent\vhdl.vim	/^function GetVHDLindent()$/;"	f
GetValaModules	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetVarIndent	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetVerilogIndent	C:\exVim\vim74\indent\verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVimIndent	C:\exVim\vim74\indent\vim.vim	/^function GetVimIndent()$/;"	f
GetVimIndentIntern	C:\exVim\vim74\indent\vim.vim	/^function GetVimIndentIntern()$/;"	f
GetVisualStartPosition	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
GetWidth	C:\exVim\vim74\indent\objc.vim	/^function s:GetWidth(line, regexp)$/;"	f
GetWindowIndex	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:GetWindowIndex(title)$/;"	f
GetXF86ConfIndent	C:\exVim\vim74\indent\xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	C:\exVim\vim74\indent\xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYAMLIndent	C:\exVim\vim74\indent\yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f
GetYaccIndent	C:\exVim\vim74\indent\yacc.vim	/^function GetYaccIndent()$/;"	f
GetZimbuIndent	C:\exVim\vim74\indent\zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f
Get_brace_balance	C:\exVim\vim74\indent\awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
Get_last_paren_idx	C:\exVim\vim74\indent\r.vim	/^function! s:Get_last_paren_idx(line, o, c, pb)$/;"	f
Get_matching_brace	C:\exVim\vim74\indent\r.vim	/^function! s:Get_matching_brace(linenr, o, c, delbrace)$/;"	f
Get_matching_if	C:\exVim\vim74\indent\r.vim	/^function! s:Get_matching_if(linenr, delif)$/;"	f
Get_paren_balance	C:\exVim\vim74\indent\r.vim	/^function! s:Get_paren_balance(line, o, c)$/;"	f
Get_prev_line	C:\exVim\vim74\indent\awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
Get_prev_line	C:\exVim\vim74\indent\r.vim	/^function s:Get_prev_line(lineno)$/;"	f
Get_type	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f
GettypeName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:GettypeName(var) " {{{2$/;"	f
Git	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GlobPath	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GoIndent	C:\exVim\vim74\indent\go.vim	/^function! GoIndent(lnum)$/;"	f
GprofJumpToFunctionIndex	C:\exVim\vim74\ftplugin\gprof.vim	/^fun! <SID>GprofJumpToFunctionIndex()$/;"	f
Greek	C:\exVim\vim74\syntax\tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
Grep	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GrepAll	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:GrepAll(recurse, lineno, pattern)$/;"	f
GroovyHiLink	C:\exVim\vim74\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	C:\exVim\vim74\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
GroupingAlgorithmOriginal	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
H	C:\exVim\vim74\macros\less.vim	/^map H h$/;"	m
HAVE_ALLOCA	C:\exVim\graphviz\bin\config.h	34;"	d
HAVE_ARGZ_APPEND	C:\exVim\graphviz\bin\config.h	8;"	d
HAVE_BOOL	C:\exVim\graphviz\bin\config.h	41;"	d
HAVE_DIRENT_H	C:\exVim\graphviz\bin\config.h	57;"	d
HAVE_ERRNO_H	C:\exVim\graphviz\bin\config.h	69;"	d
HAVE_EXPAT	C:\exVim\graphviz\bin\config.h	72;"	d
HAVE_EXPAT_H	C:\exVim\graphviz\bin\config.h	75;"	d
HAVE_FENV_H	C:\exVim\graphviz\bin\config.h	81;"	d
HAVE_FESETENV	C:\exVim\graphviz\bin\config.h	84;"	d
HAVE_FILE_CNT	C:\exVim\graphviz\bin\config.h	87;"	d
HAVE_FLOAT_H	C:\exVim\graphviz\bin\config.h	99;"	d
HAVE_FONTCONFIG	C:\exVim\graphviz\bin\config.h	102;"	d
HAVE_FREETYPE2	C:\exVim\graphviz\bin\config.h	108;"	d
HAVE_GD_FONTCONFIG	C:\exVim\graphviz\bin\config.h	117;"	d
HAVE_GD_FREETYPE	C:\exVim\graphviz\bin\config.h	120;"	d
HAVE_GD_GIF	C:\exVim\graphviz\bin\config.h	123;"	d
HAVE_GD_JPEG	C:\exVim\graphviz\bin\config.h	129;"	d
HAVE_GD_PNG	C:\exVim\graphviz\bin\config.h	135;"	d
HAVE_GETENV	C:\exVim\graphviz\bin\config.h	141;"	d
HAVE_GETOPT_DECL	C:\exVim\graphviz\bin\config.h	144;"	d
HAVE_GETOPT_H	C:\exVim\graphviz\bin\config.h	147;"	d
HAVE_GLADE	C:\exVim\graphviz\bin\config.h	153;"	d
HAVE_GTKGLEXT	C:\exVim\graphviz\bin\config.h	168;"	d
HAVE_GTS	C:\exVim\graphviz\bin\config.h	171;"	d
HAVE_ICONV	C:\exVim\graphviz\bin\config.h	174;"	d
HAVE_ICONV_H	C:\exVim\graphviz\bin\config.h	177;"	d
HAVE_ICONV_T_DEF	C:\exVim\graphviz\bin\config.h	180;"	d
HAVE_INTPTR_T	C:\exVim\graphviz\bin\config.h	186;"	d
HAVE_LIBINTL_H	C:\exVim\graphviz\bin\config.h	204;"	d
HAVE_LIBJPEG	C:\exVim\graphviz\bin\config.h	207;"	d
HAVE_LIBPNG	C:\exVim\graphviz\bin\config.h	210;"	d
HAVE_LIBZ	C:\exVim\graphviz\bin\config.h	216;"	d
HAVE_LIMITS_H	C:\exVim\graphviz\bin\config.h	219;"	d
HAVE_MALLOC_H	C:\exVim\graphviz\bin\config.h	228;"	d
HAVE_MEMORY_H	C:\exVim\graphviz\bin\config.h	231;"	d
HAVE_MEMSET	C:\exVim\graphviz\bin\config.h	234;"	d
HAVE_PANGOCAIRO	C:\exVim\graphviz\bin\config.h	246;"	d
HAVE_POINTF_S	C:\exVim\graphviz\include\graphviz\geom.h	33;"	d
HAVE_POW	C:\exVim\graphviz\bin\config.h	255;"	d
HAVE_RSVG	C:\exVim\graphviz\bin\config.h	264;"	d
HAVE_SEARCH_H	C:\exVim\graphviz\bin\config.h	267;"	d
HAVE_SETJMP_H	C:\exVim\graphviz\bin\config.h	273;"	d
HAVE_SETMODE	C:\exVim\graphviz\bin\config.h	276;"	d
HAVE_SQRT	C:\exVim\graphviz\bin\config.h	282;"	d
HAVE_STDARG_H	C:\exVim\graphviz\bin\config.h	288;"	d
HAVE_STDDEF_H	C:\exVim\graphviz\bin\config.h	294;"	d
HAVE_STDLIB_H	C:\exVim\graphviz\bin\config.h	300;"	d
HAVE_STRCHR	C:\exVim\graphviz\bin\config.h	306;"	d
HAVE_STRDUP	C:\exVim\graphviz\bin\config.h	309;"	d
HAVE_STRERROR	C:\exVim\graphviz\bin\config.h	312;"	d
HAVE_STRING_H	C:\exVim\graphviz\bin\config.h	318;"	d
HAVE_STRSTR	C:\exVim\graphviz\bin\config.h	324;"	d
HAVE_STRTOLL	C:\exVim\graphviz\bin\config.h	327;"	d
HAVE_STRTOUL	C:\exVim\graphviz\bin\config.h	330;"	d
HAVE_STRTOULL	C:\exVim\graphviz\bin\config.h	333;"	d
HAVE_SYS_STAT_H	C:\exVim\graphviz\bin\config.h	365;"	d
HAVE_SYS_TIME_H	C:\exVim\graphviz\bin\config.h	371;"	d
HAVE_SYS_TYPES_H	C:\exVim\graphviz\bin\config.h	374;"	d
HAVE_TIME_H	C:\exVim\graphviz\bin\config.h	383;"	d
HAVE_VSNPRINTF	C:\exVim\graphviz\bin\config.h	404;"	d
HAVE__BOOL	C:\exVim\graphviz\bin\config.h	413;"	d
HEADPORT_ID	C:\exVim\graphviz\include\graphviz\cgraph.h	415;"	d
HEAD_ID	C:\exVim\graphviz\include\graphviz\graph.h	36;"	d
HEAD_ID	C:\exVim\graphviz\include\graphviz\types.h	53;"	d
HL1	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -narg=? HL1 call <SID>hl_text(1, '<args>')$/;"	c
HL2	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -narg=? HL2 call <SID>hl_text(2, '<args>')$/;"	c
HL3	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -narg=? HL3 call <SID>hl_text(3, '<args>')$/;"	c
HL4	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^command! -narg=? HL4 call <SID>hl_text(4, '<args>')$/;"	c
HSVA	C:\exVim\graphviz\include\graphviz\color.h	/^	double HSVA[4];$/;"	m	union:color_s::__anon7	access:public
HSVA_DOUBLE	C:\exVim\graphviz\include\graphviz\color.h	/^typedef enum { HSVA_DOUBLE, RGBA_BYTE, RGBA_WORD, CMYK_BYTE,$/;"	e	enum:__anon6
HTML_BF	C:\exVim\graphviz\include\graphviz\textspan.h	24;"	d
HTML_IF	C:\exVim\graphviz\include\graphviz\textspan.h	25;"	d
HTML_OL	C:\exVim\graphviz\include\graphviz\textspan.h	30;"	d
HTML_S	C:\exVim\graphviz\include\graphviz\textspan.h	29;"	d
HTML_SUB	C:\exVim\graphviz\include\graphviz\textspan.h	28;"	d
HTML_SUP	C:\exVim\graphviz\include\graphviz\textspan.h	27;"	d
HTML_UL	C:\exVim\graphviz\include\graphviz\textspan.h	26;"	d
HV	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol HV call exhierarchy#view('<args>', 'all')$/;"	c
HVC	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol HVC call exhierarchy#view('<args>', 'children')$/;"	c
HVP	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol HVP call exhierarchy#view('<args>', 'parent')$/;"	c
HamGetFreeIndent	C:\exVim\vim74\indent\hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	C:\exVim\vim74\indent\hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HasCStyleComments	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasDocComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:HasDocComments()$/;"	f
HasLeadingTabs	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultilineDocComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:HasMultilineDocComments()$/;"	f
HasMultipartDelims	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
HasSingleLineDocComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:HasSingleLineDocComments()$/;"	f
Header	C:\exVim\vim74\optwin.vim	/^fun! <SID>Header(text)$/;"	f
HeaderDecrease	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderDecrease	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
HeaderIncrease	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
Help	C:\exVim\vim74\macros\less.vim	/^fun! s:Help()$/;"	f
Helpfind	C:\exVim\vim74\menu.vim	/^fun! s:Helpfind()$/;"	f
Hex2Dec	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Hex2Dec(hex)$/;"	f
Hexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Hexplore	call netrw#Explore(<count>,1,2+<bang>0,<q-args>)$/;"	c
Hi	C:\exVim\vim74\syntax\sdl.vim	/^	command -nargs=+ Hi     hi <args>$/;"	c
Hi	C:\exVim\vim74\syntax\sdl.vim	/^	command -nargs=+ Hi     hi def <args>$/;"	c
Hi	C:\exVim\vim74\syntax\xpm2.vim	/^  command -nargs=+ Hi hi <args>$/;"	c
Hi	C:\exVim\vim74\syntax\xpm2.vim	/^  command -nargs=+ Hi hi def <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\a65.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\a65.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\abel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\acedb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\acedb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aflex.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aflex.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\amiga.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\amiga.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ampl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ampl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\antlr.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\antlr.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\apache.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\apache.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\atlas.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\atlas.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\automake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\automake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ave.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ave.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\awk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\awk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\b.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\b.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\baan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\baan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\basic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\basic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\blank.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\blank.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bst.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bst.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\btm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\btm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bzr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\bzr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cabal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cabal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cdl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cdl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cfg.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cfg.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\change.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\change.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\changelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\changelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\chill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\chill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\clean.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\clean.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\clipper.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\clipper.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cmake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cmake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cobol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cobol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\config.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\config.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\crontab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\crontab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csh.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csh.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\csp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cterm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cterm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cupl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cupl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cvs.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cvs.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cweb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cweb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dcd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dcd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\def.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\def.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\desc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\desc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\desktop.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\desktop.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\diva.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\diva.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\django.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\django.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\docbk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\docbk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dosini.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dosini.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dracula.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dracula.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dtd.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dtd.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dtml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dtml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ecd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ecd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\edif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\edif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\elf.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\elf.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\erlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\erlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\esterel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\esterel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\eviews.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\eviews.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\exim.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\exim.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\expect.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\expect.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\exports.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\exports.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\falcon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\focexec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\focexec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\form.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\form.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\forth.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\forth.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gdb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gdb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\godoc.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\grads.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\grads.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gretl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gretl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hamster.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hamster.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\haskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\haskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hercules.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hercules.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\hog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ia64.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ia64.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\icon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\icon.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\idl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\idlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\idlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\inform.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\inform.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\inittab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\inittab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ishd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ishd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\iss.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\iss.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ist.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ist.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jal.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jal.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jargon.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jargon.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jess.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jess.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\json.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\json.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jsp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\jsp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kix.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kix.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kwt.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\kwt.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lace.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lace.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\latte.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\latte.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ldif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ldif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lilo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lilo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lisp.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lite.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lite.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lotos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lotos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lout.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lout.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lpc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lpc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\m4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\m4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\make.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\make.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\man.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\man.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\maple.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\maple.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\master.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\master.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\matlab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\matlab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\maxima.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\maxima.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mgp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mgp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mmix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mmix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modula2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modula2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modula3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\modula3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\monk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\monk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\msidl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\msidl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\msql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\msql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mupad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mupad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mush.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mush.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mysql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\mysql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\named.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\named.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nastran.vim	/^     command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\natural.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\natural.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ncf.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ncf.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nqc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nqc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nroff.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nroff.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nsis.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\nsis.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\obj.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\obj.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\occam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\occam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\openroad.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\openroad.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\opl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\opl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ora.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ora.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pascal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pascal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pccts.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pccts.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\perl6.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\perl6.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\php.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\php.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pike.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pike.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pine.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pine.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pli.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pli.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\plm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\plm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\plsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\plsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\po.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\po.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\postscr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\postscr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ppd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ppd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\procmail.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\procmail.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\progress.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\progress.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\prolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\prolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\psf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\psf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\radiance.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\radiance.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rcs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rcs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rebol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rebol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\registry.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\registry.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\remind.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\remind.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rexx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rexx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\robots.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\robots.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight default link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rtf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\rtf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\samba.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\samba.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sas.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sas.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sather.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sather.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\scheme.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\scheme.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\scilab.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\scilab.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sd.vim	/^                command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sd.vim	/^                command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sdl.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sdl.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sed.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sed.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sicad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sicad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\simula.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\simula.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sinda.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sinda.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\skill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\skill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smarty.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smarty.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smith.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\smith.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\specman.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\specman.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\splint.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\splint.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spup.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\spup.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sqr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\squid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\squid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\st.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\st.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\stp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\stp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\strace.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\strace.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\svn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\svn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\systemverilog.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\systemverilog.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tads.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tads.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tags.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tags.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tak.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tak.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\takout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\takout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tex.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tex.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\texmf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\texmf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tli.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tli.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\trasys.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\trasys.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tssop.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\tssop.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\uc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\uc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\uil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\uil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vera.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vera.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\verilog.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\verilog.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\virata.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\virata.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vrml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vrml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wsml.vim	/^       command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\wsml.vim	/^       command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xkb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xkb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xmath.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xmath.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xpm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xpm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xxd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\xxd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\z8a.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vim74\syntax\z8a.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\ex-config\syntax\shader.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\ex-config\syntax\shader.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\ex-typescript\syntax\typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\ex-typescript\syntax\typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-matlab\syntax\matlab.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-matlab\syntax\matlab.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-stylus\syntax\stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	C:\exVim\vimfiles\bundle\vim-stylus\syntax\stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight_Matching_Pair	C:\exVim\vim74\plugin\matchparen.vim	/^function! s:Highlight_Matching_Pair()$/;"	f
Hinter._pos2hint_to_line2col2hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
Hinter._replace_line_for_hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._replace_line_for_hint(lnum, col_num, line, hint) abort$/;"	f
Hinter._replace_tab_target	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._replace_tab_target(lnum, col_num, line) abort$/;"	f
Hinter._replace_text_to_space	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._replace_text_to_space(line, lnum, col_num, len) abort$/;"	f
Hinter._save_lines	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
Hinter._show_hint_for_line	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
Hinter._show_hint_for_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
Hinter.after	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.after() abort$/;"	f
Hinter.before	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.before() abort$/;"	f
Hinter.disable_conceal_in_other_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
Hinter.init	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
Hinter.modify_env_for_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
Hinter.new	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
Hinter.remove_hints	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
Hinter.restore_conceal_in_other_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
Hinter.restore_env	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
Hinter.restore_lines_for_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
Hinter.restore_options	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
Hinter.save_options	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
Hinter.show_hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
Hinter.show_hint_pos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
HtmlClosing	C:\exVim\vim74\syntax\2html.vim	/^  function! s:HtmlClosing(id, has_extra_attrs)$/;"	f
HtmlColor	C:\exVim\vim74\syntax\2html.vim	/^  function! s:HtmlColor(color)$/;"	f
HtmlFormat	C:\exVim\vim74\syntax\2html.vim	/^function! s:HtmlFormat(text, style_id, diff_style_id, extra_attrs, make_unselectable)$/;"	f
HtmlFormat_d	C:\exVim\vim74\syntax\2html.vim	/^  function! s:HtmlFormat_d(text, style_id, diff_style_id)$/;"	f
HtmlFormat_n	C:\exVim\vim74\syntax\2html.vim	/^      function! s:HtmlFormat_n(text, style_id, diff_style_id, lnr)$/;"	f
HtmlFormat_n	C:\exVim\vim74\syntax\2html.vim	/^    function! s:HtmlFormat_n(text, style_id, diff_style_id, lnr)$/;"	f
HtmlFormat_t	C:\exVim\vim74\syntax\2html.vim	/^    function! s:HtmlFormat_t(text, style_id, diff_style_id)$/;"	f
HtmlFormat_t	C:\exVim\vim74\syntax\2html.vim	/^  function! s:HtmlFormat_t(text, style_id, diff_style_id)$/;"	f
HtmlHiLink	C:\exVim\vim74\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	C:\exVim\vim74\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndent	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! HtmlIndent() "{{{$/;"	f
HtmlIndent_CheckUserSettings	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CheckUserSettings	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! HtmlIndent_CheckUserSettings() "{{{$/;"	f
HtmlIndent_CountBraces	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_FindStartTag	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagStart	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_IsOpenTag	C:\exVim\vim74\indent\html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
HtmlOpening	C:\exVim\vim74\syntax\2html.vim	/^  function! s:HtmlOpening(id, extra_attrs)$/;"	f
HttpResponse	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^from django.http import HttpResponse$/;"	i
I	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? I     call visincr#VisBlockIncr(s:I     , <f-args>)$/;"	c
I2F	C:\exVim\graphviz\bin\exparse.h	/^     I2F = 309,$/;"	e	enum:extokentype
I2F	C:\exVim\graphviz\bin\exparse.h	176;"	d
I2S	C:\exVim\graphviz\bin\exparse.h	/^     I2S = 310,$/;"	e	enum:extokentype
I2S	C:\exVim\graphviz\bin\exparse.h	177;"	d
I2X	C:\exVim\graphviz\bin\exparse.h	/^     I2X = 315,$/;"	e	enum:extokentype
I2X	C:\exVim\graphviz\bin\exparse.h	182;"	d
IA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IA	  call visincr#VisBlockIncr(s:IA    , <f-args>)$/;"	c
IB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IB    call visincr#VisBlockIncr(s:IB    , <f-args>)$/;"	c
ICONV_CONST	C:\exVim\graphviz\bin\config.h	425;"	d
ID	C:\exVim\graphviz\bin\exparse.h	/^     ID = 282,$/;"	e	enum:extokentype
ID	C:\exVim\graphviz\bin\exparse.h	149;"	d
ID	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<A NAME=ID>In the formats: -Tcmap, -Tcmapx, -Tsvg, -Tvml, the output generates$/;"	a
ID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? ID    call visincr#VisBlockIncr(s:ID    , <f-args>)$/;"	c
IDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IDMY  call visincr#VisBlockIncr(s:IDMY  , <f-args>)$/;"	c
IF	C:\exVim\graphviz\bin\exparse.h	/^     IF = 283,$/;"	e	enum:extokentype
IF	C:\exVim\graphviz\bin\exparse.h	150;"	d
II	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* II    call visincr#VisBlockIncr(s:II    , <f-args>)$/;"	c
IIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIB   call visincr#VisBlockIncr(s:IIB   , <f-args>)$/;"	c
IIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIO   call visincr#VisBlockIncr(s:IIO   , <f-args>)$/;"	c
IIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIPOW call visincr#VisBlockIncr(s:IIPOW , <f-args>)$/;"	c
IIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIR   call visincr#VisBlockIncr(s:IIR   , <f-args>)$/;"	c
IIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIX   call visincr#VisBlockIncr(s:IIX   , <f-args>)$/;"	c
IM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IM    call visincr#VisBlockIncr(s:IM    , <f-args>)$/;"	c
IMAGESCALE_BOTH	C:\exVim\graphviz\include\graphviz\usershape.h	/^	IMAGESCALE_BOTH    \/* scale image to fit without regard for aspect ratio *\/$/;"	e	enum:__anon45
IMAGESCALE_FALSE	C:\exVim\graphviz\include\graphviz\usershape.h	/^	IMAGESCALE_FALSE,  \/* no image scaling *\/$/;"	e	enum:__anon45
IMAGESCALE_HEIGHT	C:\exVim\graphviz\include\graphviz\usershape.h	/^	IMAGESCALE_HEIGHT, \/* scale image height to fit, keep width fixed *\/$/;"	e	enum:__anon45
IMAGESCALE_TRUE	C:\exVim\graphviz\include\graphviz\usershape.h	/^	IMAGESCALE_TRUE,   \/* scale image to fit but keep aspect ratio *\/$/;"	e	enum:__anon45
IMAGESCALE_WIDTH	C:\exVim\graphviz\include\graphviz\usershape.h	/^	IMAGESCALE_WIDTH,  \/* scale image width to fit, keep height fixed *\/$/;"	e	enum:__anon45
IMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IMDY  call visincr#VisBlockIncr(s:IMDY  , <f-args>)$/;"	c
IN	C:\exVim\graphviz\bin\exparse.h	197;"	d
INC	C:\exVim\graphviz\bin\exparse.h	/^     INC = 333,$/;"	e	enum:extokentype
INC	C:\exVim\graphviz\bin\exparse.h	200;"	d
INCH2PS	C:\exVim\graphviz\include\graphviz\geom.h	71;"	d
INITIAL	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	689;"	d	file:
INITIAL_XDOT_CAPACITY	C:\exVim\graphviz\include\graphviz\xdot.h	24;"	d
INNER_CLASS_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int INNER_CLASS_INFO = 3;$/;"	f	class:ClassInfo	access:public
INSIDE	C:\exVim\graphviz\include\graphviz\geom.h	42;"	d
INTEGER	C:\exVim\graphviz\bin\exparse.h	/^     INTEGER = 259,$/;"	e	enum:extokentype
INTEGER	C:\exVim\graphviz\bin\exparse.h	126;"	d
INT_MAX	C:\exVim\graphviz\include\graphviz\arith.h	55;"	d
INT_MIN	C:\exVim\graphviz\include\graphviz\arith.h	59;"	d
IO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IO    call visincr#VisBlockIncr(s:IO    , <f-args>)$/;"	c
IPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IPOW  call visincr#VisBlockIncr(s:IPOW  , <f-args>)$/;"	c
IPSEPCOLA	C:\exVim\graphviz\bin\config.h	429;"	d
IR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IR    call visincr#VisBlockIncr(s:IR    , <f-args>)$/;"	c
ISBN	C:\exVim\vim74\tutor\tutor.pl	/^	ISBN: 83-7197-472-8$/;"	l
ISBN	C:\exVim\vim74\tutor\tutor.pl	/^	ISBN: 83-7197-539-2$/;"	l
ITERATE	C:\exVim\graphviz\bin\exparse.h	/^     ITERATE = 280,$/;"	e	enum:extokentype
ITERATE	C:\exVim\graphviz\bin\exparse.h	147;"	d
ITERATER	C:\exVim\graphviz\bin\exparse.h	/^     ITERATER = 281,$/;"	e	enum:extokentype
ITERATER	C:\exVim\graphviz\bin\exparse.h	148;"	d
IX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IX    call visincr#VisBlockIncr(s:IX    , <f-args>)$/;"	c
IYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IYMD  call visincr#VisBlockIncr(s:IYMD  , <f-args>)$/;"	c
IgnoreError	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
InAllWindows	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:InAllWindows(command)$/;"	f
InComment	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:InComment()$/;"	f
InCommentAt	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:InCommentAt(line, col)$/;"	f
InMultiVarStatement	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IncludeMarks	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:IncludeMarks()$/;"	f
IncreaseFunc	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
IncreaseIndent	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:IncreaseIndent()$/;"	f
IndHtmlLocal	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^com! -nargs=* IndHtmlLocal <args>$/;"	c
IndentError	C:\exVim\vim74\indent\erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
IndentGuidesDisable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^command! -bar IndentGuidesDisable call s:IndentGuidesDisable()$/;"	c
IndentGuidesDisable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^function! s:IndentGuidesDisable()$/;"	f
IndentGuidesEnable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^command! -bar IndentGuidesEnable  call s:IndentGuidesEnable()$/;"	c
IndentGuidesEnable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^function! s:IndentGuidesEnable()$/;"	f
IndentGuidesToggle	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^command! -bar IndentGuidesToggle  call s:IndentGuidesToggle()$/;"	c
IndentGuidesToggle	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^function! s:IndentGuidesToggle()$/;"	f
IndentLinesDisable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
IndentLinesEnable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
IndentLinesReset	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
IndentWithContinuation	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
InitColor	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:InitColor()$/;"	f
InitVariable	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitVariable	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:InitVariable(var, value)$/;"	f
InitVariable	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^function s:InitVariable(var, value)$/;"	f
Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:Initialize() "{{{1$/;"	f
InitializeParameters	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:InitializeParameters()$/;"	f
InitializePython	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! s:InitializePython() " {{{2$/;"	f
InsertClassX	C:\exVim\vimfiles\cppscript.vim	/^function! InsertClassX()$/;"	f
InsertRefs	C:\exVim\vim74\macros\matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertRefs	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsideTag	C:\exVim\vim74\indent\html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
Instack	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:Instack(el, sname)$/;"	f
InvertComment	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsAbsolutePath	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:IsAbsolutePath(path)$/;"	f
IsBlankLine	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
IsCatchStandalone	C:\exVim\vim74\indent\erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
IsClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsClass()$/;"	f
IsColComment	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f
IsComment	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCommentTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsCommentTag()$/;"	f
IsCommented	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsConstructor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsConstructor(methodHeader)$/;"	f
IsDelimValid	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsExceptionDeclaration	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsExceptionDeclaration()$/;"	f
IsFileComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsFileComments() $/;"	f
IsFunctionEnd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsFunctionEnd()$/;"	f
IsHeaderLine	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
IsInClassDef	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInMultilineComment	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInSexyComment	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsInString	C:\exVim\vim74\indent\falcon.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	C:\exVim\vim74\indent\json.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	C:\exVim\vim74\indent\ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	C:\exVim\vim74\indent\falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringDelimiter	C:\exVim\vim74\indent\ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	C:\exVim\vim74\indent\falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	C:\exVim\vim74\indent\ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	C:\exVim\vim74\indent\ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsItAComment	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:IsItAComment(str)$/;"	f
IsItAPreprocessor	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:IsItAPreprocessor(str)$/;"	f
IsItAnEscSequence	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:IsItAnEscSequence(str)$/;"	f
IsItAnOperator	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:IsItAnOperator(str)$/;"	f
IsLanguageInterpreting	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:IsLanguageInterpreting(filetype_name) "{{{1$/;"	f
IsLiStart	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function! s:IsLiStart(line)$/;"	f
IsLineAtomContinuation	C:\exVim\vim74\indent\erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
IsLineComment	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:IsLineComment(lnum)$/;"	f
IsLineComment	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineStringContinuation	C:\exVim\vim74\indent\erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
IsMatlabContinuationLine	C:\exVim\vimfiles\bundle\vim-matlab\indent\matlab.vim	/^function! s:IsMatlabContinuationLine(lnum)$/;"	f
IsMethod	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsMethod()$/;"	f
IsMethodSpecialCase	C:\exVim\vim74\indent\clojure.vim	/^	function! s:IsMethodSpecialCase(position)$/;"	f
IsMkdCode	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
IsModeLine	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsModeLine()$/;"	f
IsNumEven	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsParen	C:\exVim\vim74\indent\clojure.vim	/^	function! s:IsParen()$/;"	f
IsPosInClassDef	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsRunningPython	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! s:IsRunningPython() " {{{2$/;"	f
IsSerialName	C:\exVim\vim74\tools\xcmdsrv_client.c	/^IsSerialName(str)$/;"	f	file:
IsSerialName	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static int	IsSerialName __ARGS((char *name));$/;"	p	file:	signature:(char *name)
IsSexyComment	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsShellCsh	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:IsShellCsh(shell_name) " is the shell C Shell? {{2$/;"	f
IsShellFish	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:IsShellFish(shell_name) " is the shell FISH shell {{2$/;"	f
IsShellSh	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:IsShellSh(shell_name) " is the shell Bourne shell? {{2$/;"	f
IsShellValid	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsSinglelineComment	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsSinglelineComment()$/;"	f
IsString	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsVariable	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:IsVariable()$/;"	f
IslinePHP	C:\exVim\vim74\indent\php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
JCommentWriter	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! JCommentWriter() range$/;"	f
JUMP_BACK	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	564;"	d	file:
JavaClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        class JavaClass$/;"	c	class:Vjde
JavaCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^	class JavaCompletion #{{{2$/;"	c	class:Vjde
JavaConstructor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        class JavaConstructor $/;"	c	class:Vjde
JavaField	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        class JavaField #{{{2$/;"	c	class:Vjde
JavaHiLink	C:\exVim\vim74\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	C:\exVim\vim74\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
JavaHiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
JavaMethod	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        class JavaMethod $/;"	c	class:Vjde
Java_add_arg	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Java_add_arg(firstl,lastl,str_def) "{{{2$/;"	f
Java_get_type	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Java_get_type(str,v_v) "{{{2$/;"	f
Java_pos_class	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Java_pos_class() "{{{2$/;"	f
Java_pos_fun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Java_pos_fun() "{{{2$/;"	f
Java_range_class	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Java_range_class(ll) "{{{2$/;"	f
JavadocReader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^    class JavadocReader$/;"	c	class:Vjde
JspDirective	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^    class JspDirective  #{{{2$/;"	c	class:Vjde
JumpInit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
Justify	C:\exVim\vim74\macros\justify.vim	/^com! -range -nargs=* Justify <line1>,<line2>call Justify(<f-args>)$/;"	c
Justify	C:\exVim\vim74\macros\justify.vim	/^function! Justify(...) range$/;"	f
Justify_error	C:\exVim\vim74\macros\justify.vim	/^function! Justify_error(message)$/;"	f
K	C:\exVim\vim74\ftplugin\gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
Key	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *Key=NULL; $/;"	v	file:
KeyLoop	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Kind	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *Kind=NULL; $/;"	v	file:
LABEL	C:\exVim\graphviz\bin\exparse.h	/^     LABEL = 284,$/;"	e	enum:extokentype
LABEL	C:\exVim\graphviz\bin\exparse.h	151;"	d
LABEL_HTML	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { LABEL_PLAIN, LABEL_HTML } label_type;$/;"	e	enum:__anon18
LABEL_PLAIN	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { LABEL_PLAIN, LABEL_HTML } label_type;$/;"	e	enum:__anon18
LANG_MAP	C:\exVim\vimfiles\tools\shell\batch\update-idutils.bat	/^    set LANG_MAP=%DEST%\\id-lang-autogen.map$/;"	v
LANG_MAP	C:\exVim\vimfiles\tools\shell\batch\update-idutils.bat	/^    set LANG_MAP=%TOOLS%\\idutils\\id-lang.map$/;"	v
LASTNREF	C:\exVim\graphviz\include\graphviz\cgraph.h	446;"	d
LASTOUTREF	C:\exVim\graphviz\include\graphviz\cgraph.h	450;"	d
LAYOUT_DONE	C:\exVim\graphviz\include\graphviz\gvc.h	38;"	d
LAYOUT_NOT_REQUIRED	C:\exVim\graphviz\include\graphviz\gvcjob.h	110;"	d
LAYOUT_USES_RANKDIR	C:\exVim\graphviz\include\graphviz\gvcjob.h	128;"	d
LE	C:\exVim\graphviz\bin\exparse.h	/^     LE = 327,$/;"	e	enum:extokentype
LE	C:\exVim\graphviz\bin\exparse.h	194;"	d
LEN	C:\exVim\graphviz\include\graphviz\geom.h	60;"	d
LEN2	C:\exVim\graphviz\include\graphviz\geom.h	59;"	d
LINELENGTH	C:\exVim\vim74\tools\ccfilter.c	21;"	d	file:
LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String LIST = "list";$/;"	f	class:ClassInfo	access:public
LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String LIST = "";$/;"	f	class:Completion	access:public
LL	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { point LL, UR; } box;$/;"	m	struct:__anon9	access:public
LL	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { pointf LL, UR; } boxf;$/;"	m	struct:__anon10	access:public
LR	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char LR;	\/* if box list is horizontal (left to right) *\/$/;"	m	struct:field_t	access:public
LS	C:\exVim\graphviz\bin\exparse.h	/^     LS = 329,$/;"	e	enum:extokentype
LS	C:\exVim\graphviz\bin\exparse.h	196;"	d
LUB	C:\exVim\vim74\tutor\tutor.pl	/^	     LUB:	    <ESC> :wq<ENTER>  by zmiany zachowaæ.$/;"	l
Large	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^com! -bang Large		call s:LargeFile(<bang>0,expand("%"))$/;"	c
LargeFile	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^augroup LargeFile$/;"	a
LargeFile	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:LargeFile(force,fname)$/;"	f
LargeFileEnter	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:LargeFileEnter()$/;"	f
LargeFileLeave	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:LargeFileLeave()$/;"	f
LargeFilePost	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:LargeFilePost()$/;"	f
LastIndexOfDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
LeadingSpaceDisable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
LeadingSpaceEnable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
LeadingSpaceToggle	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeadingSpaceToggle	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
LeadingWhiteSpace	C:\exVim\vim74\indent\objc.vim	/^function s:LeadingWhiteSpace(line)$/;"	f
Left	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:Left(...)$/;"	f
Left	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
LeftMostIndx	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
Lexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar       	  -complete=dir Lexplore	call netrw#Lexplore(<q-args>)$/;"	c
LifeCycle	C:\exVim\vimfiles\cppscript.vim	/^function! LifeCycle(decFun,decFun_1,endpos)$/;"	f
Line	C:\exVim\vim74\tools\ccfilter.c	/^char	       Line[LINELENGTH];$/;"	v
Line2	C:\exVim\vim74\tools\ccfilter.c	/^char	       Line2[LINELENGTH];$/;"	v
LineHasOpeningBrackets	C:\exVim\vim74\indent\json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineHasOpeningBrackets	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LinkRun	C:\exVim\vimfiles\cppscript.vim	/^function! LinkRun()$/;"	f
ListSpawn	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:ListSpawn(varnamesegment)$/;"	f
LoadAll	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:LoadAll(recurse, line)$/;"	f
LoadBufferMenu	C:\exVim\vim74\menu.vim	/^  augroup LoadBufferMenu$/;"	a
LoadConfigFile	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadFTPlugin	C:\exVim\vim74\ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f
LoadIndent	C:\exVim\vim74\indent.vim	/^  func! s:LoadIndent()$/;"	f
LoadMain	C:\exVim\vimfiles\cppscript.vim	/^function! LoadMain(filename)$/;"	f
LoadMain	C:\exVim\vimfiles\cscript.vim	/^function! LoadMain(filename)$/;"	f
LoadMain	C:\exVim\vimfiles\hscript.vim	/^ function! LoadMain(filename)$/;"	f
LoadMain	C:\exVim\vimfiles\phpscript.vim	/^function! LoadMain(filename)$/;"	f
LoadTemplate	C:\exVim\vimfiles\asmscript.vim	/^function! LoadTemplate(filename)$/;"	f
LoadTemplate	C:\exVim\vimfiles\inoscript.vim	/^function! LoadTemplate(filename)$/;"	f
LoadTemplate	C:\exVim\vimfiles\matlabscript.vim	/^function! LoadTemplate(filename)$/;"	f
LoadTemplate	C:\exVim\vimfiles\pyscript.vim	/^function! LoadTemplate(filename)$/;"	f
LoadVimSesn	C:\exVim\vim74\menu.vim	/^fun! s:LoadVimSesn()$/;"	f
Load_annotation	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f
LocalBrowse	C:\exVim\vim74\plugin\netrwPlugin.vim	/^fun! s:LocalBrowse(dirname)$/;"	f
LocalBrowseRefresh	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:LocalBrowseRefresh()$/;"	f
LocalFastBrowser	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:LocalFastBrowser()$/;"	f
LocalListing	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:LocalListing()$/;"	f
Locate_annotation	C:\exVim\vim74\ftplugin\ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
Log	C:\exVim\vim74\indent\erlang.vim	/^function! s:Log(s)$/;"	f
Log	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
LookUp	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^function s:LookUp(str)$/;"	f
LookupName	C:\exVim\vim74\tools\xcmdsrv_client.c	/^LookupName(dpy, name, delete, loose)$/;"	f	file:
LookupName	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static Window	LookupName __ARGS((Display *dpy, char *name,$/;"	p	file:	signature:(Display *dpy, char *name, int delete, char **loose)
MAP_CIRCLE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {MAP_RECTANGLE, MAP_CIRCLE, MAP_POLYGON, } map_shape_t;$/;"	e	enum:__anon22
MAP_POLYGON	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {MAP_RECTANGLE, MAP_CIRCLE, MAP_POLYGON, } map_shape_t;$/;"	e	enum:__anon22
MAP_RECTANGLE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {MAP_RECTANGLE, MAP_CIRCLE, MAP_POLYGON, } map_shape_t;$/;"	e	enum:__anon22
MAX	C:\exVim\graphviz\include\graphviz\arith.h	41;"	d
MAX	C:\exVim\graphviz\include\graphviz\arith.h	43;"	d
MAXDOUBLE	C:\exVim\graphviz\include\graphviz\arith.h	67;"	d
MAXFLOAT	C:\exVim\graphviz\include\graphviz\arith.h	71;"	d
MAXSHORT	C:\exVim\graphviz\include\graphviz\arith.h	63;"	d
MAXTOKEN	C:\exVim\graphviz\bin\exparse.h	/^     MAXTOKEN = 335$/;"	e	enum:extokentype
MAXTOKEN	C:\exVim\graphviz\bin\exparse.h	202;"	d
MAX_PROP_WORDS	C:\exVim\vim74\tools\xcmdsrv_client.c	67;"	d	file:
MEMBER	C:\exVim\graphviz\bin\exparse.h	/^     MEMBER = 285,$/;"	e	enum:extokentype
MEMBER	C:\exVim\graphviz\bin\exparse.h	152;"	d
METHOD_INFO	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int METHOD_INFO = 2;$/;"	f	class:ClassInfo	access:public
MICROPOINT	C:\exVim\graphviz\include\graphviz\geom.h	85;"	d
MILLIPOINT	C:\exVim\graphviz\include\graphviz\geom.h	84;"	d
MIN	C:\exVim\graphviz\include\graphviz\arith.h	36;"	d
MIN	C:\exVim\graphviz\include\graphviz\arith.h	38;"	d
MINTOKEN	C:\exVim\graphviz\bin\exparse.h	/^     MINTOKEN = 258,$/;"	e	enum:extokentype
MINTOKEN	C:\exVim\graphviz\bin\exparse.h	125;"	d
MKID_CMD	C:\exVim\vimfiles\tools\shell\batch\update-idutils.bat	/^    set MKID_CMD=mkid$/;"	v
MKID_CMD	C:\exVim\vimfiles\tools\shell\batch\update-idutils.bat	/^set MKID_CMD="%TOOLS%\\windows\\mkid.exe"$/;"	v
MRectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	typedef GdkRectangle MRectangle;$/;"	t	file:
MRectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	} MRectangle;$/;"	t	typeref:struct:_Rectangle	file:
MYLIST	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	730;"	d	file:
MYLISTEX	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	732;"	d	file:
MY_SYSTEM_H	C:\exVim\vimfiles\bundle\vjde\src\my_system.h	2;"	d
M_PI	C:\exVim\graphviz\include\graphviz\arith.h	80;"	d
Main	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^		public static void Main(string[] argv) {$/;"	m	class:Wangfc.CSParser	access:public	signature:(string[] argv)
Main	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.TypeFinder	access:public	signature:(string[] argv)
Main	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.UsingFinder	access:public	signature:(string[] argv)
MainBlockIndent	C:\exVim\vim74\indent\ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
MakeMenu	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeSshCmd	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:MakeSshCmd(sshcmd)$/;"	f
MakeTag	C:\exVim\vim74\tools\pltags.pl	/^sub MakeTag($$$$$)$/;"	s
Man	C:\exVim\vim74\ftplugin\man.vim	/^  com -nargs=+ Man call s:GetPage(<f-args>)$/;"	c
MapNormVis	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
MapNorms	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapNotHasmapto	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
MapSpecs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MarkUpdateMade	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:MarkUpdateMade(linenum)$/;"	f
MarkdownHighlightSources	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
MarkdownRefreshSyntax	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
Markdown_GetUrlForPosition	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
Match	C:\exVim\vim74\indent\falcon.vim	/^function s:Match(lnum, regex)$/;"	f
Match	C:\exVim\vim74\indent\json.vim	/^function s:Match(lnum, regex)$/;"	f
Match	C:\exVim\vim74\indent\ruby.vim	/^function s:Match(lnum, regex)$/;"	f
Match	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:Match(lnum, regex)$/;"	f
MatchCount	C:\exVim\vim74\indent\pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
MatchDebug	C:\exVim\vim74\macros\matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchDebug	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchIt	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchLast	C:\exVim\vim74\indent\falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchLast	C:\exVim\vim74\indent\ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchPairs	C:\exVim\vim74\indent\clojure.vim	/^	function! s:MatchPairs(open, close, stopat)$/;"	f
MatchToIgnoreString	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! MatchToIgnoreString(line,index,target) "{{{2 remove$/;"	f
Match_borders	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
Match_data	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function! s:Match_data()$/;"	f
Match_debug	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_debug	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	C:\exVim\vim74\macros\matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
Match_wrapper	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MatchedItems	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MatchesOne	C:\exVim\vim74\indent\clojure.vim	/^	function! s:MatchesOne(patterns, string)$/;"	f
MavenOutputDirectory	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
MaxmizedWindow	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:MaxmizedWindow(index)$/;"	f
McSetf	C:\exVim\vim74\filetype.vim	/^func! s:McSetf()$/;"	f
MenuController.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuExplOpen	C:\exVim\vim74\menu.vim	/^    fun MenuExplOpen()$/;"	f
MenuItem.All	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Message	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
Message	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:Message(string)$/;"	f
MetaNextNonblankNoncomment	C:\exVim\vim74\indent\mp.vim	/^function! MetaNextNonblankNoncomment(pos)$/;"	f
MetaPrevNonblankNoncomment	C:\exVim\vim74\indent\mp.vim	/^function! MetaPrevNonblankNoncomment(pos)$/;"	f
MetaSearchNoncomment	C:\exVim\vim74\indent\mp.vim	/^function! MetaSearchNoncomment(pattern, ...)$/;"	f
MinimizedWindow	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:MinimizedWindow(index)$/;"	f
MkVimball	C:\exVim\vim74\plugin\vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball				call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
Mkd	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^augroup Mkd$/;"	a
Modules	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^function s:Modules()$/;"	f
ModuloIndent	C:\exVim\vim74\indent\sqlanywhere.vim	/^function! s:ModuloIndent(ind)$/;"	f
Move	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MoveCursor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:MoveCursor() $/;"	f
MoveCursorToEOL	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:MoveCursorToEOL(line)$/;"	f
MoveDown	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:MoveDown()$/;"	f
MoveToCurHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
MoveToNextHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
MoveToNextSiblingHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
MoveToParentHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
MoveToPreviousHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
MoveToPreviousSiblingHeader	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
MoveUp	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:MoveUp()$/;"	f
MultiMatch	C:\exVim\vim74\macros\matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiMatch	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiValueMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public MultiValueMap () {$/;"	m	class:MultiValueMap	access:public	signature:()
MultiValueMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^public class MultiValueMap extends HashMap {$/;"	c	inherits:HashMap
MultiValueMap.MultiValueMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public MultiValueMap () {$/;"	m	class:MultiValueMap	access:public	signature:()
MultiValueMap.getAsList	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public List getAsList(Object key) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key)
MultiValueMap.put	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public Object put(Object key, Object value) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key, Object value)
Multipart	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:Multipart()$/;"	f
Mutators	C:\exVim\vimfiles\cppscript.vim	/^function! Mutators(decFun,decFun_1,endpos)$/;"	f
MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Configure.MyAction	access:public	signature:(Action a, String sp,String m,String k)
MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	private static class MyAction {$/;"	c	class:Struts2Configure	access:private
MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Simple.MyAction	access:public	signature:(Action a, String sp,String m,String k)
MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	private static class MyAction {$/;"	c	class:Struts2Simple	access:private
MyClass	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^class MyClass(penguin):$/;"	c	inherits:penguin
MyFile	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    class MyFile$/;"	c	class:Vjde
MyTextOut	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void MyTextOut(char *p , int l) ;$/;"	p	file:	signature:(char *p , int l)
MyTextOut	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void MyTextOut(char *p,int l) {$/;"	f	signature:(char *p,int l)
NAME	C:\exVim\graphviz\bin\exparse.h	/^     NAME = 286,$/;"	e	enum:extokentype
NAME	C:\exVim\graphviz\bin\exparse.h	153;"	d
NATIVEFONTS	C:\exVim\graphviz\include\graphviz\types.h	/^typedef enum {NATIVEFONTS,PSFONTS,SVGFONTS} fontname_kind;$/;"	e	enum:__anon42
ND_UF_parent	C:\exVim\graphviz\include\graphviz\types.h	452;"	d
ND_UF_size	C:\exVim\graphviz\include\graphviz\types.h	454;"	d
ND_alg	C:\exVim\graphviz\include\graphviz\types.h	451;"	d
ND_bb	C:\exVim\graphviz\include\graphviz\types.h	455;"	d
ND_clust	C:\exVim\graphviz\include\graphviz\types.h	456;"	d
ND_clustnode	C:\exVim\graphviz\include\graphviz\types.h	499;"	d
ND_coord	C:\exVim\graphviz\include\graphviz\types.h	457;"	d
ND_dist	C:\exVim\graphviz\include\graphviz\types.h	458;"	d
ND_flat_in	C:\exVim\graphviz\include\graphviz\types.h	459;"	d
ND_flat_out	C:\exVim\graphviz\include\graphviz\types.h	460;"	d
ND_gui_state	C:\exVim\graphviz\include\graphviz\types.h	461;"	d
ND_has_port	C:\exVim\graphviz\include\graphviz\types.h	462;"	d
ND_heapindex	C:\exVim\graphviz\include\graphviz\types.h	464;"	d
ND_height	C:\exVim\graphviz\include\graphviz\types.h	465;"	d
ND_hops	C:\exVim\graphviz\include\graphviz\types.h	466;"	d
ND_ht	C:\exVim\graphviz\include\graphviz\types.h	467;"	d
ND_id	C:\exVim\graphviz\include\graphviz\types.h	450;"	d
ND_in	C:\exVim\graphviz\include\graphviz\types.h	468;"	d
ND_inleaf	C:\exVim\graphviz\include\graphviz\types.h	469;"	d
ND_label	C:\exVim\graphviz\include\graphviz\types.h	470;"	d
ND_lim	C:\exVim\graphviz\include\graphviz\types.h	472;"	d
ND_low	C:\exVim\graphviz\include\graphviz\types.h	473;"	d
ND_lw	C:\exVim\graphviz\include\graphviz\types.h	474;"	d
ND_mark	C:\exVim\graphviz\include\graphviz\types.h	475;"	d
ND_mval	C:\exVim\graphviz\include\graphviz\types.h	476;"	d
ND_n_cluster	C:\exVim\graphviz\include\graphviz\types.h	477;"	d
ND_next	C:\exVim\graphviz\include\graphviz\types.h	478;"	d
ND_node_type	C:\exVim\graphviz\include\graphviz\types.h	479;"	d
ND_onstack	C:\exVim\graphviz\include\graphviz\types.h	480;"	d
ND_order	C:\exVim\graphviz\include\graphviz\types.h	481;"	d
ND_other	C:\exVim\graphviz\include\graphviz\types.h	482;"	d
ND_out	C:\exVim\graphviz\include\graphviz\types.h	483;"	d
ND_outleaf	C:\exVim\graphviz\include\graphviz\types.h	484;"	d
ND_par	C:\exVim\graphviz\include\graphviz\types.h	485;"	d
ND_pinned	C:\exVim\graphviz\include\graphviz\types.h	486;"	d
ND_pos	C:\exVim\graphviz\include\graphviz\types.h	487;"	d
ND_prev	C:\exVim\graphviz\include\graphviz\types.h	488;"	d
ND_priority	C:\exVim\graphviz\include\graphviz\types.h	489;"	d
ND_rank	C:\exVim\graphviz\include\graphviz\types.h	490;"	d
ND_ranktype	C:\exVim\graphviz\include\graphviz\types.h	491;"	d
ND_rep	C:\exVim\graphviz\include\graphviz\types.h	463;"	d
ND_rw	C:\exVim\graphviz\include\graphviz\types.h	492;"	d
ND_save_in	C:\exVim\graphviz\include\graphviz\types.h	493;"	d
ND_save_out	C:\exVim\graphviz\include\graphviz\types.h	494;"	d
ND_set	C:\exVim\graphviz\include\graphviz\types.h	453;"	d
ND_shape	C:\exVim\graphviz\include\graphviz\types.h	495;"	d
ND_shape_info	C:\exVim\graphviz\include\graphviz\types.h	496;"	d
ND_showboxes	C:\exVim\graphviz\include\graphviz\types.h	497;"	d
ND_state	C:\exVim\graphviz\include\graphviz\types.h	498;"	d
ND_tree_in	C:\exVim\graphviz\include\graphviz\types.h	500;"	d
ND_tree_out	C:\exVim\graphviz\include\graphviz\types.h	501;"	d
ND_weight_class	C:\exVim\graphviz\include\graphviz\types.h	502;"	d
ND_width	C:\exVim\graphviz\include\graphviz\types.h	503;"	d
ND_xlabel	C:\exVim\graphviz\include\graphviz\types.h	471;"	d
ND_xsize	C:\exVim\graphviz\include\graphviz\types.h	504;"	d
ND_ysize	C:\exVim\graphviz\include\graphviz\types.h	505;"	d
NE	C:\exVim\graphviz\bin\exparse.h	/^     NE = 324,$/;"	e	enum:extokentype
NE	C:\exVim\graphviz\bin\exparse.h	191;"	d
NERDComment	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTreeAddKeyMap	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCopyNode	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFocus	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToEXProject	C:\exVim\vimfiles\bundle\ex-project\after\plugin\exproject.vim	/^    function! NERDTreeToEXProject()$/;"	f
NEXTEREF	C:\exVim\graphviz\include\graphviz\cgraph.h	452;"	d
NEXTNREF	C:\exVim\graphviz\include\graphviz\cgraph.h	442;"	d
NFH_bmp	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_bmp(bmpfile)$/;"	f
NFH_doc	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_doc(doc)$/;"	f
NFH_eps	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_eps(eps)$/;"	f
NFH_fig	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_fig(fig)$/;"	f
NFH_gif	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_gif(giffile)$/;"	f
NFH_htm	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_htm(pagefile)$/;"	f
NFH_html	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_html(pagefile)$/;"	f
NFH_jpg	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_jpg(jpgfile)$/;"	f
NFH_obj	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_obj(obj)$/;"	f
NFH_pdf	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pdf(pdf)$/;"	f
NFH_png	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_png(pngfile)$/;"	f
NFH_pnm	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pnm(pnmfile)$/;"	f
NFH_ps	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_ps(ps)$/;"	f
NFH_sxw	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_sxw(sxw)$/;"	f
NFH_xls	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! s:NFH_xls(xls)$/;"	f
NIL	C:\exVim\graphviz\include\graphviz\cgraph.h	33;"	d
NIL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String NIL = "nil";$/;"	f	class:ClassInfo	access:public
NIL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String NIL = "[]";$/;"	f	class:Completion	access:public
NILedge	C:\exVim\graphviz\include\graphviz\cgraph.h	37;"	d
NILgraph	C:\exVim\graphviz\include\graphviz\cgraph.h	35;"	d
NILnode	C:\exVim\graphviz\include\graphviz\cgraph.h	36;"	d
NILsym	C:\exVim\graphviz\include\graphviz\cgraph.h	38;"	d
NL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String NL = "\\n";$/;"	f	class:ClassInfo	access:public
NL	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String NL = "\\n";$/;"	f	class:Completion	access:public
NODEOF	C:\exVim\graphviz\include\graphviz\cgraph.h	447;"	d
NODE_OBJTYPE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {ROOTGRAPH_OBJTYPE, CLUSTER_OBJTYPE, NODE_OBJTYPE, EDGE_OBJTYPE} obj_type;$/;"	e	enum:__anon23
NORTH	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        NORTH(1), SOUTH(2), EAST(3), DENNIS(4);$/;"	e	enum:CalculateStats.Choices	file:	access:public
NOT	C:\exVim\graphviz\include\graphviz\cgraph.h	30;"	d
NOT	C:\exVim\graphviz\include\graphviz\types.h	27;"	d
NO_FPERR	C:\exVim\graphviz\bin\config.h	431;"	d
NO_POSTSCRIPT_ALIAS	C:\exVim\graphviz\bin\config.h	434;"	d
NameOfMark	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:NameOfMark(mark)$/;"	f
NeoCompleteBufferMakeCache	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\buffer.vim	/^      \\ NeoCompleteBufferMakeCache$/;"	c
NeoCompleteClean	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteClean$/;"	c
NeoCompleteDictionaryMakeCache	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\dictionary.vim	/^      \\ NeoCompleteDictionaryMakeCache$/;"	c
NeoCompleteDisable	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteDisable$/;"	c
NeoCompleteEnable	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteEnable$/;"	c
NeoCompleteLock	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteLock$/;"	c
NeoCompleteSetFileType	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=1 -bar -complete=filetype NeoCompleteSetFileType$/;"	c
NeoCompleteTagMakeCache	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\tag.vim	/^      \\ NeoCompleteTagMakeCache$/;"	c
NeoCompleteToggle	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteToggle$/;"	c
NeoCompleteUnlock	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteUnlock$/;"	c
NeoSnippetClearMarkers	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^command! -bar NeoSnippetClearMarkers$/;"	c
NeoSnippetEdit	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
NeosnippetSnippets_Goiferr	C:\exVim\vimfiles\bundle\neosnippet-snippets\neosnippets\go.vim	/^function! g:NeosnippetSnippets_Goiferr() abort$/;"	f
NerdEcho	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NetReadFixup	C:\exVim\vim74\autoload\netrw.vim	/^ fun! NetReadFixup(method, line1, line2)$/;"	f
NetSortSequence	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetSortSequence(islocal)$/;"	f
NetUserPass	C:\exVim\vim74\autoload\netrw.vim	/^fun! NetUserPass(...)$/;"	f
NetUserPass	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=*		NetUserPass	call NetUserPass(<f-args>)$/;"	c
NetUserPass	C:\exVim\vim74\plugin\netrwPlugin.vim	/^fun! NetUserPass(...)$/;"	f
NetrwBMShow	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBMShow()$/;"	f
NetrwBannerCtrl	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBannerCtrl(islocal)$/;"	f
NetrwBookHistHandler	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBookHistHandler(chg,curdir)$/;"	f
NetrwBookHistRead	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBookHistRead()$/;"	f
NetrwBookHistSave	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBookHistSave()$/;"	f
NetrwBookmarkMenu	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBookmarkMenu()$/;"	f
NetrwBrowse	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBrowse(islocal,dirname)$/;"	f
NetrwBrowseChgDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBrowseChgDir(islocal,newdir,...)$/;"	f
NetrwBrowseUpDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwBrowseUpDir(islocal)$/;"	f
NetrwChgPerm	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwChgPerm(islocal,curdir)$/;"	f
NetrwClean	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -bang	NetrwClean	call netrw#Clean(<bang>0)$/;"	c
NetrwClearExplore	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwClearExplore()$/;"	f
NetrwCommands	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwCommands(islocal)$/;"	f
NetrwCursor	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwCursor()$/;"	f
NetrwDelete	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwDelete(path)$/;"	f
NetrwEnew	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwEnew(...)$/;"	f
NetrwExploreListUniq	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwExploreListUniq(explist)$/;"	f
NetrwFileInfo	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwFileInfo(islocal,fname)$/;"	f
NetrwForceChgDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwForceChgDir(islocal,newdir)$/;"	f
NetrwForceFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwForceFile(islocal,newfile)$/;"	f
NetrwGetBuffer	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwGetBuffer(islocal,dirname)$/;"	f
NetrwGetFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwGetFile(readcmd, tfile, method)$/;"	f
NetrwGetWord	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwGetWord()$/;"	f
NetrwGetcwd	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwGetcwd(doesc)$/;"	f
NetrwHidden	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwHidden(islocal)$/;"	f
NetrwHide	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwHide(islocal)$/;"	f
NetrwHideEdit	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwHideEdit(islocal)$/;"	f
NetrwHome	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwHome()$/;"	f
NetrwInit	C:\exVim\vim74\autoload\netrw.vim	/^fun s:NetrwInit(varname,value)$/;"	f
NetrwInsureWinVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwInsureWinVars()$/;"	f
NetrwLcd	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLcd(newdir)$/;"	f
NetrwLeftmouse	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLeftmouse(islocal)$/;"	f
NetrwListHide	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwListHide()$/;"	f
NetrwListSettings	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwListSettings(islocal)$/;"	f
NetrwListStyle	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwListStyle(islocal)$/;"	f
NetrwLocalExecute	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLocalExecute(cmd)$/;"	f
NetrwLocalRename	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLocalRename(path) range$/;"	f
NetrwLocalRm	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLocalRm(path) range$/;"	f
NetrwLocalRmFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwLocalRmFile(path,fname,all)$/;"	f
NetrwMakeDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMakeDir(usrhost)$/;"	f
NetrwMaps	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMaps(islocal)$/;"	f
NetrwMarkFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFile(islocal,fname)$/;"	f
NetrwMarkFileCompress	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileCompress(islocal)$/;"	f
NetrwMarkFileCopy	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileCopy(islocal,...)$/;"	f
NetrwMarkFileDiff	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileDiff(islocal)$/;"	f
NetrwMarkFileEdit	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileEdit(islocal)$/;"	f
NetrwMarkFileExe	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileExe(islocal)$/;"	f
NetrwMarkFileGrep	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileGrep(islocal)$/;"	f
NetrwMarkFileMove	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileMove(islocal)$/;"	f
NetrwMarkFilePrint	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFilePrint(islocal)$/;"	f
NetrwMarkFileQFEL	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileQFEL(islocal,qfel)$/;"	f
NetrwMarkFileRegexp	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileRegexp(islocal)$/;"	f
NetrwMarkFileSource	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileSource(islocal)$/;"	f
NetrwMarkFileTag	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileTag(islocal)$/;"	f
NetrwMarkFileTgt	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileTgt(islocal)$/;"	f
NetrwMarkFileVimCmd	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFileVimCmd(islocal)$/;"	f
NetrwMarkFiles	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkFiles(islocal,...)$/;"	f
NetrwMarkHideSfx	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkHideSfx(islocal)$/;"	f
NetrwMarkTarget	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMarkTarget(...)$/;"	f
NetrwMenu	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMenu(domenu)$/;"	f
NetrwMethod	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwMethod(choice)$/;"	f
NetrwObtain	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwObtain(islocal)$/;"	f
NetrwOpenFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwOpenFile(islocal)$/;"	f
NetrwOptionRestore	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwOptionRestore(vt)$/;"	f
NetrwOptionSave	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwOptionSave(vt)$/;"	f
NetrwPrevWinOpen	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwPrevWinOpen(islocal)$/;"	f
NetrwPreview	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwPreview(path) range$/;"	f
NetrwRefresh	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRefresh(islocal,dirname)$/;"	f
NetrwRefreshDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRefreshDir(islocal,dirname)$/;"	f
NetrwRemoteFtpCmd	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRemoteFtpCmd(path,listcmd)$/;"	f
NetrwRemoteListing	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRemoteListing()$/;"	f
NetrwRemoteRename	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRemoteRename(usrhost,path) range$/;"	f
NetrwRemoteRm	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRemoteRm(usrhost,path) range$/;"	f
NetrwRemoteRmFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRemoteRmFile(path,rmfile,all)$/;"	f
NetrwRestoreWordPosn	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRestoreWordPosn()$/;"	f
NetrwRexplore	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwRexplore(islocal,dirname)$/;"	f
NetrwSLeftdrag	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSLeftdrag(islocal)$/;"	f
NetrwSLeftmouse	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSLeftmouse(islocal)$/;"	f
NetrwSLeftrelease	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSLeftrelease(islocal)$/;"	f
NetrwSafeOptions	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSafeOptions()$/;"	f
NetrwSaveWordPosn	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSaveWordPosn()$/;"	f
NetrwSetChgwin	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSetChgwin()$/;"	f
NetrwSetSort	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSetSort()$/;"	f
NetrwSetTgt	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSetTgt(bookhist,choice)$/;"	f
NetrwSettingHelp	C:\exVim\vim74\autoload\netrwSettings.vim	/^fun! NetrwSettingHelp()$/;"	f
NetrwSettings	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=0	NetrwSettings	call netrwSettings#NetrwSettings()$/;"	c
NetrwSortStyle	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSortStyle(islocal)$/;"	f
NetrwSplit	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwSplit(mode)$/;"	f
NetrwStatusLine	C:\exVim\vim74\autoload\netrw.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwStatusLine	C:\exVim\vim74\plugin\netrwPlugin.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwTgtMenu	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwTgtMenu()$/;"	f
NetrwTreeDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwTreeDir()$/;"	f
NetrwTreeDisplay	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwTreeDisplay(dir,depth)$/;"	f
NetrwTreeListing	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwTreeListing(dirname)$/;"	f
NetrwTreePath	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwTreePath(treetop)$/;"	f
NetrwUnMarkFile	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwUnMarkFile(islocal)$/;"	f
NetrwUnmarkAll	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll()$/;"	f
NetrwUnmarkAll2	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll2()$/;"	f
NetrwUnmarkList	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwUnmarkList(curbufnr,curdir)$/;"	f
NetrwUpload	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwUpload(fname,tgt,...)$/;"	f
NetrwWideListing	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:NetrwWideListing()$/;"	f
Network	C:\exVim\vim74\plugin\netrwPlugin.vim	/^augroup Network$/;"	a
NewChangelogEntry	C:\exVim\vim74\ftplugin\changelog.vim	/^    command! -nargs=0 NewChangelogEntry call s:new_changelog_entry('')$/;"	c
NewTags	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NewVersion	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function NewVersion()$/;"	f
Nexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Nexplore	call netrw#Explore(-1,0,0,<q-args>)$/;"	c
NextIndToken	C:\exVim\vim74\indent\erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
NextPage	C:\exVim\vim74\macros\less.vim	/^fun! s:NextPage()$/;"	f
Nextitem	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:Nextitem(lead, items, depth, all)$/;"	f
NoMatchParen	C:\exVim\vim74\plugin\matchparen.vim	/^command! NoMatchParen windo silent! call matchdelete(3) | unlet! g:loaded_matchparen |$/;"	c
Nosynonly	C:\exVim\vim74\synmenu.vim	/^fun! s:Nosynonly()$/;"	f
Note	C:\exVim\vimfiles\cppscript.vim	/^function! Note()$/;"	f
Notifier.AddListener	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
Nread	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -count=1 -nargs=*	Nread		call netrw#SavePosn()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call netrw#RestorePosn()$/;"	c
Nsource	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=*	        Nsource		call netrw#SavePosn()<bar>call netrw#NetSource(<f-args>)<bar>call netrw#RestorePosn()$/;"	c
Ntree	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=?		Ntree		call netrw#SetTreetop(<q-args>)$/;"	c
NumLinesInBuf	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
NumberToBinary	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! NumberToBinary(nstr)$/;"	f
Nwrite	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -range=% -nargs=*	Nwrite		call netrw#SavePosn()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call netrw#RestorePosn()$/;"	c
OCaml_switch	C:\exVim\vim74\ftplugin\ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	C:\exVim\vim74\ftplugin\ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
OR	C:\exVim\graphviz\bin\exparse.h	/^     OR = 322,$/;"	e	enum:extokentype
OR	C:\exVim\graphviz\bin\exparse.h	189;"	d
ORTHO	C:\exVim\graphviz\bin\config.h	438;"	d
OUTPUT_NOT_REQUIRED	C:\exVim\graphviz\include\graphviz\gvcjob.h	111;"	d
OVERLAP	C:\exVim\graphviz\include\graphviz\geom.h	45;"	d
ObjectSplit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! s:ObjectSplit(line,index) "{{{2 remove$/;"	f
Ocaml_get_type	C:\exVim\vim74\ftplugin\ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	C:\exVim\vim74\ftplugin\ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	C:\exVim\vim74\ftplugin\ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
Oct2Dec	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Oct2Dec(oct)$/;"	f
OmniSyntaxList	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f
OmniSyntaxShowChars	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^function! OmniSyntaxShowChars(spec)$/;"	f
OnBufferEnter	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:OnBufferEnter()$/;"	f
OnBufferLeave	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^function! s:OnBufferLeave()$/;"	f
Open	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:Open()$/;"	f
OpenEntry	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:OpenEntry(line, precmd, editcmd, dir)$/;"	f
OpenEntry2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:OpenEntry2(line, infoline, fname, editcmd)$/;"	f
OpenMulti	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
OpenUrlUnderCursor	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
Opener.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener.open(target)$/;"	f
Operators	C:\exVim\vimfiles\cppscript.vim	/^function! Operators(decFun,decFun_1,endpos)$/;"	f
OptionG	C:\exVim\vim74\optwin.vim	/^fun! <SID>OptionG(name, val)$/;"	f
OptionL	C:\exVim\vim74\optwin.vim	/^fun! <SID>OptionL(name)$/;"	f
P2PF	C:\exVim\graphviz\include\graphviz\geom.h	74;"	d
PACKAGE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PACKAGE   = 2;$/;"	f	class:ClassInfo	access:public
PACKAGE_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final char PACKAGE_SEPARATOR = '.'; $/;"	f	class:DynamicClassLoader	access:public
PARAMETER	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	734;"	d	file:
PATHSEPARATOR	C:\exVim\graphviz\bin\config.h	441;"	d
PATH_SEPARATOR	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public static final String PATH_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
PENWIDTH_BOLD	C:\exVim\graphviz\include\graphviz\gvcjob.h	41;"	d
PENWIDTH_NORMAL	C:\exVim\graphviz\include\graphviz\gvcjob.h	40;"	d
PEN_DASHED	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { PEN_NONE, PEN_DASHED, PEN_DOTTED, PEN_SOLID } pen_type;$/;"	e	enum:__anon15
PEN_DOTTED	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { PEN_NONE, PEN_DASHED, PEN_DOTTED, PEN_SOLID } pen_type;$/;"	e	enum:__anon15
PEN_NONE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { PEN_NONE, PEN_DASHED, PEN_DOTTED, PEN_SOLID } pen_type;$/;"	e	enum:__anon15
PEN_SOLID	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { PEN_NONE, PEN_DASHED, PEN_DOTTED, PEN_SOLID } pen_type;$/;"	e	enum:__anon15
PF2P	C:\exVim\graphviz\include\graphviz\geom.h	75;"	d
PK_BOT_ALIGN	C:\exVim\graphviz\include\graphviz\pack.h	44;"	d
PK_COL_MAJOR	C:\exVim\graphviz\include\graphviz\pack.h	39;"	d
PK_INPUT_ORDER	C:\exVim\graphviz\include\graphviz\pack.h	45;"	d
PK_LEFT_ALIGN	C:\exVim\graphviz\include\graphviz\pack.h	41;"	d
PK_RIGHT_ALIGN	C:\exVim\graphviz\include\graphviz\pack.h	42;"	d
PK_TOP_ALIGN	C:\exVim\graphviz\include\graphviz\pack.h	43;"	d
PK_USER_VALS	C:\exVim\graphviz\include\graphviz\pack.h	40;"	d
POINTS	C:\exVim\graphviz\include\graphviz\geom.h	70;"	d
POINTS_PER_CM	C:\exVim\graphviz\include\graphviz\geom.h	67;"	d
POINTS_PER_INCH	C:\exVim\graphviz\include\graphviz\geom.h	65;"	d
POINTS_PER_MM	C:\exVim\graphviz\include\graphviz\geom.h	68;"	d
POINTS_PER_PC	C:\exVim\graphviz\include\graphviz\geom.h	66;"	d
POS	C:\exVim\graphviz\bin\exparse.h	/^     POS = 287,$/;"	e	enum:extokentype
POS	C:\exVim\graphviz\bin\exparse.h	154;"	d
PRAGMA	C:\exVim\graphviz\bin\exparse.h	/^     PRAGMA = 288,$/;"	e	enum:extokentype
PRAGMA	C:\exVim\graphviz\bin\exparse.h	155;"	d
PRE	C:\exVim\graphviz\bin\exparse.h	/^     PRE = 289,$/;"	e	enum:extokentype
PRE	C:\exVim\graphviz\bin\exparse.h	156;"	d
PREVEREF	C:\exVim\graphviz\include\graphviz\cgraph.h	453;"	d
PREVNREF	C:\exVim\graphviz\include\graphviz\cgraph.h	444;"	d
PRINT	C:\exVim\graphviz\bin\exparse.h	/^     PRINT = 290,$/;"	e	enum:extokentype
PRINT	C:\exVim\graphviz\bin\exparse.h	157;"	d
PRINTF	C:\exVim\graphviz\bin\exparse.h	/^     PRINTF = 291,$/;"	e	enum:extokentype
PRINTF	C:\exVim\graphviz\bin\exparse.h	158;"	d
PRIVATE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:ClassInfo	access:public
PRIVATE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:Completion	access:public
PROCEDURE	C:\exVim\graphviz\bin\exparse.h	/^     PROCEDURE = 292,$/;"	e	enum:extokentype
PROCEDURE	C:\exVim\graphviz\bin\exparse.h	159;"	d
PROTECTED	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PROTECTED = 1;$/;"	f	class:ClassInfo	access:public
PROTECTED	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PROTECTED = 1;$/;"	f	class:Completion	access:public
PS2INCH	C:\exVim\graphviz\include\graphviz\geom.h	72;"	d
PSFONTS	C:\exVim\graphviz\include\graphviz\types.h	/^typedef enum {NATIVEFONTS,PSFONTS,SVGFONTS} fontname_kind;$/;"	e	enum:__anon42
PTvalue	C:\exVim\vim74\optwin.vim	/^fun! <SID>PTvalue()$/;"	f
PUBLIC	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:ClassInfo	access:public
PUBLIC	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:Completion	access:public
PYDICTION_DICT	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^PYDICTION_DICT = r'complete-dict'$/;"	v
PYDICTION_DICT_BACKUP	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^PYDICTION_DICT_BACKUP = r'complete-dict.last'$/;"	v
PackageCfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^	class PackageCfu #{{{2$/;"	c	class:Vjde
PackageClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^	class PackageClass #{{{2$/;"	c	class:Vjde
PackageClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageClasses.java	/^public class PackageClasses {$/;"	c
PackageClasses.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageClasses.java	/^	public static void main(String[] args) {$/;"	m	class:PackageClasses	access:public	signature:(String[] args)
PackageCompletion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageCompletion.java	/^public class PackageCompletion {$/;"	c
PackageCompletion.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageCompletion.java	/^    public static void main(String[] args) {$/;"	m	class:PackageCompletion	access:public	signature:(String[] args)
PackageName	C:\exVim\vim74\tools\pltags.pl	/^sub PackageName($)$/;"	s
PaintText	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void PaintText(HDC hdc) $/;"	f	signature:(HDC hdc)
PaintText	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^void PaintText(HDC hdc) $/;"	f	signature:(HDC hdc)
ParenMatchOff	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:ParenMatchOff()$/;"	f
ParmSub.If	C:\exVim\vim74\macros\shellmenu.vim	/^imenu ParmSub.If parm not set print word and exit ${:?}hhi$/;"	m
ParmSub.Set	C:\exVim\vim74\macros\shellmenu.vim	/^imenu ParmSub.Set parm to word if not set ${:=}hhi$/;"	m
ParmSub.Substitute	C:\exVim\vim74\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm not set ${:-}hhi$/;"	m
ParmSub.Substitute	C:\exVim\vim74\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm set else nothing ${:+}hhi$/;"	m
ParseCoffeeError	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseDataToProps	C:\exVim\vim74\tools\unicode.vim	/^func! ParseDataToProps()$/;"	f
ParseFoldProps	C:\exVim\vim74\tools\unicode.vim	/^func! ParseFoldProps()$/;"	f
ParseFunctionParameters	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:ParseFunctionParameters( lineBuffer, doc )$/;"	f
ParseFunctionTemplateParameters	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:ParseFunctionTemplateParameters( lineBuffer, doc )$/;"	f
ParseParameter	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:ParseParameter( param )$/;"	f
ParsePattern	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseRpmVars	C:\exVim\vim74\ftplugin\spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
ParseSkip	C:\exVim\vim74\macros\matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseSkip	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:ParseTagline(line)$/;"	f
ParseThrowParameters	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:ParseThrowParameters( lineBuffer, doc, throwPattern )$/;"	f
ParseWidthProps	C:\exVim\vim74\tools\unicode.vim	/^func! ParseWidthProps()$/;"	f
ParseWords	C:\exVim\vim74\macros\matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
ParseWords	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isUnder	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.tabnr()$/;"	f
Pedge_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct Pedge_t {$/;"	s
Pedge_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    } Pedge_t;$/;"	t	typeref:struct:Pedge_t
Pedge_t::a	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t a, b;$/;"	m	struct:Pedge_t	access:public
Pedge_t::b	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t a, b;$/;"	m	struct:Pedge_t	access:public
Peekstack	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:Peekstack(sname)$/;"	f
PerformListing	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:PerformListing(islocal)$/;"	f
Pexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Pexplore	call netrw#Explore(-2,0,0,<q-args>)$/;"	c
PhpDoc	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDoc()$/;"	f
PhpDocClass	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocClass()$/;"	f
PhpDocDefault	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocDefault()$/;"	f
PhpDocFunc	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocFunc()$/;"	f
PhpDocRange	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocRange() range$/;"	f
PhpDocScope	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocScope(modifiers, identifier)$/;"	f
PhpDocSingle	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocSingle()$/;"	f
PhpDocType	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocType(typeString)$/;"	f
PhpDocVar	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^func! PhpDocVar()$/;"	f
Pick	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
PlaceDelimitersAndInsBetween	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
Plugin	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=* -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=* -complete=custom,vundle#scripts#complete PluginUpdate PluginInstall! <args>$/;"	c
Pop	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:Pop(sname)$/;"	f
Pop	C:\exVim\vim74\indent\erlang.vim	/^function! s:Pop(stack)$/;"	f
PopEnvironmentVaribles	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:PopEnvironmentVaribles() " {{{2$/;"	f
PopPage	C:\exVim\vim74\ftplugin\man.vim	/^func <SID>PopPage()$/;"	f
PostscrIndentGet	C:\exVim\vim74\indent\postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
PostscriptAlias	C:\exVim\graphviz\include\graphviz\textpara.h	/^    } PostscriptAlias;$/;"	t	typeref:struct:_PostscriptAlias
PostscriptAlias	C:\exVim\graphviz\include\graphviz\textspan.h	/^    } PostscriptAlias;$/;"	t	typeref:struct:_PostscriptAlias
Ppoint_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct Pxy_t Ppoint_t;$/;"	t	typeref:struct:Pxy_t
Ppoint_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct pointf_s Ppoint_t;$/;"	t	typeref:struct:pointf_s
Ppoly_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct Ppoly_t {$/;"	s
Ppoly_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    } Ppoly_t;$/;"	t	typeref:struct:Ppoly_t
Ppoly_t::pn	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	int pn;$/;"	m	struct:Ppoly_t	access:public
Ppoly_t::ps	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t *ps;$/;"	m	struct:Ppoly_t	access:public
Ppolybarriers	C:\exVim\graphviz\include\graphviz\pathplan.h	/^    extern int Ppolybarriers(Ppoly_t ** polys, int npolys,$/;"	p	signature:(Ppoly_t ** polys, int npolys, Pedge_t ** barriers, int *n_barriers)
Ppolyline_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef Ppoly_t Ppolyline_t;$/;"	t
PreGetPage	C:\exVim\vim74\ftplugin\man.vim	/^func <SID>PreGetPage(cnt)$/;"	f
PrevIndToken	C:\exVim\vim74\indent\erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
PrevNonBlank	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
PrevNonBlankNonString	C:\exVim\vim74\indent\falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	C:\exVim\vim74\indent\json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	C:\exVim\vim74\indent\ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
ProgramName	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *ProgramName;$/;"	v	file:
ProgressBar	C:\exVim\vim74\syntax\2html.vim	/^  func! s:ProgressBar(title, max_value, winnr)$/;"	f
Project	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    command -nargs=? -complete=file Project call <SID>Project('<args>')$/;"	c
Project	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^function! s:Project(filename) " <<<$/;"	f
Project_ForEach	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! Project_ForEach(recurse, lineno, cmd, data, match)$/;"	f
Project_ForEachR	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:Project_ForEachR(recurse, lineno, info, cmd, data, match)$/;"	f
Project_GetAllFnames	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! Project_GetAllFnames(recurse, lineno, separator)$/;"	f
Project_GetFname	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! Project_GetFname(line)$/;"	f
Prompt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
PromptUser	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
ProtoCheck	C:\exVim\vim74\filetype.vim	/^func! s:ProtoCheck(default)$/;"	f
Proutespline	C:\exVim\graphviz\include\graphviz\pathplan.h	/^    extern int Proutespline(Pedge_t * barriers, int n_barriers,$/;"	p	signature:(Pedge_t * barriers, int n_barriers, Ppolyline_t input_route, Pvector_t endpoint_slopes[2], Ppolyline_t * output_route)
PrtAdd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PseudoTagPrefix	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^const char *const PseudoTagPrefix = "!_";$/;"	v
Pshortestpath	C:\exVim\graphviz\include\graphviz\pathplan.h	/^    extern int Pshortestpath(Ppoly_t * boundary, Ppoint_t endpoints[2],$/;"	p	signature:(Ppoly_t * boundary, Ppoint_t endpoints[2], Ppolyline_t * output_route)
PurifyCode	C:\exVim\vim74\indent\pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
Push	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:Push(el, sname)$/;"	f
Push	C:\exVim\vim74\indent\erlang.vim	/^function! s:Push(stack, token)$/;"	f
PushDeclare	C:\exVim\vimfiles\cscript.vim	/^function! PushDeclare()$/;"	f
PushEnvironmentVaribles	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:PushEnvironmentVaribles() " {{{2$/;"	f
Pvector_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct Pxy_t Pvector_t;$/;"	t	typeref:struct:Pxy_t
Pvector_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct pointf_s Pvector_t;$/;"	t	typeref:struct:pointf_s
Pxy_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct Pxy_t {$/;"	s
Pxy_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    } Pxy_t;$/;"	t	typeref:struct:Pxy_t
Pxy_t::x	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	double x, y;$/;"	m	struct:Pxy_t	access:public
Pxy_t::y	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	double x, y;$/;"	m	struct:Pxy_t	access:public
Python_jump	C:\exVim\vim74\ftplugin\python.vim	/^  fun! <SID>Python_jump(motion) range$/;"	f
Q	C:\exVim\vim74\evim.vim	/^map Q gq$/;"	m
Q	C:\exVim\vim74\vimrc_example.vim	/^map Q gq$/;"	m
Q1 HREF=#Q1	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q1 HREF=#Q1>$/;"	a
Q10 HREF=#Q10	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q10 HREF=#Q10>$/;"	a
Q10b	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q10b>$/;"	a
Q12 HREF=#Q12	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q12 HREF=#Q12>$/;"	a
Q13 HREF=#Q13	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q13 HREF=#Q13>$/;"	a
Q14 HREF=#Q14	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q14 HREF=#Q14>$/;"	a
Q15	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q15>$/;"	a
Q16 HREF=#Q16	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q16 HREF=#Q16>$/;"	a
Q17	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q17>$/;"	a
Q18 HREF=#Q18	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q18 HREF=#Q18>$/;"	a
Q2 HREF=#Q2	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q2 HREF=#Q2>$/;"	a
Q20	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q20>$/;"	a
Q21	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q21>$/;"	a
Q22	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q22>$/;"	a
Q23	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q23>$/;"	a
Q24	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q24>$/;"	a
Q25 HREF=#Q25	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q25 HREF=#Q25>$/;"	a
Q26 HREF=#Q26	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q26 HREF=#Q26>$/;"	a
Q27 HREF=#Q27	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q27 HREF=#Q27>$/;"	a
Q28	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q28>$/;"	a
Q29 HREF=#Q29	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q29 HREF=#Q29>$/;"	a
Q3 HREF=#Q3	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q3 HREF=#Q3>$/;"	a
Q30 HREF=#Q30	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q30 HREF=#Q30>$/;"	a
Q31 HREF=#Q31	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q31 HREF=#Q31>$/;"	a
Q32 HREF=#Q32	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q32 HREF=#Q32>$/;"	a
Q33 HREF=#Q33	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q33 HREF=#Q33>$/;"	a
Q34 HREF=#Q34	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q34 HREF=#Q34>$/;"	a
Q34a	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q34a>$/;"	a
Q35	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q35>$/;"	a
Q36 HREF=#Q36	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q36 HREF=#Q36>$/;"	a
Q37 HREF=#Q37	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q37 HREF=#Q37>$/;"	a
Q38 HREF=#Q38	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q38 HREF=#Q38>$/;"	a
Q39	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q39>$/;"	a
Q4 HREF=#Q4	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q4 HREF=#Q4>$/;"	a
Q40 HREF=#Q40	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q40 HREF=#Q40>$/;"	a
Q41 HREF=#Q41	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q41 HREF=#Q41>$/;"	a
Q42 HREF=#Q42	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q42 HREF=#Q42><B>Q41<\/A>. What do all these plugin libraries do?<\/B>$/;"	a
Q4a	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q4a>$/;"	a
Q4b	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q4b>$/;"	a
Q4c	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q4c>$/;"	a
Q5 HREF=#Q5	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q5 HREF=#Q5>$/;"	a
Q5a	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q5a>$/;"	a
Q6 HREF=#Q6	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q6 HREF=#Q6>$/;"	a
Q7 HREF=#Q7	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q7 HREF=#Q7>$/;"	a
Q8 HREF=#Q8	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q8 HREF=#Q8>$/;"	a
Q9 HREF=#Q9	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A name=Q9 HREF=#Q9>$/;"	a
QFix	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^command! -n=? -complete=file QFix call exqfix#open('<args>')$/;"	c
QUERY	C:\exVim\graphviz\bin\exparse.h	/^     QUERY = 293,$/;"	e	enum:extokentype
QUERY	C:\exVim\graphviz\bin\exparse.h	160;"	d
QuitPreHook	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
R	C:\exVim\vim74\macros\less.vim	/^noremap <script> R <C-L><SID>L$/;"	m
RADIANS	C:\exVim\graphviz\include\graphviz\arith.h	88;"	d
RAND	C:\exVim\graphviz\bin\exparse.h	/^     RAND = 294,$/;"	e	enum:extokentype
RAND	C:\exVim\graphviz\bin\exparse.h	161;"	d
RDelete_parens	C:\exVim\vim74\indent\r.vim	/^function s:RDelete_parens(line)$/;"	f
RDelete_quotes	C:\exVim\vim74\indent\r.vim	/^function s:RDelete_quotes(line)$/;"	f
READTAGS_H	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	22;"	d
REJECT	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	683;"	d	file:
RETURN	C:\exVim\graphviz\bin\exparse.h	/^     RETURN = 295,$/;"	e	enum:extokentype
RETURN	C:\exVim\graphviz\bin\exparse.h	162;"	d
RET_VAL	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
RGBA	C:\exVim\graphviz\include\graphviz\color.h	/^	double RGBA[4];$/;"	m	union:color_s::__anon7	access:public
RGBA_BYTE	C:\exVim\graphviz\include\graphviz\color.h	/^typedef enum { HSVA_DOUBLE, RGBA_BYTE, RGBA_WORD, CMYK_BYTE,$/;"	e	enum:__anon6
RGBA_DOUBLE	C:\exVim\graphviz\include\graphviz\color.h	/^		RGBA_DOUBLE, COLOR_STRING, COLOR_INDEX } color_type_t;$/;"	e	enum:__anon6
RGBA_WORD	C:\exVim\graphviz\include\graphviz\color.h	/^typedef enum { HSVA_DOUBLE, RGBA_BYTE, RGBA_WORD, CMYK_BYTE,$/;"	e	enum:__anon6
RI	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RI     call visincr#VisBlockIncr(s:RI     , <f-args>)$/;"	c
RIA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIA    call visincr#VisBlockIncr(s:RIA    , <f-args>)$/;"	c
RIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIB    call visincr#VisBlockIncr(s:RIB    , <f-args>)$/;"	c
RID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RID    call visincr#VisBlockIncr(s:RID    , <f-args>)$/;"	c
RIDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIDMY  call visincr#VisBlockIncr(s:RIDMY  , <f-args>)$/;"	c
RII	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RII    call visincr#VisBlockIncr(s:RII    , <f-args>)$/;"	c
RIIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIB   call visincr#VisBlockIncr(s:RIIB   , <f-args>)$/;"	c
RIIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIO   call visincr#VisOlockIncr(s:RIIO   , <f-args>)$/;"	c
RIIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIIPOW call visincr#VisBlockIncr(s:RIIPOW , <f-args>)$/;"	c
RIIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIR   call visincr#VisRlockIncr(s:RIIR   , <f-args>)$/;"	c
RIIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIX   call visincr#VisBlockIncr(s:RIIX   , <f-args>)$/;"	c
RIM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIM    call visincr#VisBlockIncr(s:RIM    , <f-args>)$/;"	c
RIMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIMDY  call visincr#VisBlockIncr(s:RIMDY  , <f-args>)$/;"	c
RIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIO    call visincr#VisOlockIncr(s:RIO    , <f-args>)$/;"	c
RIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIPOW  call visincr#VisBlockIncr(s:RIPOW  , <f-args>)$/;"	c
RIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIR    call visincr#VisRlockIncr(s:RIR    , <f-args>)$/;"	c
RIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIX    call visincr#VisBlockIncr(s:RIX    , <f-args>)$/;"	c
RIYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIYMD  call visincr#VisBlockIncr(s:RIYMD  , <f-args>)$/;"	c
ROOTGRAPH_OBJTYPE	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {ROOTGRAPH_OBJTYPE, CLUSTER_OBJTYPE, NODE_OBJTYPE, EDGE_OBJTYPE} obj_type;$/;"	e	enum:__anon23
ROUND	C:\exVim\graphviz\include\graphviz\arith.h	87;"	d
RS	C:\exVim\graphviz\bin\exparse.h	/^     RS = 328,$/;"	e	enum:extokentype
RS	C:\exVim\graphviz\bin\exparse.h	195;"	d
R_AUTO	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	e	enum:__anon41
R_COMPRESS	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	e	enum:__anon41
R_EXPAND	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	e	enum:__anon41
R_FILL	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	e	enum:__anon41
R_NONE	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { R_NONE =$/;"	e	enum:__anon41
R_VALUE	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	e	enum:__anon41
Range	C:\exVim\vim74\tools\unicode.vim	/^func! Range(ranges, start, end, step, add)$/;"	f
ReadInt	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int ReadInt(char *in,int l)$/;"	f	signature:(char *in,int l)
ReadInt	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int ReadInt(char *in,int l)$/;"	f	signature:(char *in,int l)
ReadTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^class ReadTags #{{{1$/;"	c	class:Vjde
Reason	C:\exVim\vim74\tools\ccfilter.c	/^char	       Reason[LINELENGTH];$/;"	v
RecordInFile	C:\exVim\vim74\autoload\vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	C:\exVim\vim74\autoload\vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
RecordPrevBuffer_au	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:RecordPrevBuffer_au()$/;"	f
RecursivelyConstructDirectives	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:RecursivelyConstructDirectives(lineno)$/;"	f
Redif	C:\exVim\vim74\filetype.vim	/^func! s:Redif()$/;"	f
Ref	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Ref	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
RefreshEntriesFromDir	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:RefreshEntriesFromDir(recursive)$/;"	f
RegexpQuote	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^func! s:RegexpQuote(str)$/;"	f
RegexpQuoteInSquare	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^func! s:RegexpQuoteInSquare(str)$/;"	f
RehighlightBlame	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Release	C:\exVim\vim74\tools\shtags.pl	/^Release:	$id[2]$/;"	l
RemoteComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
RemotePathAnalysis	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:RemotePathAnalysis(dirname)$/;"	f
RemoteSystem	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:RemoteSystem(cmd)$/;"	f
Remove	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveCarriageReturn	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RemoveComments	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:RemoveComments( lineBuffer )$/;"	f
RemoveDelimiters	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveITags	C:\exVim\vim74\indent\html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
RemoveITags	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:RemoveITags(taglist) "{{{$/;"	f
RemoveNonExistingParameters	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:RemoveNonExistingParameters()$/;"	f
RemoveTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:RemoveTag(rangeStart, rangeEnd, tagName, tagParam)$/;"	f
RemoveTrailingComments	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
Render	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
ReplaceCmd	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceDelims	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
Reset	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetPhpOptions	C:\exVim\vim74\indent\php.vim	/^function! ResetPhpOptions()$/;"	f
ResetWidth	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
Resolve	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
Resolve	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
ResolveMethodParams	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:ResolveMethodParams(methodHeader)$/;"	f
RestoreBufVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:RestoreBufVars()$/;"	f
RestoreCursorline	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:RestoreCursorline()$/;"	f
RestoreKeywords	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:RestoreKeywords()$/;"	f
RestoreParameters	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:RestoreParameters()$/;"	f
RestoreScreenState	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreShiftwidth	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
RestoreUserOptions	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:RestoreUserOptions()$/;"	f
RestoreVals	C:\exVim\vimfiles\bundle\pydiction\after\ftplugin\python_pydiction.vim	/^    function! s:RestoreVals()$/;"	f
RestoreValue	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
RestoreWinVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:RestoreWinVars()$/;"	f
Result	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^interface Result {$/;"	i
Result.location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String location() ;$/;"	m	interface:Result	access:public	signature:()
Result.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String name() ;$/;"	m	interface:Result	access:public	signature:()
Result.value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Result	access:public	signature:()
ResultImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public ResultImpl(String n,String l) {$/;"	m	class:ResultImpl	access:public	signature:(String n,String l)
ResultImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^class ResultImpl implements Result {$/;"	c	inherits:Result
ResultImpl.ResultImpl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public ResultImpl(String n,String l) {$/;"	m	class:ResultImpl	access:public	signature:(String n,String l)
ResultImpl.annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String location() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String location;$/;"	f	class:ResultImpl	access:default
ResultImpl.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String name() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String name;$/;"	f	class:ResultImpl	access:default
ResultImpl.params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.type	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String type() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public ResultImpl2(String n,String l) {$/;"	m	class:ResultImpl2	access:public	signature:(String n,String l)
ResultImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^class ResultImpl2 implements Result {$/;"	c	inherits:Result
ResultImpl2.ResultImpl2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public ResultImpl2(String n,String l) {$/;"	m	class:ResultImpl2	access:public	signature:(String n,String l)
ResultImpl2.annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String location() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String location;$/;"	f	class:ResultImpl2	access:default
ResultImpl2.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String name() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String name;$/;"	f	class:ResultImpl2	access:default
ResultImpl2.params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.type	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String type() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public String value() {$/;"	m	class:ResultImpl2	access:public	signature:()
RetriveTextSize	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^BOOL RetriveTextSize(HDC hdc)$/;"	f	signature:(HDC hdc)
RetriveTextSize	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^BOOL RetriveTextSize(HDC hdc)$/;"	f	signature:(HDC hdc)
ReverseFilter	C:\exVim\vimfiles\bundle\ex-gsearch\ftplugin\exgsearch.vim	/^command! -buffer -nargs=1 ReverseFilter call exgsearch#filter('<args>', 'pattern', 1)$/;"	c
ReverseFilter	C:\exVim\vimfiles\bundle\ex-symbol\ftplugin\exsymbol.vim	/^command! -buffer -nargs=1 ReverseFilter call exsymbol#filter('<args>', 1)$/;"	c
ReverseFilterFile	C:\exVim\vimfiles\bundle\ex-gsearch\ftplugin\exgsearch.vim	/^command! -buffer -nargs=1 ReverseFilterFile call exgsearch#filter('<args>', 'file', 1)$/;"	c
RevisionComplete	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Reword	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
Right	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:Right(...)$/;"	f
Right	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RightMostIndx	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RmVimball	C:\exVim\vim74\plugin\vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball							call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
Rmdir	C:\exVim\vim74\autoload\tar.vim	/^fun! s:Rmdir(fname)$/;"	f
Rmdir	C:\exVim\vim74\autoload\zip.vim	/^fun! s:Rmdir(fname)$/;"	f
Rom2Dec	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:Rom2Dec(roman)$/;"	f
Row	C:\exVim\vim74\tools\ccfilter.c	/^unsigned long  Row;$/;"	v
RplGetFreeIndent	C:\exVim\vim74\indent\rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	C:\exVim\vim74\indent\rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RubyBalloonexpr	C:\exVim\vim74\ftplugin\ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	C:\exVim\vim74\ftplugin\ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyMember_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! RubyMember_New(kind,name)$/;"	f
Run	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:Run(async) " {{{1$/;"	f
RunAsyncWithMessage	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:RunAsyncWithMessage(run_cmd) " {{{2$/;"	f
RunPython	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! s:RunPython(run_command) " {{{2$/;"	f
S2B	C:\exVim\graphviz\bin\exparse.h	/^     S2B = 311,$/;"	e	enum:extokentype
S2B	C:\exVim\graphviz\bin\exparse.h	178;"	d
S2F	C:\exVim\graphviz\bin\exparse.h	/^     S2F = 312,$/;"	e	enum:extokentype
S2F	C:\exVim\graphviz\bin\exparse.h	179;"	d
S2I	C:\exVim\graphviz\bin\exparse.h	/^     S2I = 313,$/;"	e	enum:extokentype
S2I	C:\exVim\graphviz\bin\exparse.h	180;"	d
S2X	C:\exVim\graphviz\bin\exparse.h	/^     S2X = 316,$/;"	e	enum:extokentype
S2X	C:\exVim\graphviz\bin\exparse.h	183;"	d
SCANF	C:\exVim\graphviz\bin\exparse.h	/^     SCANF = 296,$/;"	e	enum:extokentype
SCANF	C:\exVim\graphviz\bin\exparse.h	163;"	d
SCChooseCompiler	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCChooseCompiler call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCChooseInterpreter	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCChooseInterpreter call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCCompile	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=* SCCompile$/;"	c
SCCompileAF	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=+ SCCompileAF$/;"	c
SCCompileRun	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=* SCCompileRun$/;"	c
SCCompileRunAF	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=+ SCCompileRunAF$/;"	c
SCCompileRunAsync	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=* SCCompileRunAsync$/;"	c
SCCompileRunAsyncAF	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=+ SCCompileRunAsyncAF$/;"	c
SCIsRunningAsync	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCIsRunningAsync$/;"	c
SCTerminateAsync	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCTerminateAsync$/;"	c
SCViewResult	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCViewResult call SingleCompile#ViewResult(0)$/;"	c
SCViewResultAsync	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command SCViewResultAsync call SingleCompile#ViewResult(1)$/;"	c
SED_CMD	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^    set SED_CMD=sed$/;"	v
SED_CMD	C:\exVim\vimfiles\tools\shell\batch\update-filelist.bat	/^set SED_CMD="%TOOLS%\\windows\\sed.exe"$/;"	v
SEND_MSEC_POLL	C:\exVim\vim74\tools\xcmdsrv_client.c	206;"	d	file:
SET_RANKDIR	C:\exVim\graphviz\include\graphviz\types.h	563;"	d
SFDP	C:\exVim\graphviz\bin\config.h	444;"	d
SGN	C:\exVim\graphviz\include\graphviz\arith.h	51;"	d
SH_EPSF	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	e	enum:__anon40
SH_POINT	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	e	enum:__anon40
SH_POLY	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	e	enum:__anon40
SH_RECORD	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	e	enum:__anon40
SH_UNSET	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	e	enum:__anon40
SID	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function s:SID()$/;"	f
SID_PREFIX	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! s:SID_PREFIX() "{{{$/;"	f
SList	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol SList call exsymbol#list('<args>')$/;"	c
SOUTH	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        NORTH(1), SOUTH(2), EAST(3), DENNIS(4);$/;"	e	enum:CalculateStats.Choices	file:	access:public
SPACE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String SPACE = " ";$/;"	f	class:ClassInfo	access:public
SPACE	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String SPACE = " ";$/;"	f	class:Completion	access:public
SPLIT	C:\exVim\graphviz\bin\exparse.h	/^     SPLIT = 297,$/;"	e	enum:extokentype
SPLIT	C:\exVim\graphviz\bin\exparse.h	164;"	d
SPRINTF	C:\exVim\graphviz\bin\exparse.h	/^     SPRINTF = 298,$/;"	e	enum:extokentype
SPRINTF	C:\exVim\graphviz\bin\exparse.h	165;"	d
SQL	C:\exVim\vim74\filetype.vim	/^func! s:SQL()$/;"	f
SQLCAddAlias	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCAddAlias(table_name, table_alias, cols)$/;"	f
SQLCCheck4dbext	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCCheck4dbext()$/;"	f
SQLCErrorMsg	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCErrorMsg(msg)$/;"	f
SQLCGetColumns	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCGetColumns(table_name, list_type)$/;"	f
SQLCGetObjectOwner	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCGetObjectOwner(object)$/;"	f
SQLCGetSyntaxList	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCGetSyntaxList(syn_group)$/;"	f
SQLCWarningMsg	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! s:SQLCWarningMsg(msg)$/;"	f
SQLGetType	C:\exVim\vim74\ftplugin\sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	C:\exVim\vim74\ftplugin\sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	C:\exVim\vim74\ftplugin\sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	C:\exVim\vim74\ftplugin\sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	C:\exVim\vim74\ftplugin\sql.vim	/^    function SQL_SetType(name)$/;"	f
SQR	C:\exVim\graphviz\include\graphviz\arith.h	91;"	d
SQRT2	C:\exVim\graphviz\include\graphviz\arith.h	84;"	d
SRAND	C:\exVim\graphviz\bin\exparse.h	/^     SRAND = 299,$/;"	e	enum:extokentype
SRAND	C:\exVim\graphviz\bin\exparse.h	166;"	d
SSCANF	C:\exVim\graphviz\bin\exparse.h	/^     SSCANF = 300,$/;"	e	enum:extokentype
SSCANF	C:\exVim\graphviz\bin\exparse.h	167;"	d
START_LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String START_LIST;$/;"	f	class:ClassInfo	access:public
START_LIST	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String START_LIST;$/;"	f	class:Completion	access:public
START_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String START_PAREN = "(";$/;"	f	class:ClassInfo	access:public
START_PAREN	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String START_PAREN = "[";$/;"	f	class:Completion	access:public
STATIC_SPACE	C:\exVim\vim74\tools\xcmdsrv_client.c	109;"	d	file:
STDC_HEADERS	C:\exVim\graphviz\bin\config.h	459;"	d
STDOUT_ONLY	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        STDOUT_ONLY = True$/;"	v
STDOUT_ONLY	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^STDOUT_ONLY = False$/;"	v
STRING	C:\exVim\graphviz\bin\exparse.h	/^     STRING = 263,$/;"	e	enum:extokentype
STRING	C:\exVim\graphviz\bin\exparse.h	130;"	d
STROKE_CLOSED	C:\exVim\graphviz\include\graphviz\types.h	161;"	d
STROKE_FILLED	C:\exVim\graphviz\include\graphviz\types.h	162;"	d
STROKE_PENDOWN	C:\exVim\graphviz\include\graphviz\types.h	163;"	d
STROKE_VERTICES_ALLOCATED	C:\exVim\graphviz\include\graphviz\types.h	164;"	d
SUB	C:\exVim\graphviz\bin\exparse.h	/^     SUB = 301,$/;"	e	enum:extokentype
SUB	C:\exVim\graphviz\bin\exparse.h	168;"	d
SUBSTR	C:\exVim\graphviz\bin\exparse.h	/^     SUBSTR = 302,$/;"	e	enum:extokentype
SUBSTR	C:\exVim\graphviz\bin\exparse.h	169;"	d
SVGFONTS	C:\exVim\graphviz\include\graphviz\types.h	/^typedef enum {NATIVEFONTS,PSFONTS,SVGFONTS} fontname_kind;$/;"	e	enum:__anon42
SWITCH	C:\exVim\graphviz\bin\exparse.h	/^     SWITCH = 303,$/;"	e	enum:extokentype
SWITCH	C:\exVim\graphviz\bin\exparse.h	170;"	d
Safe_indent	C:\exVim\vim74\indent\awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
SanitizeRHelpLine	C:\exVim\vim74\indent\rhelp.vim	/^function s:SanitizeRHelpLine(line)$/;"	f
SanitizeRLine	C:\exVim\vim74\indent\r.vim	/^function SanitizeRLine(line)$/;"	f
SaveBufVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:SaveBufVars()$/;"	f
SaveClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
SaveScreenState	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveUserOptions	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! s:SaveUserOptions()$/;"	f
SaveValue	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
SaveVimSesn	C:\exVim\vim74\menu.vim	/^fun! s:SaveVimSesn()$/;"	f
SaveWinVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:SaveWinVars()$/;"	f
ScratchBufBuild	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
SearchClasses	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! s:SearchClasses(jar,lib_path,prefix,base)$/;"	f
SearchCode	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchDict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
SearchDict2	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
SearchEndPair	C:\exVim\vim74\indent\erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
SearchInvalidComment	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^fun! SearchInvalidComment(backwards)$/;"	f
SearchMatchingKeyword	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchMembers	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:SearchMembers(matches, items, all)$/;"	f
SearchP	C:\exVim\vim74\menu.vim	/^fun! s:SearchP()$/;"	f
SearchPackages	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! s:SearchPackages(jar,lib_path,prefix)$/;"	f
SearchPair	C:\exVim\vim74\indent\erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
SearchPair	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchPrevDocComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:SearchPrevDocComments()$/;"	f
SearchSection	C:\exVim\vim74\ftplugin\j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f
Seems_continuing	C:\exVim\vim74\indent\awk.vim	/^function! s:Seems_continuing( line )$/;"	f
SelectAll	C:\exVim\vim74\menu.vim	/^func! <SID>SelectAll()$/;"	f
SelectJavascript	C:\exVim\vimfiles\bundle\vim-javascript\ftdetect\javascript.vim	/^fun! s:SelectJavascript()$/;"	f
SendEventProc	C:\exVim\vim74\tools\xcmdsrv_client.c	/^SendEventProc(dpy, eventPtr, expected, code)$/;"	f	file:
SendEventProc	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static char	*SendEventProc __ARGS((Display *dpy, XEvent *eventPtr,$/;"	p	file:	signature:(Display *dpy, XEvent *eventPtr, int expect, int *code)
SendInit	C:\exVim\vim74\tools\xcmdsrv_client.c	/^SendInit(dpy)$/;"	f	file:
SendInit	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static int	SendInit __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
Set.All	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.All keyword arguments are placed in the environment set -k$/;"	m
Set.Disable	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Disable file name generation set -f$/;"	m
Set.Exit	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Exit after reading and executing one command set -t$/;"	m
Set.Print	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Print commands and their arguments as they are executed set -x$/;"	m
Set.Print	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Print shell input lines as they are read set -v$/;"	m
Set.Read	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Read commands but do not execute them set -n$/;"	m
Set.Treat	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.Treat unset variables as an error when substituting set -u$/;"	m
Set.exit	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.exit when command returns non-zero exit code set -e$/;"	m
Set.mark	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.mark modified or modified variables set -a$/;"	m
Set.remember	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.remember function commands set -h$/;"	m
Set.set	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.set set$/;"	m
Set.unset	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Set.unset unset$/;"	m
SetBufWinVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:SetBufWinVars()$/;"	f
SetCompilerSingleTemplate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^fun! s:SetCompilerSingleTemplate(lang_name, compiler, key, value, ...)$/;"	f
SetCompilerType	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetConcealOption	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:SetConcealOption()$/;"	f
SetDefTxt	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetErlangOptions	C:\exVim\vim74\ftplugin\erlang.vim	/^function s:SetErlangOptions()$/;"	f
SetFileTypeSH	C:\exVim\vim74\filetype.vim	/^func! SetFileTypeSH(name)$/;"	f
SetFileTypeShell	C:\exVim\vim74\filetype.vim	/^func! SetFileTypeShell(name)$/;"	f
SetGlobalVimCompiler	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:SetGlobalVimCompiler(lang_name, compiler) " {{{1$/;"	f
SetIsk	C:\exVim\vim74\syntax\bst.vim	/^    command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	C:\exVim\vim74\syntax\bst.vim	/^    command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetIsk	C:\exVim\vim74\syntax\lilo.vim	/^  command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	C:\exVim\vim74\syntax\lilo.vim	/^  command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetKeywords	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! s:SetKeywords()$/;"	f
SetLines	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetLines	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
SetMakePrg	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetOption	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetRexDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:SetRexDir(islocal,dirname)$/;"	f
SetSyn	C:\exVim\vim74\synmenu.vim	/^fun! SetSyn(name)$/;"	f
SetUpForNewFiletype	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetVals	C:\exVim\vimfiles\bundle\pydiction\after\ftplugin\python_pydiction.vim	/^    function! s:SetVals()$/;"	f
SetVimCompiler	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:SetVimCompiler(lang_name, compiler) " {{{1$/;"	f
SetWD	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetexToAtx	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
SetexToAtx	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
Setsynonly	C:\exVim\vim74\synmenu.vim	/^fun! s:Setsynonly()$/;"	f
Setup	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^function! s:Setup()$/;"	f
SetupAutoCommand	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:SetupAutoCommand(cwd)$/;"	f
SetupAutoCommands	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! <SID>SetupAutoCommands()$/;"	f
SetupNetrwStatusLine	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:SetupNetrwStatusLine(statline)$/;"	f
SetupRemoteReplies	C:\exVim\vim74\plugin\rrhelper.vim	/^function SetupRemoteReplies()$/;"	f
SetupScriptAutoCommand	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:SetupScriptAutoCommand(bufcmd, script)$/;"	f
Severity	C:\exVim\vim74\tools\ccfilter.c	/^char	       Severity;$/;"	v
Sexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Sexplore	call netrw#Explore(<count>,1,0+<bang>0,<q-args>)$/;"	c
ShiftWidth	C:\exVim\vim74\indent\html.vim	/^  func! s:ShiftWidth()$/;"	f
ShiftWidth	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^    func! s:ShiftWidth()$/;"	f
ShiftWidth	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldQuickfixBeUsed	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:ShouldQuickfixBeUsed() " tell whether quickfix sould be used{{{1$/;"	f
ShouldSkip	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShouldSkipHighlight	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:ShouldSkipHighlight()$/;"	f
ShowElement	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! s:ShowElement(item2,mloader)$/;"	f
ShowMarks	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarks()$/;"	f
ShowMarksClearAll	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^com! -nargs=0 ShowMarksClearAll  :call <sid>ShowMarksClearAll()$/;"	c
ShowMarksClearAll	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksClearAll()$/;"	f
ShowMarksClearMark	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^com! -nargs=0 ShowMarksClearMark :call <sid>ShowMarksClearMark()$/;"	c
ShowMarksClearMark	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksClearMark()$/;"	f
ShowMarksHideAll	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksHideAll()$/;"	f
ShowMarksOn	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^com! -nargs=0 ShowMarksOn        :call <sid>ShowMarksOn()$/;"	c
ShowMarksOn	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksOn()$/;"	f
ShowMarksPlaceMark	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^com! -nargs=0 ShowMarksPlaceMark :call <sid>ShowMarksPlaceMark('')$/;"	c
ShowMarksPlaceMark	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksPlaceMark(mark_name)$/;"	f
ShowMarksSetup	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksSetup()$/;"	f
ShowMarksToggle	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^com! -nargs=0 ShowMarksToggle    :call <sid>ShowMarksToggle()$/;"	c
ShowMarksToggle	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:ShowMarksToggle()$/;"	f
ShowMessage	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! s:ShowMessage(message) "{{{1$/;"	f
ShowUsage	C:\exVim\vim74\tools\ccfilter.c	/^int ShowUsage( char *szError )$/;"	f	signature:( char *szError )
SimplifyAdjacentCollections	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f
SimplifyToAssumeAllPrintable	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f
SingleCompile	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=* SingleCompile$/;"	c
SingleCompile#ChooseCompiler	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^fun! SingleCompile#ChooseCompiler(lang_name, ...) " choose a compiler {{{1$/;"	f
SingleCompile#CloseViewResult	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#CloseViewResult() " close the last result {{{1$/;"	f
SingleCompile#Compile	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#Compile(...) " compile synchronously {{{1$/;"	f
SingleCompile#CompileAsync	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#CompileAsync(...) " compile asynchronously {{{1$/;"	f
SingleCompile#CompileRun	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#CompileRun(...) " compile and run {{{1$/;"	f
SingleCompile#CompileRunAsync	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#CompileRunAsync(...) " {{{1$/;"	f
SingleCompile#DetectCompilerGenerally	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#DetectCompilerGenerally(compiling_command)$/;"	f
SingleCompile#DetectIe	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#DetectIe(not_used_arg) " {{{2$/;"	f
SingleCompile#DetectMicrosoftVC	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#DetectMicrosoftVC(compiling_command) " {{{2$/;"	f
SingleCompile#DetectWatcom	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#DetectWatcom(compiling_command) " {{{2$/;"	f
SingleCompile#GetDefaultOpenCommand	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#GetDefaultOpenCommand() " {{{2$/;"	f
SingleCompile#GetExecutableSuffix	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#GetExecutableSuffix()$/;"	f
SingleCompile#GetVersion	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#GetVersion() " get the script version {{{1$/;"	f
SingleCompile#PostdoMicrosoftVC	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PostdoMicrosoftVC(not_used_arg) " MSVC post-do {{{2$/;"	f
SingleCompile#PostdoWatcom	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PostdoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#PredoClang	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoClang(compiling_info) " clang Predo {{{2$/;"	f
SingleCompile#PredoGcc	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoGcc(compiling_info) " gcc pre-do {{{2$/;"	f
SingleCompile#PredoMicrosoftVC	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoMicrosoftVC(compiling_info) " MSVC Predo {{{2$/;"	f
SingleCompile#PredoShell	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoShell(compiling_info) " shell predo {{{2$/;"	f
SingleCompile#PredoSolStudioC	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoSolStudioC(compiling_info) " solaris studio C\/C++ pre-do {{{2$/;"	f
SingleCompile#PredoWatcom	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#PredoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#SetCompilerTemplate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplate(lang_name, compiler,$/;"	f
SingleCompile#SetCompilerTemplateByDict	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplateByDict($/;"	f
SingleCompile#SetDetectFunc	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetDetectFunc(lang_name, compiler, detect_func) " {{{2$/;"	f
SingleCompile#SetOutfile	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetOutfile(lang_name, compiler, outfile) " {{{2$/;"	f
SingleCompile#SetPostdo	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetPostdo(lang_name, compiler, postdo_func) " {{{2$/;"	f
SingleCompile#SetPredo	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetPredo(lang_name, compiler, predo_func) " {{{2$/;"	f
SingleCompile#SetPriority	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetPriority(lang_name, compiler, priority) " {{{2$/;"	f
SingleCompile#SetTemplate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#SetTemplate(lang_name, stype, string,...) " {{{1$/;"	f
SingleCompile#SetVimCompiler	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^fun! SingleCompile#SetVimCompiler(lang_name, compiler, vim_compiler) " {{{2$/;"	f
SingleCompile#ViewResult	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^function! SingleCompile#ViewResult(async) " view the running result {{{1$/;"	f
SingleCompile#templates#ada#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\ada.vim	/^function! SingleCompile#templates#ada#Initialize()$/;"	f
SingleCompile#templates#bash#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\bash.vim	/^function! SingleCompile#templates#bash#Initialize()$/;"	f
SingleCompile#templates#c#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\c.vim	/^function! SingleCompile#templates#c#Initialize()$/;"	f
SingleCompile#templates#cmake#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\cmake.vim	/^function! SingleCompile#templates#cmake#Initialize()$/;"	f
SingleCompile#templates#coffee#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\coffee.vim	/^function! SingleCompile#templates#coffee#Initialize()$/;"	f
SingleCompile#templates#cpp#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\cpp.vim	/^function! SingleCompile#templates#cpp#Initialize()$/;"	f
SingleCompile#templates#cs#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\cs.vim	/^function! SingleCompile#templates#cs#Initialize()$/;"	f
SingleCompile#templates#csh#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\csh.vim	/^function! SingleCompile#templates#csh#Initialize()$/;"	f
SingleCompile#templates#d#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\d.vim	/^function! SingleCompile#templates#d#Initialize()$/;"	f
SingleCompile#templates#dosbatch#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\dosbatch.vim	/^function! SingleCompile#templates#dosbatch#Initialize()$/;"	f
SingleCompile#templates#elixir#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\elixir.vim	/^function! SingleCompile#templates#elixir#Initialize()$/;"	f
SingleCompile#templates#erlang#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\erlang.vim	/^function! SingleCompile#templates#erlang#Initialize()$/;"	f
SingleCompile#templates#fortran#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\fortran.vim	/^function! SingleCompile#templates#fortran#Initialize()$/;"	f
SingleCompile#templates#go#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\go.vim	/^function! SingleCompile#templates#go#Initialize()$/;"	f
SingleCompile#templates#haskell#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\haskell.vim	/^function! SingleCompile#templates#haskell#Initialize()$/;"	f
SingleCompile#templates#html#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\html.vim	/^function! SingleCompile#templates#html#Initialize()$/;"	f
SingleCompile#templates#idlang#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\idlang.vim	/^function! SingleCompile#templates#idlang#Initialize()$/;"	f
SingleCompile#templates#java#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\java.vim	/^function! SingleCompile#templates#java#Initialize()$/;"	f
SingleCompile#templates#javascript#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\javascript.vim	/^function! SingleCompile#templates#javascript#Initialize()$/;"	f
SingleCompile#templates#ksh#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\ksh.vim	/^function! SingleCompile#templates#ksh#Initialize()$/;"	f
SingleCompile#templates#lisp#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\lisp.vim	/^function! SingleCompile#templates#lisp#Initialize()$/;"	f
SingleCompile#templates#ls#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\ls.vim	/^function! SingleCompile#templates#ls#Initialize()$/;"	f
SingleCompile#templates#lua#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\lua.vim	/^function! SingleCompile#templates#lua#Initialize()$/;"	f
SingleCompile#templates#make#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\make.vim	/^function! SingleCompile#templates#make#Initialize()$/;"	f
SingleCompile#templates#markdown#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\markdown.vim	/^function! SingleCompile#templates#markdown#Initialize()$/;"	f
SingleCompile#templates#matlab#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\matlab.vim	/^function! SingleCompile#templates#matlab#Initialize()$/;"	f
SingleCompile#templates#objc#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\objc.vim	/^function! SingleCompile#templates#objc#Initialize()$/;"	f
SingleCompile#templates#ocaml#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\ocaml.vim	/^function! SingleCompile#templates#ocaml#Initialize()$/;"	f
SingleCompile#templates#pascal#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\pascal.vim	/^function! SingleCompile#templates#pascal#Initialize()$/;"	f
SingleCompile#templates#perl#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\perl.vim	/^function! SingleCompile#templates#perl#Initialize()$/;"	f
SingleCompile#templates#php#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\php.vim	/^function! SingleCompile#templates#php#Initialize()$/;"	f
SingleCompile#templates#python#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\python.vim	/^function! SingleCompile#templates#python#Initialize()$/;"	f
SingleCompile#templates#qml#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\qml.vim	/^function! SingleCompile#templates#qml#Initialize()$/;"	f
SingleCompile#templates#r#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\r.vim	/^function! SingleCompile#templates#r#Initialize()$/;"	f
SingleCompile#templates#rst#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\rst.vim	/^function! SingleCompile#templates#rst#Initialize()$/;"	f
SingleCompile#templates#ruby#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\ruby.vim	/^function! SingleCompile#templates#ruby#Initialize()$/;"	f
SingleCompile#templates#rust#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\rust.vim	/^function! SingleCompile#templates#rust#Initialize()$/;"	f
SingleCompile#templates#scala#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\scala.vim	/^function! SingleCompile#templates#scala#Initialize()$/;"	f
SingleCompile#templates#sh#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\sh.vim	/^function! SingleCompile#templates#sh#Initialize()$/;"	f
SingleCompile#templates#tcl#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\tcl.vim	/^function! SingleCompile#templates#tcl#Initialize()$/;"	f
SingleCompile#templates#tcsh#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\tcsh.vim	/^function! SingleCompile#templates#tcsh#Initialize()$/;"	f
SingleCompile#templates#tex#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\tex.vim	/^function! SingleCompile#templates#tex#Initialize()$/;"	f
SingleCompile#templates#vb#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\vb.vim	/^function! SingleCompile#templates#vb#Initialize()$/;"	f
SingleCompile#templates#vim#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\vim.vim	/^function! SingleCompile#templates#vim#Initialize()$/;"	f
SingleCompile#templates#xhtml#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\xhtml.vim	/^function! SingleCompile#templates#xhtml#Initialize()$/;"	f
SingleCompile#templates#zsh#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile\templates\zsh.vim	/^function! SingleCompile#templates#zsh#Initialize()$/;"	f
SingleCompileAsync#GetMode	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#GetMode() " {{{1$/;"	f
SingleCompileAsync#GetOutput	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#GetOutput() " {{{1$/;"	f
SingleCompileAsync#Initialize	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#Initialize(mode) " {{{1$/;"	f
SingleCompileAsync#IsRunning	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#IsRunning() " {{{1$/;"	f
SingleCompileAsync#Run	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#Run(run_command) " {{{1$/;"	f
SingleCompileAsync#Terminate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! SingleCompileAsync#Terminate() " {{{1$/;"	f
SingleCompileRun	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^command -nargs=* SingleCompileRun$/;"	c
SkipJavaBlanksAndComments	C:\exVim\vim74\indent\java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
SkipPattern	C:\exVim\vim74\indent\sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
SkipToIgnoreString	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! SkipToIgnoreString(line,index,target) "{{{2$/;"	f
Skippmatch	C:\exVim\vim74\indent\php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch2	C:\exVim\vim74\indent\php.vim	/^function! Skippmatch2()$/;"	f
SnippetsIndent	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^function! SnippetsIndent() "{{{$/;"	f
SolarizedHiTrail	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SortMethod	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static sortType SortMethod;$/;"	v	file:
SortOverride	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int SortOverride;$/;"	v	file:
SortR	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:SortR(start, end)$/;"	f
Source	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^class Source(Base):$/;"	c	inherits:Base
SourceDocReader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public SourceDocReader(String f) {$/;"	m	class:SourceDocReader	access:public	signature:(String f)
SourceDocReader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^public class SourceDocReader {$/;"	c
SourceDocReader.SourceDocReader	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public SourceDocReader(String f) {$/;"	m	class:SourceDocReader	access:public	signature:(String f)
SourceDocReader.getClassDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public String getClassDoc(String className) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className)
SourceDocReader.getMemberDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public String getMemberDoc(String className,String member) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member)
SourceDocReader.getMemberTipDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^    public String getMemberTipDoc(String className,String member,int paramPos) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member,int paramPos)
SourceDocReader.indexOfOnly	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	static boolean indexOfOnly(String whole,String test)$/;"	m	class:SourceDocReader	access:default	signature:(String whole,String test)
SourceDocReader.m_fileName	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	private String m_fileName;$/;"	f	class:SourceDocReader	file:	access:private
SourceDocReader.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public static void main(String[] args) {$/;"	m	class:SourceDocReader	access:public	signature:(String[] args)
SourceDocReader.readDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	private String readDoc(StreamTokenizer st) throws Exception$/;"	m	class:SourceDocReader	file:	access:private	signature:(StreamTokenizer st)
SourceReader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^		class SourceReader #{{{2$/;"	c	class:Vjde
SpShVars.All	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (quoted spaces) ${*}$/;"	m
SpShVars.All	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (unquoted spaces) ${@}$/;"	m
SpShVars.Flags	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.Flags set ${-}$/;"	m
SpShVars.Number	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.Number of positional parameters ${#}$/;"	m
SpShVars.Process	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.Process number of last background command ${!}$/;"	m
SpShVars.Process	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.Process number of this shell ${$}$/;"	m
SpShVars.Return	C:\exVim\vim74\macros\shellmenu.vim	/^imenu SpShVars.Return code of last command ${?}$/;"	m
Space	C:\exVim\vim74\optwin.vim	/^fun! <SID>Space()$/;"	f
Spawn	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:Spawn(number)$/;"	f
SpawnAll	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:SpawnAll(recurse, number)$/;"	f
SpecChangelog	C:\exVim\vim74\ftplugin\spec.vim	/^	function s:SpecChangelog(format)$/;"	f
SpecInputs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SpellDel	C:\exVim\vim74\menu.vim	/^  func! <SID>SpellDel()$/;"	f
SpellLang	C:\exVim\vim74\menu.vim	/^  func! s:SpellLang()$/;"	f
SpellPopup	C:\exVim\vim74\menu.vim	/^  func! <SID>SpellPopup()$/;"	f
SpellPopupMenu	C:\exVim\vim74\menu.vim	/^  augroup SpellPopupMenu$/;"	a
SpellReplace	C:\exVim\vim74\menu.vim	/^  func! <SID>SpellReplace(n)$/;"	f
SplitCDeclarations	C:\exVim\vimfiles\bundle\tabular\after\plugin\TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SplitCommands	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
SplitPattern	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
Squash	C:\exVim\vim74\ftplugin\gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StageDiff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StarSetf	C:\exVim\vim74\filetype.vim	/^func! s:StarSetf(ft)$/;"	f
StartDocumentationBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:StartDocumentationBlock()$/;"	f
Starts_with_word	C:\exVim\vim74\indent\awk.vim	/^function! s:Starts_with_word( line )$/;"	f
StatementIndent	C:\exVim\vim74\indent\ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
Status	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Status() abort$/;"	f
Stmts.break	break	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.break	break $/;"	m
Stmts.case	case	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.case	case  in$/;"	m
Stmts.continue	continue	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.continue	continue $/;"	m
Stmts.elif	elif	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.elif	elif   $/;"	m
Stmts.exit	exit	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.exit	exit $/;"	m
Stmts.for	for	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.for	for  in $/;"	m
Stmts.function	()	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.function	() {$/;"	m
Stmts.if	if	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.if	if   $/;"	m
Stmts.if-else	if	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.if-else	if   $/;"	m
Stmts.return	return	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.return	return $/;"	m
Stmts.return-false	return	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.return-false	return 1$/;"	m
Stmts.return-true	return	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.return-true	return 0$/;"	m
Stmts.shift	shift	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.shift	shift $/;"	m
Stmts.trap	trap	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.trap	trap $/;"	m
Stmts.while	while	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Stmts.while	while   $/;"	m
StripLeadingSpaces	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripNamespaceAndMacroChars	C:\exVim\vim74\indent\clojure.vim	/^	function! s:StripNamespaceAndMacroChars(word)$/;"	f
StripTrailingSpaces	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
StripWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! -range=% StripWhitespace call <SID>StripWhitespace( <line1>, <line2> )$/;"	c
StripWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:StripWhitespace( line1, line2 )$/;"	f
Strlen	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:Strlen(x)$/;"	f
Strlen	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^  function! s:Strlen(string)$/;"	f
StructMembers	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:StructMembers(typename, items, all)$/;"	f
Struts2ConfigLoader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^	class Struts2ConfigLoader$/;"	c	class:Vjde
Struts2Configure	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Struts2Configure(String webapp,String path,String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp,String path,String pkg)
Struts2Configure	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^public class Struts2Configure {$/;"	c
Struts2Configure.MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	private static class MyAction {$/;"	c	class:Struts2Configure	access:private
Struts2Configure.MyAction.MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Configure.MyAction	access:public	signature:(Action a, String sp,String m,String k)
Struts2Configure.MyAction.action	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public Action action;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.klass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String klass;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.method	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String method;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.space	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String space;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.url	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String url;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.Struts2Configure	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Struts2Configure(String webapp,String path,String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp,String path,String pkg)
Struts2Configure.action2List	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction a)
Struts2Configure.actionpkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String actionpkg;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.actions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Configure	access:default
Struts2Configure.actions2vim	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public String actions2vim() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.classname	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String classname;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.classpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String classpath;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.compareUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Configure	access:public	signature:(String source,String actionurl)
Struts2Configure.currentPkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String currentPkg=null;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.db	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.dcl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.destUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^    String destUrl=null;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.expkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.expriclude	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.exprpackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.factory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Configure	access:default
Struts2Configure.findAnnotation	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void findAnnotation()$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.findAnnotation	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void findAnnotation(String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String pkg)
Struts2Configure.findInclues	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.findInxml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.findPackages	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.findStruts2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
Struts2Configure.findWeb	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
Struts2Configure.findXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Configure	access:public	signature:(String xml)
Struts2Configure.handleAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAction(Action action,Class c)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c)
Struts2Configure.handleAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAction(Action action,Class c,String m)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c,String m)
Struts2Configure.handleAnnotations	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c)
Struts2Configure.handleAnnotations	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c,Method m) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c,Method m)
Struts2Configure.handleXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.handlerClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void handlerClass(String p, String name) {$/;"	m	class:Struts2Configure	access:public	signature:(String p, String name)
Struts2Configure.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2Configure	access:public	signature:(String[] args)
Struts2Configure.onPackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Configure	access:public	signature:(Element pkg)
Struts2Configure.onResult	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Configure	access:public	signature:(Element act)
Struts2Configure.result2Dict	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction action)
Struts2Configure.toOut	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void toOut() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.webapp	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String webapp;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.xpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Configure	access:default
Struts2ConfigureMain	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2ConfigureMain.java	/^public class Struts2ConfigureMain {$/;"	c
Struts2ConfigureMain.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2ConfigureMain.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2ConfigureMain	access:public	signature:(String[] args)
Struts2Simple	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Struts2Simple(String webapp,String path)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp,String path)
Struts2Simple	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^public class Struts2Simple {$/;"	c
Struts2Simple.MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	private static class MyAction {$/;"	c	class:Struts2Simple	access:private
Struts2Simple.MyAction.MyAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Simple.MyAction	access:public	signature:(Action a, String sp,String m,String k)
Struts2Simple.MyAction.action	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public Action action;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.klass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String klass;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.method	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String method;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.space	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String space;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.url	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String url;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.Struts2Simple	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Struts2Simple(String webapp,String path)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp,String path)
Struts2Simple.action2List	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction a)
Struts2Simple.actionpkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String actionpkg;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.actions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Simple	access:default
Struts2Simple.actions2vim	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public String actions2vim() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.classname	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String classname;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.classpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String classpath;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.compareUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Simple	access:public	signature:(String source,String actionurl)
Struts2Simple.currentPkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String currentPkg=null;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.db	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.dcl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.destUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    String destUrl=null;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.expkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.expriclude	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.exprpackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.factory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Simple	access:default
Struts2Simple.findInclues	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.findInxml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.findPackages	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.findStruts2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
Struts2Simple.findWeb	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
Struts2Simple.findXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Simple	access:public	signature:(String xml)
Struts2Simple.handleXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public static void main(String args[]) {$/;"	m	class:Struts2Simple	access:public	signature:(String args[])
Struts2Simple.onPackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Simple	access:public	signature:(Element pkg)
Struts2Simple.onResult	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Simple	access:public	signature:(Element act)
Struts2Simple.result2Dict	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction action)
Struts2Simple.toOut	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public void toOut() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.webapp	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String webapp;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.xpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Simple	access:default
Stylus	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SubName	C:\exVim\vim74\tools\pltags.pl	/^sub SubName($)$/;"	s
SuperSub	C:\exVim\vim74\syntax\tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SwitchWindow	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
Syn	C:\exVim\vim74\makemenu.vim	/^fun! <SID>Syn(arg)$/;"	f
SynColor	C:\exVim\vim74\syntax\doxygen.vim	/^    command -nargs=+ SynColor hi def <args>$/;"	c
SynColor	C:\exVim\vim74\syntax\syncolor.vim	/^    command -nargs=* SynColor hi <args>$/;"	c
SynColor	C:\exVim\vim74\syntax\syncolor.vim	/^    command -nargs=* SynColor hi def <args>$/;"	c
SynColor	C:\exVim\vim74\syntax\syncolor.vim	/^  command -nargs=* SynColor hi <args>$/;"	c
SynDisplay	C:\exVim\vim74\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynDisplay	C:\exVim\vim74\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args>$/;"	c
SynFold	C:\exVim\vim74\syntax\yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	C:\exVim\vim74\syntax\yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
SynIdName	C:\exVim\vim74\indent\clojure.vim	/^	function! s:SynIdName()$/;"	f
SynLink	C:\exVim\vim74\syntax\doxygen.vim	/^    command -nargs=+ SynLink hi def link <args>$/;"	c
SynLink	C:\exVim\vim74\syntax\syncolor.vim	/^    command -nargs=* SynLink hi def link <args>$/;"	c
SynLink	C:\exVim\vim74\syntax\syncolor.vim	/^    command -nargs=* SynLink hi! link <args>$/;"	c
SynLink	C:\exVim\vim74\syntax\syncolor.vim	/^  command -nargs=* SynLink hi link <args>$/;"	c
SynMenu	C:\exVim\vim74\makemenu.vim	/^command! -nargs=* SynMenu call <SID>Syn(<q-args>)$/;"	c
SynOnOff	C:\exVim\vim74\menu.vim	/^    fun s:SynOnOff()$/;"	f
SynSet	C:\exVim\vim74\syntax\synload.vim	/^fun! s:SynSet()$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker._getOpt	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getExec	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.syncExec() abort " {{{2$/;"	f
SyntasticChecker.wantSort	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditClasspath$/;"	c
SyntasticJavacEditClasspath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditConfig$/;"	c
SyntasticJavacEditConfig	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.show	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticReset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCSyntaxGroupItems	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\actionscript\mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\actionscript\mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ada\gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ada\gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ansible\ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ansible\ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\apiblueprint\drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\applescript\osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asciidoc\asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bemhtml\bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bro\bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bro\bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bro\bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cabal\cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cabal\cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\chef\foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\co\coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cobol\cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cobol\cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coq\coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cs\mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cucumber\cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cuda\nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\d\dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\d\dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dart\dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dart\dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\docbk\igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dockerfile\dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dustjs\swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\elixir\elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\elixir\elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\eruby\ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\eruby\ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\glsl\cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\handlebars\handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haxe\haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\hss\hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_jade_jade_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\jade\jade_lint.vim	/^function! SyntaxCheckers_jade_jade_lint_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jscs.vim	/^function! SyntaxCheckers_javascript_jscs_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lex\flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lex\flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\limbo\limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lisp\clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\llvm\llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\markdown\mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\matlab\mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\mercury\mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nasm\nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nix\nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nroff\mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\po\msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\po\msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\pod\podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\qml\qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rnc\rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sml\smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\spec\rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sql\sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sql\sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sql\sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\stylus\stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tcl\nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\texinfo\makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\texinfo\makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\twig\twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xquery\basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yacc\bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamllint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamllint.vim	/^function! SyntaxCheckers_yaml_yamllint_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\z80\z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zpt\zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zsh\zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
SyntaxInclude	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
SyntaxName	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SystemVerilogIndent	C:\exVim\vim74\indent\systemverilog.vim	/^function SystemVerilogIndent()$/;"	f
T	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static final String T = "t";$/;"	f	class:ClassInfo	access:public
T	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static final String T = "t";$/;"	f	class:Completion	access:public
T/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
T;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal T;$/;"	m
TAB	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	28;"	d	file:
TAG_FOLDSORTED	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon68
TAG_FULLMATCH	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	38;"	d
TAG_IGNORECASE	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	42;"	d
TAG_NAME	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
TAG_OBSERVECASE	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	41;"	d
TAG_PARTIALMATCH	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	39;"	d
TAG_SORTED	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon68
TAG_UNSORTED	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon68
TAG_VAL	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
TAILPORT_ID	C:\exVim\graphviz\include\graphviz\cgraph.h	414;"	d
TAIL_ID	C:\exVim\graphviz\include\graphviz\graph.h	35;"	d
TAIL_ID	C:\exVim\graphviz\include\graphviz\types.h	52;"	d
TDlist	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^command! -nargs=0 TDlist call s:todo_list()$/;"	c
TEXTPARA_H	C:\exVim\graphviz\include\graphviz\textpara.h	18;"	d
TEXTSPAN_H	C:\exVim\graphviz\include\graphviz\textspan.h	15;"	d
TH	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal TH$/;"	m
THa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal THa$/;"	m
TIME_WITH_SYS_TIME	C:\exVim\graphviz\bin\config.h	462;"	d
TOKENS	C:\exVim\graphviz\bin\exparse.h	/^     TOKENS = 304,$/;"	e	enum:extokentype
TOKENS	C:\exVim\graphviz\bin\exparse.h	171;"	d
TOhtml	C:\exVim\vim74\plugin\tohtml.vim	/^  command -range=% -bar TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)$/;"	c
TRUE	C:\exVim\graphviz\include\graphviz\cgraph.h	27;"	d
TRUE	C:\exVim\graphviz\include\graphviz\types.h	33;"	d
TSelect	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^command! -n=1 -complete=customlist,ex#compl_by_symbol TSelect call extags#select('<args>')$/;"	c
Tab	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:Tab()$/;"	f
TabComplete	C:\exVim\vimfiles\bundle\pydiction\after\ftplugin\python_pydiction.vim	/^    function! s:TabComplete(direction)$/;"	f
TabSpace	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
Tabdo	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:Tabdo(command)$/;"	f
TableFormat	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
TableFormat	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:TableFormat()$/;"	f
Tabularize	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
Tag	C:\exVim\vim74\ftplugin\pdf.vim	/^function! s:Tag()$/;"	f
Tag2item	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:Tag2item(val)$/;"	f
TagElement	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^	class TagElement #{{{2$/;"	c	class:Vjde
TagFailure	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	e	enum:__anon69
TagFileName	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *TagFileName = "tags";$/;"	v	file:
TagFiles	C:\exVim\vim74\menu.vim	/^fun! s:TagFiles()$/;"	f
TagList_IsValid	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagSuccess	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	e	enum:__anon69
Tagcmd2extra	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:Tagcmd2extra(cmd, name, fname)$/;"	f
Tagline2item	C:\exVim\vim74\autoload\ccomplete.vim	/^function! s:Tagline2item(val, brackets)$/;"	f
TarBrowseSelect	C:\exVim\vim74\autoload\tar.vim	/^fun! s:TarBrowseSelect()$/;"	f
Tb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Tb$/;"	m
Tba	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Tba$/;"	m
TcshGetIndent	C:\exVim\vim74\indent\tcsh.vim	/^function TcshGetIndent()$/;"	f
Temp	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *Temp=NULL;$/;"	v	file:
TerminatePython	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^function! s:TerminatePython() " {{{2$/;"	f
Test	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! Test()$/;"	f
Test.String	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.String is empty [ x = "x$" ]hhi$/;"	m
Test.String	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.String is not empty [ x != "x$" ]hhi$/;"	m
Test.Strings	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Strings is equal [ "" = "" ]hhhhhhhi$/;"	m
Test.Strings	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Strings is not equal [ "" != "" ]hhhhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is equal [  -eq  ]hhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is greater equal [  -ge  ]hhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is greater than [  -gt  ]hhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is less equal [  -le  ]hhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is less than [  -lt  ]hhhhhhi$/;"	m
Test.Values	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.Values is not equal [  -ne  ]hhhhhhi$/;"	m
Test.existence	[	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence	[ -e  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - directory	[ -d  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - executable	[ -x  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - file		[ -f  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - file (not empty)	[ -s  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - readable	[ -r  ]hi$/;"	m
Test.existence	C:\exVim\vim74\macros\shellmenu.vim	/^imenu Test.existence - writable	[ -w  ]hi$/;"	m
TestFiletypeFuncs	C:\exVim\vim74\filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TexNewMathZone	C:\exVim\vim74\syntax\tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
Texplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar       -count=0 -complete=dir	Texplore	call netrw#Explore(<count>,0,6        ,<q-args>)$/;"	c
TextWidth	C:\exVim\vim74\menu.vim	/^fun! s:TextWidth()$/;"	f
Th	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Th$/;"	m
Tha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Tha$/;"	m
Throw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
TidyEncOptByFenc	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Tld_Loader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^    class Tld_Loader #{{{2$/;"	c	class:Vjde
Tld_document	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^    class Tld_document #{{{2$/;"	c	class:Vjde
Tlist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_BackToEditBuffer	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_BackToEditBuffer = 0$/;"	v
Tlist_Ballon_Expr	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinIncreament	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_WinIncreament = 40$/;"	v
Tlist_WinWidth	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Toa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Toa$/;"	m
Tob	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Tob$/;"	m
Toc	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Toc$/;"	m
Toc	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toc	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:Toc(...)$/;"	f
Toch	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
Tod	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal Tod$/;"	m
TogBG	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleByFname	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleGuiOption	C:\exVim\vim74\menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
ToggleKeyLoop	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleStripWhitespaceOnSave	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! ToggleStripWhitespaceOnSave call <SID>ToggleStripWhitespaceOnSave()$/;"	c
ToggleStripWhitespaceOnSave	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:ToggleStripWhitespaceOnSave()$/;"	f
ToggleType	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
ToggleWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^command! ToggleWhitespace call <SID>ToggleWhitespace()$/;"	c
ToggleWhitespace	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:ToggleWhitespace()$/;"	f
TokenizeLine	C:\exVim\vim74\indent\erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
ToolBar.Paste		<C-R>+	C:\exVim\vim74\menu.vim	/^  cnoremenu	 ToolBar.Paste		<C-R>+$/;"	m
ToolBar.Print		:hardcopy<CR>	C:\exVim\vim74\menu.vim	/^    vnoremenu ToolBar.Print		:hardcopy<CR>$/;"	m
ToolBar.Print		:w	C:\exVim\vim74\menu.vim	/^    vnoremenu ToolBar.Print		:w !lpr<CR>$/;"	m
ToolBar.Replace		y:promptrepl	C:\exVim\vim74\menu.vim	/^    vnoremenu ToolBar.Replace		y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
ToolBar.togglebg	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
TreeDirNode.AbsoluteTreeRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._initChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getChild	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeListMove	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:TreeListMove(dir)$/;"	f
TreeSqueezeDir	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:TreeSqueezeDir(islocal)$/;"	f
Trim	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:Trim(string)$/;"	f
TypeElement	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^	class TypeElement #{{{2 $/;"	c	class:Vjde
TypeFinder	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^    public class TypeFinder$/;"	c	namespace:Wangfc	access:public
UF_parent	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *UF_parent;$/;"	m	struct:Agnodeinfo_t	access:public
UF_size	C:\exVim\graphviz\include\graphviz\types.h	/^	int UF_size;$/;"	m	struct:Agnodeinfo_t	access:public
UI.IndentWid	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNARY	C:\exVim\graphviz\bin\exparse.h	/^     UNARY = 331,$/;"	e	enum:extokentype
UNARY	C:\exVim\graphviz\bin\exparse.h	198;"	d
UNSET	C:\exVim\graphviz\bin\exparse.h	/^     UNSET = 305,$/;"	e	enum:extokentype
UNSET	C:\exVim\graphviz\bin\exparse.h	172;"	d
UNSIGNED	C:\exVim\graphviz\bin\exparse.h	/^     UNSIGNED = 260,$/;"	e	enum:extokentype
UNSIGNED	C:\exVim\graphviz\bin\exparse.h	127;"	d
UR	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { point LL, UR; } box;$/;"	m	struct:__anon9	access:public
UR	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { pointf LL, UR; } boxf;$/;"	m	struct:__anon10	access:public
USAGE	C:\exVim\vim74\tools\ccfilter.c	/^const char USAGE[] =$/;"	v
USAGE	C:\exVim\vim74\tools\shtags.pl	/^USAGE: $program [-kvwVx] [-t <file>] <files>$/;"	l
USERSHAPE_H	C:\exVim\graphviz\include\graphviz\usershape.h	15;"	d
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^	 UWAGA:$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^  UWAGA: Litera  d  pojawi siê na dole ekranu. Vim czeka na wpisanie  w .$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^  UWAGA: Przeczytaj ca³± lekcjê zanim wykonasz jakie¶ polecenia!!!$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA:  Mno¿nik pomiêdzy operatorem  d  i ruchem dzia³a podobnie do ruchu bez$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA:  Mo¿esz u¿ywaæ <BS> aby poprawiaæ b³êdy w czasie pisania.$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: :q!<ENTER> porzuca wszelkie zmiany jakie zrobi³e¶. W nastêpnych$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ wczytaæ wyj¶cie zewnêtrznego polecenia. Na przyk³ad$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ zobaczyæ pozycjê kursora w prawym, dolnym rogu ekranu.$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Pamiêtaj, by uczyæ siê æwicz±c, a nie pamiêciowo.$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Po wykonaniu kroku 2. zobaczysz tekst z Lekcji 5.3. Potem przejd¼$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Tryb Replace jest jak tryb Insert, ale ka¿dy znak usuwa istniej±cy$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Ucz siê przez æwiczenie, nie wkuwanie.$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Uzupe³nianie dzia³a dla wielu poleceñ. Spróbuj wcisn±æ CTRL-D i <TAB>.$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Wci¶niêcie  v  zaczyna tryb Wizualny. Mo¿esz poruszaæ kursorem, by$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Wci¶niêcie <ESC> przeniesie Ciê z powrotem do trybu Normal$/;"	l
UWAGA	C:\exVim\vim74\tutor\tutor.pl	/^UWAGA: Wpisanie tylko ruchu w trybie Normal bez operatora przeniesie kursor$/;"	l
UnEsc	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
Undotree	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^augroup Undotree$/;"	a
UndotreeFocus	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^command! -n=0 -bar UndotreeFocus    :call UndotreeFocus()$/;"	c
UndotreeFocus	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeFocus()$/;"	f
UndotreeHide	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^command! -n=0 -bar UndotreeHide     :call UndotreeHide()$/;"	c
UndotreeHide	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeHide()$/;"	f
UndotreeIsVisible	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeIsVisible()$/;"	f
UndotreeShow	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^command! -n=0 -bar UndotreeShow     :call UndotreeShow()$/;"	c
UndotreeShow	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeShow()$/;"	f
UndotreeToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs Vim version >= 7.3"$/;"	c
UndotreeToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs vim7.3 with patch005 applied."$/;"	c
UndotreeToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^command! -n=0 -bar UndotreeToggle   :call UndotreeToggle()$/;"	c
UndotreeToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeToggle()$/;"	f
UndotreeUpdate	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! UndotreeUpdate()$/;"	f
UnexpectedToken	C:\exVim\vim74\indent\erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
Unfinalise	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unlarge	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^com! Unlarge			call s:Unlarge()$/;"	c
Unlarge	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^fun! s:Unlarge()$/;"	f
UntabbedCol	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
Update	C:\exVim\vim74\optwin.vim	/^fun! <SID>Update(lnum, line, local, thiswin)$/;"	f
Update	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:Update(str)$/;"	f
Update	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^command! Update call exconfig#update_exvim_files()$/;"	c
UpdateAllTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:UpdateAllTags()$/;"	f
UpdateBuffersMenu	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:UpdateBuffersMenu()$/;"	f
UpdateErrors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
UpdateExceptions	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:UpdateExceptions()$/;"	f
UpdateMakePrg	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateParameters	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:UpdateParameters()$/;"	f
UpdateReturnValue	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:UpdateReturnValue()$/;"	f
Urgency	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	C:\exVim\vim74\tools\efm_perl.pl	/^Usage:$/;"	l
Usage	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^const char *const Usage =$/;"	v
UseBufWinVars	C:\exVim\vim74\autoload\netrw.vim	/^fun! s:UseBufWinVars()$/;"	f
UseVimball	C:\exVim\vim74\plugin\vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball						call vimball#Vimball(1,<f-args>)$/;"	c
UserCmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
UsingFinder	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^    public class UsingFinder$/;"	c	namespace:Wangfc	access:public
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga:  'b³ond' to nie jest metoda, by przeliterowaæ b³±d; 'b³ond' to b³±d.$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga:  Kiedy szukanie osi±gnie koniec pliku, bêdzie kontynuowane od pocz±tku$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga:  W ten sposób mo¿na wykonaæ wszystkie polecenia pow³oki.$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga:  Wszystkie polecenia  :  musz± byæ zakoñczone <ENTER>.$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga:  a ,  i  oraz  A  prowadz± do trybu Insert, jedyn± ró¿nic± jest miejsce,$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Aby ignorowaæ wielko¶æ liter dla jednego wyszukiwania: \/ignore\\c<ENTER>$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Aby usun±æ pod¶wietlanie dopasowañ, wpisz:   :nohlsearch$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Je¶li nie jeste¶ pewien czego¶ co wpisa³e¶, wci¶nij <ESC>, by wróciæ do$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Klawisze kursora tak¿e powinny dzia³aæ, ale u¿ywaj±c  hjkl  bêdziesz$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Ta funkcja jest bardzo u¿yteczna w debuggowaniu programu$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: Zauwa¿, ¿e gdyby¶ teraz wyszed³ z Vima, a nastêpnie wszed³ ponownie$/;"	l
Uwaga	C:\exVim\vim74\tutor\tutor.pl	/^Uwaga: mo¿esz u¿yæ  y  jako operatora;  yw  kopiuje jeden wyraz.$/;"	l
VERSION	C:\exVim\vim74\tools\efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VI_I	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_I     call visincr#VisBlockIncr(s:I     , <f-args>)$/;"	c
VI_IA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IA	  call visincr#VisBlockIncr(s:IA    , <f-args>)$/;"	c
VI_IB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IB    call visincr#VisBlockIncr(s:IB    , <f-args>)$/;"	c
VI_ID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_ID    call visincr#VisBlockIncr(s:ID    , <f-args>)$/;"	c
VI_IDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IDMY  call visincr#VisBlockIncr(s:IDMY  , <f-args>)$/;"	c
VI_II	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_II    call visincr#VisBlockIncr(s:II    , <f-args>)$/;"	c
VI_IIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIB   call visincr#VisBlockIncr(s:IIB   , <f-args>)$/;"	c
VI_IIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIO   call visincr#VisBlockIncr(s:IIO   , <f-args>)$/;"	c
VI_IIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIPOW call visincr#VisBlockIncr(s:IIPOW , <f-args>)$/;"	c
VI_IIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIR   call visincr#VisBlockIncr(s:IIR   , <f-args>)$/;"	c
VI_IIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIX   call visincr#VisBlockIncr(s:IIX   , <f-args>)$/;"	c
VI_IM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IM    call visincr#VisBlockIncr(s:IM    , <f-args>)$/;"	c
VI_IMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IMDY  call visincr#VisBlockIncr(s:IMDY  , <f-args>)$/;"	c
VI_IO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IO    call visincr#VisBlockIncr(s:IO    , <f-args>)$/;"	c
VI_IPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IPOW  call visincr#VisBlockIncr(s:IPOW  , <f-args>)$/;"	c
VI_IR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IR    call visincr#VisBlockIncr(s:IR    , <f-args>)$/;"	c
VI_IX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IX    call visincr#VisBlockIncr(s:IX    , <f-args>)$/;"	c
VI_IYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IYMD  call visincr#VisBlockIncr(s:IYMD  , <f-args>)$/;"	c
VI_RI	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RI     call visincr#VisBlockIncr(s:RI     , <f-args>)$/;"	c
VI_RIA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIA    call visincr#VisBlockIncr(s:RIA    , <f-args>)$/;"	c
VI_RIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIB    call visincr#VisBlockIncr(s:RIB    , <f-args>)$/;"	c
VI_RID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RID    call visincr#VisBlockIncr(s:RID    , <f-args>)$/;"	c
VI_RIDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIDMY  call visincr#VisBlockIncr(s:RIDMY  , <f-args>)$/;"	c
VI_RII	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RII    call visincr#VisBlockIncr(s:RII    , <f-args>)$/;"	c
VI_RIIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIB   call visincr#VisBlockIncr(s:RIIB   , <f-args>)$/;"	c
VI_RIIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIO   call visincr#VisOlockIncr(s:RIIO   , <f-args>)$/;"	c
VI_RIIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIIPOW call visincr#VisBlockIncr(s:RIIPOW , <f-args>)$/;"	c
VI_RIIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIR   call visincr#VisRlockIncr(s:RIIR   , <f-args>)$/;"	c
VI_RIIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIX   call visincr#VisBlockIncr(s:RIIX   , <f-args>)$/;"	c
VI_RIM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIM    call visincr#VisBlockIncr(s:RIM    , <f-args>)$/;"	c
VI_RIMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIMDY  call visincr#VisBlockIncr(s:RIMDY  , <f-args>)$/;"	c
VI_RIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIO    call visincr#VisOlockIncr(s:RIO    , <f-args>)$/;"	c
VI_RIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIPOW  call visincr#VisBlockIncr(s:RIPOW  , <f-args>)$/;"	c
VI_RIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIR    call visincr#VisRlockIncr(s:RIR    , <f-args>)$/;"	c
VI_RIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIX    call visincr#VisBlockIncr(s:RIX    , <f-args>)$/;"	c
VI_RIYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIYMD  call visincr#VisBlockIncr(s:RIYMD  , <f-args>)$/;"	c
VOIDTYPE	C:\exVim\graphviz\bin\exparse.h	/^     VOIDTYPE = 264,$/;"	e	enum:extokentype
VOIDTYPE	C:\exVim\graphviz\bin\exparse.h	131;"	d
Value	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *Value=NULL;$/;"	v	file:
VarNames	C:\exVim\vim74\tools\pltags.pl	/^sub VarNames($)$/;"	s
VbGetIndent	C:\exVim\vim74\indent\vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	C:\exVim\vim74\ftplugin\vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
VerifyText	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^fun! s:VerifyText(which)$/;"	f
VersionAwareNetrwBrowseX	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
Vexplore	C:\exVim\vim74\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Vexplore	call netrw#Explore(<count>,1,4+<bang>0,<q-args>)$/;"	c
VimDirListing	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:VimDirListing(filter, padding, separator, filevariable, filecount, dirvariable, dircount)$/;"	f
VimEnter	C:\exVim\vim74\plugin\netrwPlugin.vim	/^fun! s:VimEnter(dirname)$/;"	f
Vim\	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^vmenu Vim\\ &JDE.&Source(Java).&sort\\ import  :call Vjde_sort_import()<CR>$/;"	m
Vim\	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^vmenu Vim\\ &JDE.&Source(Java).Create\\ JavaDocE&x	:call JCommentWriter()<cr>$/;"	m
Vim\	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^vmenu Vim\\ &JDE.&Source(Java).Extract\\ to\\ &const  :call Vjde_rft_const()<CR>$/;"	m
Vim\	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^vmenu Vim\\ &JDE.&Source(Java).Surround\\ with\\ &try\/catch  :call Vjde_surround_try()<CR>$/;"	m
VimballList	C:\exVim\vim74\plugin\vimballPlugin.vim	/^com! -na=0                VimballList						call vimball#Vimball(0)$/;"	c
Vimuntar	C:\exVim\vim74\plugin\tarPlugin.vim	/^com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)$/;"	c
VisMove	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^function! s:VisMove(f)$/;"	f
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^module Vjde #{{{1$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^module Vjde #{{{1$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^module Vjde$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^module Vjde #{{{1$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^module Vjde$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^module Vjde$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^    def Vjde::init_jstl(path=nil) #{{{2$/;"	f	class:Vjde
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^module Vjde #{{{1$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^module Vjde #{{{1$/;"	m
Vjde	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^module Vjde #{{{1$/;"	m
VjdeAddDtd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeAddDtd(...) "{{{2$/;"	f
VjdeAddOtherImport	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeAddOtherImport()$/;"	f
VjdeAddTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! s:VjdeAddTemplate(fname)$/;"	f
VjdeAddTld	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeAddTld(...) "{{{2$/;"	f
VjdeAddToPreview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeAddToPreview(str) $/;"	f
VjdeAddToTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! s:VjdeAddToTags(name,kind,cmd) "{{{2$/;"	f
VjdeAdjustCaretPos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func! VjdeAdjustCaretPos(bforce)$/;"	f
VjdeAdjustTopLeft	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func! s:VjdeAdjustTopLeft()$/;"	f
VjdeAnnotationPreveiewMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeAnnotationPreveiewMenu(base) "{{{2$/;"	f
VjdeAnnotationPreveiewMenu2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeAnnotationPreveiewMenu2(name) "{{{2$/;"	f
VjdeAppendTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeAppendTemplate(name)$/;"	f
VjdeBrowsTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeBrowsTemplate()$/;"	f
VjdeBrowseProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeBrowseProject() " {{{2$/;"	f
VjdeCSCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCSCompletion(findstart,base)$/;"	f
VjdeCSCompletion	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCSCompletion(findstart,base)$/;"	f
VjdeCSCompletionVIM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCSCompletionVIM(usingstr)$/;"	f
VjdeCSCompletionVIM	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCSCompletionVIM(usingstr)$/;"	f
VjdeCSCompletion_FindClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCSCompletion_FindClass(name,imptstr,...) dict $/;"	f
VjdeCSCompletion_FindClass	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCSCompletion_FindClass(name,imptstr,...) dict $/;"	f
VjdeCSCompletion_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCSCompletion_New(cmd,path) $/;"	f
VjdeCSCompletion_New	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCSCompletion_New(cmd,path) $/;"	f
VjdeCSGetTypeName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! s:VjdeCSGetTypeName(var) $/;"	f
VjdeCSGetTypeName	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! s:VjdeCSGetTypeName(var) $/;"	f
VjdeCSGetUsing	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCSGetUsing() $/;"	f
VjdeCSGetUsing	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCSGetUsing() $/;"	f
VjdeCleanTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! s:VjdeCleanTags() "{{{2$/;"	f
VjdeClearPreview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeClearPreview() $/;"	f
VjdeCommentFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeCommentFun(line,base,col,findstart) "{{{2$/;"	f
VjdeCompletionByVIM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeCompletionByVIM(imps,...) "{{{2$/;"	f
VjdeCompletionFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeCompletionFun(line,base,col,findstart) "{{{2$/;"	f
VjdeCompletionFun0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeCompletionFun0(findstart,base)$/;"	f
VjdeCppCFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeCppCFU(line,base,col,findstart) "{{{2$/;"	f
VjdeCppCFU0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeCppCFU0(findstart,base) $/;"	f
VjdeCppCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeCppCompletion(char,short)$/;"	f
VjdeCppGenerateIdx	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeCppGenerateIdx(...)$/;"	f
VjdeCppObjectSplit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeCppObjectSplit(lstr)$/;"	f
VjdeCppType4Line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeCppType4Line(lstr,v)$/;"	f
VjdeCreateString4CFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeCreateString4CFU(base) "{{{2$/;"	f
VjdeCreateTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeCreateTag(lstr)$/;"	f
VjdeCsCompletionUsing	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! s:VjdeCsCompletionUsing(l,b)$/;"	f
VjdeCsCompletionUsing	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! s:VjdeCsCompletionUsing(l,b)$/;"	f
VjdeCsFindUsing	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! VjdeCsFindUsing()$/;"	f
VjdeCsFindUsing	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! VjdeCsFindUsing()$/;"	f
VjdeCtagsCFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! VjdeCtagsCFU(line,base,col,findstart) "{{{2$/;"	f
VjdeCtagsCFU0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! VjdeCtagsCFU0(findstart,base)$/;"	f
VjdeDefLoader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^	class VjdeDefLoader #{{{2$/;"	c	class:Vjde
VjdeDirectiveAttribute	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeDirectiveAttribute(name,...) "{{{2$/;"	f
VjdeDirectiveCFUVIM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeDirectiveCFUVIM(line,base,col,findstart) "{{{2$/;"	f
VjdeDirectiveInit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeDirectiveInit() "{{{2$/;"	f
VjdeDtd2Data	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    command -nargs=+ -complete=file VjdeDtd2Data call s:VjdeGenDtdData(<f-args>)$/;"	c
VjdeFindBlockDown	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeFindBlockDown(patt) "{{{2$/;"	f
VjdeFindBlockUp	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeFindBlockUp(patt) "{{{2$/;"	f
VjdeFindClassUnderCursor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeFindClassUnderCursor() "{{{2$/;"	f
VjdeFindDefination	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeFindDefination(pattern) "{{{2$/;"	f
VjdeFindPairBack	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeFindPairBack(line,col,m_start,m_end) "{{{2$/;"	f
VjdeFindParent	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeFindParent(findimps) "{{{2$/;"	f
VjdeFindStart	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeFindStart(line,base,col,mode_p) "{{{2$/;"	f
VjdeFindUnendElement	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeFindUnendElement(line_num,col_num) "{{{2$/;"	f
VjdeFindUnendPair	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! VjdeFindUnendPair(line,firstc,secondc,start,endcol) "{{{2$/;"	f
VjdeFormatLine	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! VjdeFormatLine(line) "{{{2 remove$/;"	f
VjdeGenDtdData	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    func! s:VjdeGenDtdData(file,name)$/;"	f
VjdeGenTldData	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    func! s:VjdeGenTldData(file,name)$/;"	f
VjdeGenerateConstructor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGenerateConstructor() "{{{2$/;"	f
VjdeGeneratePerviewMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^func! s:VjdeGeneratePerviewMenu(base)$/;"	f
VjdeGeneratePerviewMenu	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^func! s:VjdeGeneratePerviewMenu(base)$/;"	f
VjdeGeneratePreveiewMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeGeneratePreveiewMenu(base) "{{{2$/;"	f
VjdeGeneratePreviewBuffer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeGeneratePreviewBuffer(base) "{{{2$/;"	f
VjdeGetAllTaglibPrefix	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeGetAllTaglibPrefix() "{{{2$/;"	f
VjdeGetAnnotationObjects	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! VjdeGetAnnotationObjects(l)$/;"	f
VjdeGetCaretPos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdeGetCaretPos() "{{{2 $/;"	f
VjdeGetCaretPosEx	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func VjdeGetCaretPosEx() $/;"	f
VjdeGetClassName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeGetClassName(qn) "{{{2$/;"	f
VjdeGetClassName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGetClassName(longname)$/;"	f
VjdeGetCppCFUTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! VjdeGetCppCFUTags()$/;"	f
VjdeGetCppDocLine	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeGetCppDocLine()$/;"	f
VjdeGetCppType	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^func! VjdeGetCppType(v)$/;"	f
VjdeGetCtags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeGetCtags()$/;"	f
VjdeGetDocUnderCursor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeGetDocUnderCursor() "{{{$/;"	f
VjdeGetDocWindowLine	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeGetDocWindowLine() "{{{2$/;"	f
VjdeGetFullImportsList	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGetFullImportsList() "{{{2$/;"	f
VjdeGetJava	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeGetJava()$/;"	f
VjdeGetMatchedTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func! VjdeGetMatchedTag() $/;"	f
VjdeGetMethod	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeGetMethod(name) "{{{$/;"	f
VjdeGetPreview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeGetPreview() $/;"	f
VjdeGetRubyType	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! VjdeGetRubyType(v)$/;"	f
VjdeGetStrBetween	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:VjdeGetStrBetween(lstart,cstart,lend,cend) "{{{2$/;"	f
VjdeGetTypeName	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeGetTypeName(var) "{{{2$/;"	f
VjdeGotoBlock	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGotoBlock(mpre,mnext) "{{{2$/;"	f
VjdeGotoDecl	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeGotoDecl() "{{{2$/;"	f
VjdeGotoDefPos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGotoDefPos(pattern,f_dir) "{{{2$/;"	f
VjdeGotoDefination	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeGotoDefination(pattern,dir)$/;"	f
VjdeHTMLFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeHTMLFun(line,base,col,findstart) "{{{2$/;"	f
VjdeHTMLFun0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeHTMLFun0(findstart,base)$/;"	f
VjdeHandleTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^func!  VjdeHandleTags(tg,ff)$/;"	f
VjdeIabCompletionClear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! VjdeIabCompletionClear()$/;"	f
VjdeIabCompletionEnd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^function! VjdeIabCompletionEnd(...)$/;"	f
VjdeIabCompletionPUM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^function! VjdeIabCompletionPUM()$/;"	f
VjdeIabbrAdd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! s:VjdeIabbrAdd(name,desc) "{{{2$/;"	f
VjdeIabbrInit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! s:VjdeIabbrInit(name) "{{{2$/;"	f
VjdeImplementInner	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeImplementInner() "{{{2$/;"	f
VjdeInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeInfo(...) "{{{2$/;"	f
VjdeInfomation	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeInfomation() "{{{2$/;"	f
VjdeInitJavaCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:VjdeInitJavaCompletion() "{{{2$/;"	f
VjdeInitPreview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! s:VjdeInitPreview(base) "{{{2$/;"	f
VjdeInsertWord	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeInsertWord(word) "{{{2$/;"	f
VjdeJUnitCase	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeJUnitCase(...)$/;"	f
VjdeJavaClass_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaClass_New(arr)$/;"	f
VjdeJavaClass_SearchMembers	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaClass_SearchMembers(cond) dict$/;"	f
VjdeJavaClass_SearchMethods	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaClass_SearchMethods(cond) dict$/;"	f
VjdeJavaCompletionFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeJavaCompletionFun(line,base,col,findstart) "{{{2$/;"	f
VjdeJavaCompletion_FindClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaCompletion_FindClass(name,imptstr,...) dict "{{{2$/;"	f
VjdeJavaCompletion_FindClass2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaCompletion_FindClass2(names,imptstr,...) dict "{{{2$/;"	f
VjdeJavaCompletion_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaCompletion_New(jar,path)$/;"	f
VjdeJavaConstructor_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaConstructor_New(arr)$/;"	f
VjdeJavaConstructor_Tos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaConstructor_Tos() dict $/;"	f
VjdeJavaDoc	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func! VjdeJavaDoc() $/;"	f
VjdeJavaMember_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaMember_New(arr)$/;"	f
VjdeJavaMember_Tos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaMember_Tos() dict$/;"	f
VjdeJavaMethod_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaMethod_New(arr)$/;"	f
VjdeJavaMethod_Tos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaMethod_Tos() dict "{{{2$/;"	f
VjdeJavaNameCompare	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaNameCompare(i1,i2) "{{{2$/;"	f
VjdeJavaParameterPreview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeJavaParameterPreview(...) "{{{2$/;"	f
VjdeJavaProjectAddJars	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func!  VjdeJavaProjectAddJars()$/;"	f
VjdeJavaSearch4Classes	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaSearch4Classes(jar,cname,lib_path)$/;"	f
VjdeJavaSearchPackagesAndClasses	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeJavaSearchPackagesAndClasses(jar,lib_path,prefix,base)$/;"	f
VjdeJspCompletionFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeJspCompletionFun(line,base,col,findstart) "{{{2$/;"	f
VjdeJspInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeJspInfo() "{{{2$/;"	f
VjdeJspTaglib	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeJspTaglib() "{{{2$/;"	f
VjdeListDtds	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeListDtds()$/;"	f
VjdeListStringToList	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func! VjdeListStringToList(str) "{{{2$/;"	f
VjdeLoadProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeLoadProject(prj) " {{{2$/;"	f
VjdeNclass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command! -nargs=* VjdeNclass call VjdeNewClass(1,<f-args>)$/;"	c
VjdeNewClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^function! VjdeNewClass(type,...) "{{{2$/;"	f
VjdeNewJavaProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! VjdeNewJavaProject()$/;"	f
VjdeNinte	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command! -nargs=* VjdeNinte call VjdeNewClass(3,<f-args>)$/;"	c
VjdeNmain	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command! -nargs=* VjdeNmain call VjdeNewClass(2,<f-args>)$/;"	c
VjdeNprop	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command! -nargs=0 VjdeNprop call VjdeAppendTemplate("NewMember")$/;"	c
VjdeObejectSplit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! VjdeObejectSplit(line) "{{{2 remove$/;"	f
VjdePackageNameCompare	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdePackageNameCompare(i1,i2) "{{{2$/;"	f
VjdePackageNameCompare1	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdePackageNameCompare1(i1,i2)$/;"	f
VjdeParentCFUVIM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeParentCFUVIM(pars,imps) "{{{2$/;"	f
VjdePkgCfuByVIM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdePkgCfuByVIM(prefix,base)$/;"	f
VjdePreviewAdd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewAdd(str) dict "{{{2$/;"	f
VjdePreviewBufferUpdate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewBufferUpdate(base,...)  dict "{{{2$/;"	f
VjdePreviewCFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewCFU(char,...) dict "{{{2 $/;"	f
VjdePreviewClear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewClear() dict "{{{2$/;"	f
VjdePreviewGet	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewGet() dict "{{{2$/;"	f
VjdePreviewGetLines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdePreviewGetLines() "{{{2$/;"	f
VjdePreviewIab	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! VjdePreviewIab(paras,...) "{{{2$/;"	f
VjdePreviewIabComp	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! s:VjdePreviewIabComp(word)$/;"	f
VjdePreviewIabSelect	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^func! VjdePreviewIabSelect(word)$/;"	f
VjdePreviewKeyPress2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewKeyPress2(d,k)  "{{{2 remove$/;"	f
VjdePreviewSelect2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewSelect2(d,k)  "{{{2 remove$/;"	f
VjdePreviewUpdate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewUpdate(base) dict "{{{2 $/;"	f
VjdePreviewWindowGetBuffer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindowGetBuffer() dict "{{{2 VjdeGetPreviewWindowBuffer$/;"	f
VjdePreviewWindowInit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindowInit() dict "{{{2 $/;"	f
VjdePreviewWindow_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindow_New()$/;"	f
VjdePreviewWindow_Preview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindow_Preview(useshort) dict $/;"	f
VjdePreviewWindow_PreviewGUI	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindow_PreviewGUI(useshort) dict $/;"	f
VjdePreviewWindow_PreviewInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdePreviewWindow_PreviewInfo(data) dict$/;"	f
VjdeProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^	class VjdeProject #{{{2$/;"	c	class:Vjde
VjdeProjectTlds	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^    class VjdeProjectTlds #{{{2$/;"	c	class:Vjde
VjdeReadIniFile	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^func! VjdeReadIniFile(filename)$/;"	f
VjdeReadJavaDoc	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func! VjdeReadJavaDoc() "{{{2$/;"	f
VjdeReadTags_EachMember	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeReadTags_EachMember(className1,beginning,fn,...) dict$/;"	f
VjdeReadTags_EachTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeReadTags_EachTag(base,fn,...) dict$/;"	f
VjdeReadTags_FindClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeReadTags_FindClass(className1) dict$/;"	f
VjdeReadTags_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.vim	/^func! VjdeReadTags_New(tagsVar,cmd)$/;"	f
VjdeRemoteN	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! s:VjdeRemoteN(str)$/;"	f
VjdeRubyCFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! VjdeRubyCFU(line,base,col,findstart) "{{{2$/;"	f
VjdeRubyCFU0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^func! VjdeRubyCFU0(findstart,base)$/;"	f
VjdeRunCurrent	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! s:VjdeRunCurrent(...)$/;"	f
VjdeRunParameter	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! s:VjdeRunParameter(t)$/;"	f
VjdeSaveAsMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeSaveAsMenu()$/;"	f
VjdeSaveMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeSaveMenu()$/;"	f
VjdeSaveProject	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeSaveProject() " {{{2$/;"	f
VjdeSaveProjectAs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeSaveProjectAs(prj) " {{{2$/;"	f
VjdeSearchClasses	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^func VjdeSearchClasses(jar,lib_path,prefix,base)$/;"	f
VjdeSelectMethods	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! VjdeSelectMethods(class,imps,...) "{{{2$/;"	f
VjdeSetJava	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! VjdeSetJava(str) $/;"	f
VjdeSetupCtagsCFU	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! VjdeSetupCtagsCFU()$/;"	f
VjdeSetupHTML	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! VjdeSetupHTML()$/;"	f
VjdeSetupIab	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! VjdeSetupIab()$/;"	f
VjdeSetupJSP	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! VjdeSetupJSP()$/;"	f
VjdeShowJavadoc	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^func! VjdeShowJavadoc() "{{{2 remove$/;"	f
VjdeShowTipsWnd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^func! VjdeShowTipsWnd(info)$/;"	f
VjdeTagAttributeElement_AddValue	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagAttributeElement_AddValue(val) dict$/;"	f
VjdeTagAttributeElement_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagAttributeElement_New(name)$/;"	f
VjdeTagCompletion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeTagCompletion(tag,base,t,...) "{{{2$/;"	f
VjdeTagElement_AddAttribute	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagElement_AddAttribute(val) dict$/;"	f
VjdeTagElement_AddParent	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagElement_AddParent(val) dict$/;"	f
VjdeTagElement_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagElement_New(name) $/;"	f
VjdeTagLoaderGet	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoaderGet(name,fname) $/;"	f
VjdeTagLoader_FindAttribute	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_FindAttribute(tagname,name) dict$/;"	f
VjdeTagLoader_FindTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_FindTag(name) dict$/;"	f
VjdeTagLoader_FindValues	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_FindValues(tagname,attrname) dict$/;"	f
VjdeTagLoader_Load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_Load(fname) dict$/;"	f
VjdeTagLoader_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_New()$/;"	f
VjdeTagLoader_ParseTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_ParseTag(name,children,parent,attris) dict$/;"	f
VjdeTagLoader_SearchAttributes	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_SearchAttributes(name,cond) dict$/;"	f
VjdeTagLoader_SearchTags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_SearchTags(cond) dict$/;"	f
VjdeTagLoader_SearchValues	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagLoader_SearchValues(tagname,attrname,cond) dict$/;"	f
VjdeTagType_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^func! VjdeTagType_New(name,val) $/;"	f
VjdeTaglibCompletionFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibCompletionFun(line,base,col,findstart) "{{{2$/;"	f
VjdeTaglibCompletionXmldata	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibCompletionXmldata(uri,base,attr,tag) "{{{2$/;"	f
VjdeTaglibCompletionXmldata2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibCompletionXmldata2(datafile,base,attr,tag) "{{{2$/;"	f
VjdeTaglibGetURI	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibGetURI(prefix)  "{{{2$/;"	f
VjdeTaglibInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibInfo() "{{{2$/;"	f
VjdeTaglibPrefix	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibPrefix(line) "{{{2$/;"	f
VjdeTaglibTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeTaglibTag(line) "{{{2$/;"	f
VjdeTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^    class VjdeTemplate #{{{2$/;"	c	class:Vjde
VjdeTemplateIndex	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplateIndex(name,desc,pos,file) $/;"	f
VjdeTemplateJavaRuby	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeTemplateJavaRuby(tn,paras) "{{{2$/;"	f
VjdeTemplateManager	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^    class VjdeTemplateManager #{{{2$/;"	c	class:Vjde
VjdeTemplateManager_GetTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplateManager_GetTemplate(name) dict$/;"	f
VjdeTemplateManager_LoadIndex	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplateManager_LoadIndex(fname) dict$/;"	f
VjdeTemplateManager_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplateManager_New()$/;"	f
VjdeTemplatePara_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplatePara_New(n,d) $/;"	f
VjdeTemplateReload	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeTemplateReload()$/;"	f
VjdeTemplateWizard	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! VjdeTemplateWizard()$/;"	f
VjdeTemplate_AddPara	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_AddPara(n,d) dict$/;"	f
VjdeTemplate_GetLines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_GetLines() dict $/;"	f
VjdeTemplate_GetParas	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_GetParas() dict $/;"	f
VjdeTemplate_GetValue	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_GetValue(str) dict$/;"	f
VjdeTemplate_New	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_New(n,m) $/;"	f
VjdeTemplate_SetPara	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^func! VjdeTemplate_SetPara(n,v) dict$/;"	f
VjdeTemplates2Menu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! s:VjdeTemplates2Menu(f)$/;"	f
VjdeTemplatesAdd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! s:VjdeTemplatesAdd(name,desc)$/;"	f
VjdeTemplatesCreateMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^func! s:VjdeTemplatesCreateMenu(f)$/;"	f
VjdeTld2Data	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    command -nargs=+ -complete=file VjdeTld2Data call s:VjdeGenTldData(<f-args>)$/;"	c
VjdeUpdateMenu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^function! s:VjdeUpdateMenu(name) "{{{2$/;"	f
VjdeWadd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command!  -nargs=1 -complete=file VjdeWadd call s:VjdeAddTemplate(<f-args>)$/;"	c
VjdeWindowAdd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowAdd(str)$/;"	f
VjdeWindowAddImpl	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowAddImpl(str)$/;"	f
VjdeWindowClear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowClear()$/;"	f
VjdeWindowClearImpl	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowClearImpl()$/;"	f
VjdeWindowClose	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowClose()$/;"	f
VjdeWindowCloseImpl	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowCloseImpl()$/;"	f
VjdeWindowInit	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowInit()$/;"	f
VjdeWindowOpen	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^func! VjdeWindowOpen()$/;"	f
VjdeWizard	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^command!  -nargs=0  VjdeWizard call VjdeTemplateWizard(<f-args>)$/;"	c
VjdeWriteNumber	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! s:VjdeWriteNumber(name) $/;"	f
VjdeWriteStr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^func! s:VjdeWriteStr(name) $/;"	f
VjdeXMLFindDTD	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeXMLFindDTD() "{{{2$/;"	f
VjdeXMLFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeXMLFun(line,base,col,findstart) "{{{2$/;"	f
VjdeXMLFun0	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeXMLFun0(findstart,base)$/;"	f
VjdeXMLPrefix	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdeXMLPrefix(line,base,col,findstart)$/;"	f
VjdeXMLSetupNSLoader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeXMLSetupNSLoader(prefix) "{{{2$/;"	f
VjdeXslInfo	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! s:VjdeXslInfo() "{{{2$/;"	f
Vjde_add_import	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Vjde_add_import(cls) "{{{2$/;"	f
Vjde_add_import_jsp	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Vjde_add_import_jsp(cls) "{{{2$/;"	f
Vjde_add_var	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Vjde_add_var(lnum,str,v_t) "{{{2$/;"	f
Vjde_ext_import	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_ext_import() "{{{2$/;"	f
Vjde_fix_import	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_fix_import() "{{{2$/;"	f
Vjde_fix_import1	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_fix_import1(...) "{{2$/;"	f
Vjde_fix_throws	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_fix_throws() "{{{2$/;"	f
Vjde_fix_try	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_fix_try() "{{{2$/;"	f
Vjde_get_cls	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Vjde_get_cls(cls)$/;"	f
Vjde_get_pkg	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! s:Vjde_get_pkg(cls) "{{{2$/;"	f
Vjde_get_set	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_get_set() " {{{2$/;"	f
Vjde_import_check	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_import_check(cls) "{{{2$/;"	f
Vjde_override	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_override(type) " 0 extends 1 implements {{{2$/;"	f
Vjde_remove_imports	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_remove_imports()$/;"	f
Vjde_rft_arg	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_rft_arg() "{{{$/;"	f
Vjde_rft_const	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_rft_const() range "{{{2$/;"	f
Vjde_rft_var	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_rft_var(pos_t) "{{{2$/;"	f
Vjde_sort_import	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_sort_import() range "{{{2$/;"	f
Vjde_surround_try	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_surround_try() range "{{{2$/;"	f
Vjde_test	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^func! Vjde_test(ll)$/;"	f
Vjde_utils_setup	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^function! s:Vjde_utils_setup() "{{{2$/;"	f
VjdeaddDtd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=* -complete=file VjdeaddDtd call s:VjdeAddDtd(<f-args>)$/;"	c
VjdeaddTld	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=* -complete=file VjdeaddTld call s:VjdeAddTld(<f-args>)$/;"	c
Vjdeas	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=* -complete=file Vjdeas call s:VjdeSaveProjectAs(<f-args>)$/;"	c
Vjdec	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command! -nargs=0 Vjdec :compiler javac_ex <bar> exec "make -d \\"".g:vjde_out_path."\\" -classpath \\"".g:vjde_lib_path."\\" ".expand("%")$/;"	c
Vjdegd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^command! -nargs=0 Vjdegd call  s:VjdeGotoDecl()  $/;"	c
Vjdei	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^command! -nargs=0 Vjdei call  s:VjdeInfomation()  $/;"	c
Vjdei2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^command! -nargs=0 Vjdei2 echo s:VjdeJspTaglib()$/;"	c
Vjdelistdtds	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=0 Vjdelistdtds echo VjdeListDtds()$/;"	c
Vjdeload	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=1 -complete=file Vjdeload call s:VjdeLoadProject(<f-args>)$/;"	c
Vjder	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command! -nargs=* Vjder :call s:VjdeRunCurrent(<f-args>)$/;"	c
Vjdesave	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^command!  -nargs=0 -complete=file Vjdesave call s:VjdeSaveProject()$/;"	c
VjdespFun	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^func! VjdespFun(line) "{{{2$/;"	f
Vjdetest	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^command! -nargs=0 Vjdetest echo s:GetJspImportStr()$/;"	c
Void_t	C:\exVim\graphviz\include\graphviz\cdt.h	12;"	d
VundleClean	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
VundleUpdate	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^com! -nargs=*       -complete=custom,vundle#scripts#complete VundleUpdate  PluginInstall! <args>$/;"	c
WHILE	C:\exVim\graphviz\bin\exparse.h	/^     WHILE = 306,$/;"	e	enum:extokentype
WHILE	C:\exVim\graphviz\bin\exparse.h	173;"	d
WITH_CGRAPH	C:\exVim\graphviz\include\graphviz\types.h	19;"	d
Wangfc	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^namespace Wangfc {$/;"	n
Wangfc	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^namespace Wangfc$/;"	n
Wangfc	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^namespace Wangfc$/;"	n
Wangfc.CSParser	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^	public class CSParser {$/;"	c	namespace:Wangfc	access:public
Wangfc.CSParser.Main	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^		public static void Main(string[] argv) {$/;"	m	class:Wangfc.CSParser	access:public	signature:(string[] argv)
Wangfc.CSParser.bas	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string bas=null;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.findType	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static void findType() {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:()
Wangfc.CSParser.genModule	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static Boolean genModule(Module m) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Module m)
Wangfc.CSParser.genType	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static void genType(Type t ) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Type t )
Wangfc.CSParser.libs	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string[] libs ;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.nss	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string[] nss  ;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.tn	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string tn = null;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.TypeFinder	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^    public class TypeFinder$/;"	c	namespace:Wangfc	access:public
Wangfc.TypeFinder.Main	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.TypeFinder	access:public	signature:(string[] argv)
Wangfc.TypeFinder.bas	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.findType	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.TypeFinder	access:public	signature:()
Wangfc.TypeFinder.libs	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.nss	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.tn	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.UsingFinder	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^    public class UsingFinder$/;"	c	namespace:Wangfc	access:public
Wangfc.UsingFinder.Main	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.UsingFinder	access:public	signature:(string[] argv)
Wangfc.UsingFinder.bas	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.findType	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.UsingFinder	access:public	signature:()
Wangfc.UsingFinder.libs	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.nss	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.tn	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
WarnIfNotUnfinalised	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
WarnMsg	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^function! s:WarnMsg( msg )$/;"	f
WhitespaceInit	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:WhitespaceInit()$/;"	f
Wholematch	C:\exVim\vim74\macros\matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Wholematch	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WinMain	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f	signature:(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)
WinMain	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f	signature:(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)
Windo	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^function! s:Windo(command)$/;"	f
Window.Toggle\	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
WipeAll	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^    function! s:WipeAll(recurse, line)$/;"	f
WndProc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
WndProc	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
Wq	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
WriteClassComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteClassComments()$/;"	f
WriteCopyOfTag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteCopyOfTag()$/;"	f
WriteFieldComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteFieldComments()$/;"	f
WriteFileComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteFileComments()$/;"	f
WriteFoundException	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteFoundException()$/;"	f
WriteFunctionEndComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteFunctionEndComments()$/;"	f
WriteMethodComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteMethodComments()$/;"	f
WriteModeLine	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^function! s:WriteModeLine()$/;"	f
Wydawca	C:\exVim\vim74\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly) - wg 6. ang. wydania$/;"	l
Wydawca	C:\exVim\vim74\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly).$/;"	l
Wydawca	C:\exVim\vim74\tutor\tutor.pl	/^	Wydawca: New Riders$/;"	l
Wydawca	C:\exVim\vim74\tutor\tutor.pl	/^	Wydawca: O'Reilly & Associates Inc.$/;"	l
X	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X2F	C:\exVim\graphviz\bin\exparse.h	/^     X2F = 317,$/;"	e	enum:extokentype
X2F	C:\exVim\graphviz\bin\exparse.h	184;"	d
X2I	C:\exVim\graphviz\bin\exparse.h	/^     X2I = 318,$/;"	e	enum:extokentype
X2I	C:\exVim\graphviz\bin\exparse.h	185;"	d
X2S	C:\exVim\graphviz\bin\exparse.h	/^     X2S = 319,$/;"	e	enum:extokentype
X2S	C:\exVim\graphviz\bin\exparse.h	186;"	d
X2X	C:\exVim\graphviz\bin\exparse.h	/^     X2X = 320,$/;"	e	enum:extokentype
X2X	C:\exVim\graphviz\bin\exparse.h	187;"	d
XDOT_H	C:\exVim\graphviz\include\graphviz\xdot.h	14;"	d
XDOT_PARSE_ERROR	C:\exVim\graphviz\include\graphviz\xdot.h	136;"	d
XMLent	C:\exVim\vim74\ftplugin\xml.vim	/^command! -nargs=? XMLent call xmlcomplete#CreateEntConnection(<f-args>)$/;"	c
XMLns	C:\exVim\vim74\ftplugin\xml.vim	/^command! -nargs=+ XMLns call xmlcomplete#CreateConnection(<f-args>)$/;"	c
XPRINT	C:\exVim\graphviz\bin\exparse.h	/^     XPRINT = 321,$/;"	e	enum:extokentype
XPRINT	C:\exVim\graphviz\bin\exparse.h	188;"	d
X_DISPLAY_MISSING	C:\exVim\graphviz\bin\config.h	468;"	d
Xf86confdeclopt	C:\exVim\vim74\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86confValue,xf86confComment skipwhite$/;"	c
Xf86confdeclopt	C:\exVim\vim74\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
XmlIndentGet	C:\exVim\vim74\indent\xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f
XmlIndentSum	C:\exVim\vim74\indent\xml.vim	/^fun! <SID>XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentSynCheck	C:\exVim\vim74\indent\xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f
XmlIndentWithPattern	C:\exVim\vim74\indent\xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f
XxdBack	C:\exVim\vim74\menu.vim	/^func! s:XxdBack()$/;"	f
XxdConv	C:\exVim\vim74\menu.vim	/^func! s:XxdConv()$/;"	f
XxdFind	C:\exVim\vim74\menu.vim	/^func! s:XxdFind()$/;"	f
YYSTATE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	86;"	d	file:
YY_AT_BOL	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	262;"	d	file:
YY_BREAK	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	875;"	d	file:
YY_BUFFER_EOF_PENDING	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	198;"	d	file:
YY_BUFFER_NEW	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	186;"	d	file:
YY_BUFFER_NORMAL	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	187;"	d	file:
YY_BUFFER_STATE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	97;"	d	file:
YY_CHAR	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	207;"	d	file:
YY_DECL	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	863;"	d	file:
YY_DO_BEFORE_ACTION	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	278;"	d	file:
YY_END_OF_BUFFER	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	286;"	d	file:
YY_END_OF_BUFFER_CHAR	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	94;"	d	file:
YY_EXIT_FAILURE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	1956;"	d	file:
YY_FATAL_ERROR	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	856;"	d	file:
YY_FLEX_MAJOR_VERSION	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	8;"	d	file:
YY_FLEX_MINOR_VERSION	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	9;"	d	file:
YY_FLUSH_BUFFER	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	236;"	d	file:
YY_INPUT	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	703;"	d	file:
YY_INPUT	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	823;"	d	file:
YY_MORE_ADJ	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	685;"	d	file:
YY_NEW_FILE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	92;"	d	file:
YY_NO_POP_STATE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	786;"	d	file:
YY_NO_PUSH_STATE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	785;"	d	file:
YY_NO_TOP_STATE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	787;"	d	file:
YY_NULL	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	66;"	d	file:
YY_NUM_RULES	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	285;"	d	file:
YY_PROTO	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	60;"	d	file:
YY_PROTO	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	62;"	d	file:
YY_READ_BUF_SIZE	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	807;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	686;"	d	file:
YY_RULE_SETUP	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	878;"	d	file:
YY_SC_TO_UI	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	73;"	d	file:
YY_START	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	85;"	d	file:
YY_START_STACK_INCR	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	851;"	d	file:
YY_STATE_EOF	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	89;"	d	file:
YY_USER_ACTION	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	870;"	d	file:
YY_USE_CONST	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	31;"	d	file:
YY_USE_CONST	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	38;"	d	file:
YY_USE_CONST	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	48;"	d	file:
YY_USE_PROTOS	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	28;"	d	file:
YY_USE_PROTOS	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	37;"	d	file:
YY_USE_PROTOS	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	49;"	d	file:
ZimbuGoEndBlock	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f
ZimbuGoStartBlock	C:\exVim\vim74\ftplugin\zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f
ZipBrowseSelect	C:\exVim\vim74\autoload\zip.vim	/^fun! s:ZipBrowseSelect()$/;"	f
["	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
[#	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[%	C:\exVim\vim74\macros\matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	C:\exVim\vim74\macros\matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	C:\exVim\vim74\macros\matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[<C-D>	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
[M	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\s*\\.','bW')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\j.vim	/^noremap <script> <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\python.vim	/^nnoremap <silent> <buffer> [[ :call <SID>Python_jump('?^\\(class\\\\|def\\)')<cr>$/;"	m
[[	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[[	C:\exVim\vim74\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> [[ m':call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	C:\exVim\vim74\ftplugin\zimbu.vim	/^nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
[[	C:\exVim\vimfiles\cppscript.vim	/^inoremap [[ <cr>{}<esc>i<cr><esc>kA<cr>$/;"	m
[[	C:\exVim\vimfiles\cscript.vim	/^inoremap [[ <cr>{}<esc>i<cr><esc>kA<cr>$/;"	m
[[	C:\exVim\vimfiles\hscript.vim	/^inoremap [[ <cr>{}<esc>i<cr><esc>kA<cr>$/;"	m
[[	C:\exVim\vimfiles\phpscript.vim	/^inoremap [[ <cr>{}<esc>i<cr><esc>kA<cr>$/;"	m
[]	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\j.vim	/^noremap <script> <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[]	C:\exVim\vim74\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> [] m':call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def VjdeDefLoader.[](name,fname=nil)$/;"	F	class:Vjde.VjdeDefLoader
[]	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^	def VjdeTemplateManager.[](name,path='')$/;"	F	class:Vjde.VjdeTemplateManager
[d	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[m	C:\exVim\vim74\ftplugin\python.vim	/^nnoremap <silent> <buffer> [m :call <SID>Python_jump('?^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
[m	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
\sm	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^noremap <unique> <script> \\sm m$/;"	m
]"	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]#	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]%	C:\exVim\vim74\macros\matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	C:\exVim\vim74\macros\matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	C:\exVim\vim74\macros\matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]<C-D>	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
]M	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\j.vim	/^noremap <script> <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
][	C:\exVim\vim74\ftplugin\vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> ][ m':call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
][	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\.','W')<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\j.vim	/^noremap <script> <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]] :call <SID>Python_jump('\/^\\(class\\\\|def\\)')<cr>$/;"	m
]]	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
]]	C:\exVim\vim74\ftplugin\vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]] m':call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	C:\exVim\vim74\ftplugin\zimbu.vim	/^nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
]d	C:\exVim\vim74\ftplugin\cucumber.vim	/^  nnoremap <silent><buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]m	C:\exVim\vim74\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]m :call <SID>Python_jump('\/^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
]m	C:\exVim\vim74\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_ARG_	C:\exVim\graphviz\include\graphviz\cdt.h	16;"	d
_BEGIN_EXTERNS_	C:\exVim\graphviz\include\graphviz\cdt.h	23;"	d
_CDT_H	C:\exVim\graphviz\include\graphviz\cdt.h	2;"	d
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	697;"	d	file:
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	699;"	d	file:
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	18;"	d	file:
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	20;"	d	file:
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	10;"	d	file:
_DL_EXPORT	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	8;"	d	file:
_DT	C:\exVim\graphviz\include\graphviz\cdt.h	253;"	d
_DTCMP	C:\exVim\graphviz\include\graphviz\cdt.h	260;"	d
_DTDSC	C:\exVim\graphviz\include\graphviz\cdt.h	254;"	d
_DTHSH	C:\exVim\graphviz\include\graphviz\cdt.h	263;"	d
_DTKEY	C:\exVim\graphviz\include\graphviz\cdt.h	258;"	d
_DTLNK	C:\exVim\graphviz\include\graphviz\cdt.h	256;"	d
_DTMTCH	C:\exVim\graphviz\include\graphviz\cdt.h	266;"	d
_DTOBJ	C:\exVim\graphviz\include\graphviz\cdt.h	257;"	d
_DTSRCH	C:\exVim\graphviz\include\graphviz\cdt.h	279;"	d
_DUMMY_ELEM_	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef enum { APIS _DUMMY_ELEM_=0 } api_t; \/* API_render, API_layout, ... *\/$/;"	e	enum:__anon13
_END_EXTERNS_	C:\exVim\graphviz\include\graphviz\cdt.h	26;"	d
_EXPARSE_H	C:\exVim\graphviz\bin\exparse.h	2;"	d
_GNU_SOURCE	C:\exVim\graphviz\include\graphviz\arith.h	22;"	d
_GRAPH_H	C:\exVim\graphviz\include\graphviz\graph.h	20;"	d
_PACK_H	C:\exVim\graphviz\include\graphviz\pack.h	17;"	d
_PATHGEOM_INCLUDE	C:\exVim\graphviz\include\graphviz\pathgeom.h	16;"	d
_PATH_INCLUDE	C:\exVim\graphviz\include\graphviz\pathplan.h	17;"	d
_PREVIEWWINDOW_HPP	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.hpp	2;"	d
_PostscriptAlias	C:\exVim\graphviz\include\graphviz\textpara.h	/^    typedef struct _PostscriptAlias {$/;"	s
_PostscriptAlias	C:\exVim\graphviz\include\graphviz\textspan.h	/^    typedef struct _PostscriptAlias {$/;"	s
_PostscriptAlias::family	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* family;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::family	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* family;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::name	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* name;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::name	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* name;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::stretch	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* stretch;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::stretch	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* stretch;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::style	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* style;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::style	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* style;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_family	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_family;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_family	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_family;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_style	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_style;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_style	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_style;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_weight	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_weight;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::svg_font_weight	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_weight;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::weight	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* weight;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::weight	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* weight;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::xfig_code	C:\exVim\graphviz\include\graphviz\textpara.h	/^        int xfig_code;$/;"	m	struct:_PostscriptAlias	access:public
_PostscriptAlias::xfig_code	C:\exVim\graphviz\include\graphviz\textspan.h	/^        int xfig_code;$/;"	m	struct:_PostscriptAlias	access:public
_Rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	typedef struct _Rectangle {$/;"	s	file:
_Rectangle::height	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int height;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::width	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int width;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::x	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int x;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::y	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int y;$/;"	m	struct:_Rectangle	file:	access:public
_SID	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^  function! s:_SID() abort$/;"	f
__ARGS	C:\exVim\vim74\tools\xcmdsrv_client.c	32;"	d	file:
__CCFILTER_C__	C:\exVim\vim74\tools\ccfilter.c	14;"	d	file:
__DEFINE__	C:\exVim\graphviz\include\graphviz\cdt.h	37;"	d
__DEFINE__	C:\exVim\graphviz\include\graphviz\cdt.h	40;"	d
__EXPORT__	C:\exVim\graphviz\include\graphviz\cdt.h	30;"	d
__EXTERN__	C:\exVim\graphviz\include\graphviz\cdt.h	36;"	d
__EXTERN__	C:\exVim\graphviz\include\graphviz\cdt.h	39;"	d
__IMPORT__	C:\exVim\graphviz\include\graphviz\cdt.h	31;"	d
__anon10::LL	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { pointf LL, UR; } boxf;$/;"	m	struct:__anon10	access:public
__anon10::UR	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { pointf LL, UR; } boxf;$/;"	m	struct:__anon10	access:public
__anon14::address	C:\exVim\graphviz\include\graphviz\gvcext.h	/^	void* address;$/;"	m	struct:__anon14	access:public
__anon14::name	C:\exVim\graphviz\include\graphviz\gvcext.h	/^	const char *name;$/;"	m	struct:__anon14	access:public
__anon20::color_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	color_type_t color_type;$/;"	m	struct:__anon20	access:public
__anon20::default_pad	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double default_pad;	\/* graph units *\/$/;"	m	struct:__anon20	access:public
__anon20::flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int flags;$/;"	m	struct:__anon20	access:public
__anon20::knowncolors	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **knowncolors;$/;"	m	struct:__anon20	access:public
__anon20::sz_knowncolors	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int sz_knowncolors;$/;"	m	struct:__anon20	access:public
__anon21::default_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_dpi;$/;"	m	struct:__anon21	access:public
__anon21::default_margin	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_margin;  \/* left\/right, top\/bottom - points *\/$/;"	m	struct:__anon21	access:public
__anon21::default_pagesize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_pagesize;\/* default page width, height - points *\/$/;"	m	struct:__anon21	access:public
__anon21::flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int flags;$/;"	m	struct:__anon21	access:public
__anon26::engine	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	void *engine;   \/* pointer to the jump table for the plugin *\/$/;"	m	struct:__anon26	access:public
__anon26::features	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	void *features; \/* pointer to the feature description $/;"	m	struct:__anon26	access:public
__anon26::id	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	int id;         \/* an id that is only unique within a package $/;"	m	struct:__anon26	access:public
__anon26::quality	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	int quality;    \/* an arbitrary integer used for ordering plugins of$/;"	m	struct:__anon26	access:public
__anon26::type	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	const char *type;	\/* a string name, such as "png" or "ps" that$/;"	m	struct:__anon26	access:public
__anon27::api	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	api_t api;$/;"	m	struct:__anon27	access:public
__anon27::types	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	gvplugin_installed_t *types;$/;"	m	struct:__anon27	access:public
__anon28::apis	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	gvplugin_api_t *apis;$/;"	m	struct:__anon28	access:public
__anon28::packagename	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	char *packagename;    \/* used when this plugin is builtin and has$/;"	m	struct:__anon28	access:public
__anon29::fn	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvpruserfn fn;$/;"	m	struct:__anon29	access:public
__anon29::name	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    char* name;$/;"	m	struct:__anon29	access:public
__anon30::bindings	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprbinding* bindings;    \/* array of bindings, terminated with {NULL,NULL} *\/$/;"	m	struct:__anon30	access:public
__anon30::err	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprwr err;               \/* write function for stderr *\/$/;"	m	struct:__anon30	access:public
__anon30::flags	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    int flags;$/;"	m	struct:__anon30	access:public
__anon30::ingraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    Agraph_t** ingraphs;      \/* NULL-terminated array of input graphs *\/$/;"	m	struct:__anon30	access:public
__anon30::n_outgraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    int n_outgraphs;          \/* if GV_USE_OUTGRAPH set, output graphs *\/$/;"	m	struct:__anon30	access:public
__anon30::out	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprwr out;               \/* write function for stdout *\/$/;"	m	struct:__anon30	access:public
__anon30::outgraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    Agraph_t** outgraphs;$/;"	m	struct:__anon30	access:public
__anon32::aspect	C:\exVim\graphviz\include\graphviz\pack.h	/^	float aspect;		\/* desired aspect ratio *\/$/;"	m	struct:__anon32	access:public
__anon32::doSplines	C:\exVim\graphviz\include\graphviz\pack.h	/^	int doSplines;		\/* use splines in constructing graph shape *\/$/;"	m	struct:__anon32	access:public
__anon32::fixed	C:\exVim\graphviz\include\graphviz\pack.h	/^	boolean *fixed;		\/* fixed[i] == true implies g[i] should not be moved *\/$/;"	m	struct:__anon32	access:public
__anon32::flags	C:\exVim\graphviz\include\graphviz\pack.h	/^	int flags;       $/;"	m	struct:__anon32	access:public
__anon32::margin	C:\exVim\graphviz\include\graphviz\pack.h	/^	unsigned int margin;	\/* margin left around objects, in points *\/$/;"	m	struct:__anon32	access:public
__anon32::mode	C:\exVim\graphviz\include\graphviz\pack.h	/^	pack_mode mode;		\/* granularity and method *\/$/;"	m	struct:__anon32	access:public
__anon32::sz	C:\exVim\graphviz\include\graphviz\pack.h	/^	int sz;			\/* row\/column size size *\/$/;"	m	struct:__anon32	access:public
__anon32::vals	C:\exVim\graphviz\include\graphviz\pack.h	/^	packval_t* vals;	\/* for arrays, sort numbers *\/$/;"	m	struct:__anon32	access:public
__anon33::cnt	C:\exVim\graphviz\include\graphviz\textspan.h	/^	unsigned int cnt:(sizeof(unsigned int) * 8 - 7);   \/* reference count *\/$/;"	m	struct:__anon33	access:public
__anon33::color	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char*  color;$/;"	m	struct:__anon33	access:public
__anon33::flags	C:\exVim\graphviz\include\graphviz\textspan.h	/^	unsigned int flags:7;  \/* HTML_UL, HTML_IF, HTML_BF, etc. *\/$/;"	m	struct:__anon33	access:public
__anon33::name	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char*  name;$/;"	m	struct:__anon33	access:public
__anon33::postscript_alias	C:\exVim\graphviz\include\graphviz\textspan.h	/^	PostscriptAlias *postscript_alias;$/;"	m	struct:__anon33	access:public
__anon33::size	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double size;$/;"	m	struct:__anon33	access:public
__anon34::font	C:\exVim\graphviz\include\graphviz\textspan.h	/^	textfont_t *font;$/;"	m	struct:__anon34	access:public
__anon34::free_layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	void (*free_layout) (void *layout);   \/* FIXME - this is ugly *\/$/;"	m	struct:__anon34	access:public
__anon34::just	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char just;	\/* 'l' 'n' 'r' *\/ \/* FIXME *\/$/;"	m	struct:__anon34	access:public
__anon34::layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	void *layout;$/;"	m	struct:__anon34	access:public
__anon34::size	C:\exVim\graphviz\include\graphviz\textspan.h	/^ 	pointf size;$/;"	m	struct:__anon34	access:public
__anon34::str	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char *str;      \/* stored in utf-8 *\/$/;"	m	struct:__anon34	access:public
__anon34::yoffset_centerline	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double yoffset_layout, yoffset_centerline;$/;"	m	struct:__anon34	access:public
__anon34::yoffset_layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double yoffset_layout, yoffset_centerline;$/;"	m	struct:__anon34	access:public
__anon37::ignoreSwap	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean ignoreSwap;                     \/* Test for swapped edges if false *\/$/;"	m	struct:__anon37	access:public
__anon37::isOrtho	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean isOrtho;                        \/* Orthogonal routing used *\/$/;"	m	struct:__anon37	access:public
__anon37::splineMerge	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean(*splineMerge) (node_t * n);	\/* Is n a node in the middle of an edge? *\/$/;"	m	struct:__anon37	access:public
__anon37::swapEnds	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean(*swapEnds) (edge_t * e);	\/* Should head and tail be swapped? *\/$/;"	m	struct:__anon37	access:public
__anon43::flags	C:\exVim\graphviz\include\graphviz\types.h	/^	int flags;$/;"	m	struct:__anon43	access:public
__anon47::color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* color;$/;"	m	struct:__anon47	access:public
__anon47::frac	C:\exVim\graphviz\include\graphviz\xdot.h	/^    float frac;$/;"	m	struct:__anon47	access:public
__anon48::n_stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_stops;$/;"	m	struct:__anon48	access:public
__anon48::stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_color_stop* stops;$/;"	m	struct:__anon48	access:public
__anon48::x0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0;$/;"	m	struct:__anon48	access:public
__anon48::x1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1;$/;"	m	struct:__anon48	access:public
__anon48::y0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0;$/;"	m	struct:__anon48	access:public
__anon48::y1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1;$/;"	m	struct:__anon48	access:public
__anon49::n_stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_stops;$/;"	m	struct:__anon49	access:public
__anon49::r0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
__anon49::r1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
__anon49::stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_color_stop* stops;$/;"	m	struct:__anon49	access:public
__anon49::x0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
__anon49::x1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
__anon49::y0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
__anon49::y1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
__anon50::__anon51::clr	C:\exVim\graphviz\include\graphviz\xdot.h	/^	char* clr;$/;"	m	union:__anon50::__anon51	access:public
__anon50::__anon51::ling	C:\exVim\graphviz\include\graphviz\xdot.h	/^	xdot_linear_grad ling;$/;"	m	union:__anon50::__anon51	access:public
__anon50::__anon51::ring	C:\exVim\graphviz\include\graphviz\xdot.h	/^	xdot_radial_grad ring;$/;"	m	union:__anon50::__anon51	access:public
__anon50::type	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_grad_type type;$/;"	m	struct:__anon50	access:public
__anon50::u	C:\exVim\graphviz\include\graphviz\xdot.h	/^    } u;$/;"	m	struct:__anon50	typeref:union:__anon50::__anon51	access:public
__anon53::x	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
__anon53::y	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
__anon53::z	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
__anon54::h	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
__anon54::w	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
__anon54::x	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
__anon54::y	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
__anon55::cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;$/;"	m	struct:__anon55	access:public
__anon55::pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_point* pts;$/;"	m	struct:__anon55	access:public
__anon56::align	C:\exVim\graphviz\include\graphviz\xdot.h	/^  xdot_align align;$/;"	m	struct:__anon56	access:public
__anon56::text	C:\exVim\graphviz\include\graphviz\xdot.h	/^  char* text;$/;"	m	struct:__anon56	access:public
__anon56::width	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double width;$/;"	m	struct:__anon56	access:public
__anon56::x	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double x, y;$/;"	m	struct:__anon56	access:public
__anon56::y	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double x, y;$/;"	m	struct:__anon56	access:public
__anon57::name	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* name;$/;"	m	struct:__anon57	access:public
__anon57::pos	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_rect pos;$/;"	m	struct:__anon57	access:public
__anon58::name	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* name;$/;"	m	struct:__anon58	access:public
__anon58::size	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double size;$/;"	m	struct:__anon58	access:public
__anon62::cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;  \/* no. of xdot ops *\/$/;"	m	struct:__anon62	access:public
__anon62::flags	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int flags;$/;"	m	struct:__anon62	access:public
__anon62::freefunc	C:\exVim\graphviz\include\graphviz\xdot.h	/^    freefunc_t freefunc;$/;"	m	struct:__anon62	access:public
__anon62::ops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_op* ops;$/;"	m	struct:__anon62	access:public
__anon62::sz	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int sz;   \/* sizeof structure containing xdot_op as first field *\/$/;"	m	struct:__anon62	access:public
__anon63::cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;  \/* no. of xdot ops *\/$/;"	m	struct:__anon63	access:public
__anon63::n_bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_bezier;$/;"	m	struct:__anon63	access:public
__anon63::n_bezier_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_bezier_pts;$/;"	m	struct:__anon63	access:public
__anon63::n_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_color;$/;"	m	struct:__anon63	access:public
__anon63::n_ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_ellipse;$/;"	m	struct:__anon63	access:public
__anon63::n_font	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_font;$/;"	m	struct:__anon63	access:public
__anon63::n_fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_fontchar;$/;"	m	struct:__anon63	access:public
__anon63::n_gradcolor	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_gradcolor;$/;"	m	struct:__anon63	access:public
__anon63::n_image	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_image;$/;"	m	struct:__anon63	access:public
__anon63::n_polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polygon;$/;"	m	struct:__anon63	access:public
__anon63::n_polygon_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polygon_pts;$/;"	m	struct:__anon63	access:public
__anon63::n_polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polyline;$/;"	m	struct:__anon63	access:public
__anon63::n_polyline_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polyline_pts;$/;"	m	struct:__anon63	access:public
__anon63::n_style	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_style;$/;"	m	struct:__anon63	access:public
__anon63::n_text	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_text;$/;"	m	struct:__anon63	access:public
__anon64::buffer	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    char *buffer;$/;"	m	struct:__anon64	file:	access:public
__anon64::size	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    size_t size;$/;"	m	struct:__anon64	file:	access:public
__anon70::__anon71::error_number	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		int error_number;$/;"	m	struct:__anon70::__anon71	access:public
__anon70::__anon71::opened	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		int opened;$/;"	m	struct:__anon70::__anon71	access:public
__anon70::__anon72::format	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		short format;$/;"	m	struct:__anon70::__anon72	access:public
__anon70::__anon72::sort	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		sortType sort;$/;"	m	struct:__anon70::__anon72	access:public
__anon70::__anon73::author	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *author;$/;"	m	struct:__anon70::__anon73	access:public
__anon70::__anon73::name	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *name;$/;"	m	struct:__anon70::__anon73	access:public
__anon70::__anon73::url	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *url;$/;"	m	struct:__anon70::__anon73	access:public
__anon70::__anon73::version	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *version;$/;"	m	struct:__anon70::__anon73	access:public
__anon70::file	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} file;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon72	access:public
__anon70::program	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} program;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon73	access:public
__anon70::status	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} status;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon71	access:public
__anon74::key	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *key;$/;"	m	struct:__anon74	access:public
__anon74::value	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *value;$/;"	m	struct:__anon74	access:public
__anon75::__anon76::lineNumber	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		unsigned long lineNumber;$/;"	m	struct:__anon75::__anon76	access:public
__anon75::__anon76::pattern	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *pattern;$/;"	m	struct:__anon75::__anon76	access:public
__anon75::__anon77::count	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		unsigned short count;$/;"	m	struct:__anon75::__anon77	access:public
__anon75::__anon77::list	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		tagExtensionField *list;$/;"	m	struct:__anon75::__anon77	access:public
__anon75::address	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} address;$/;"	m	struct:__anon75	typeref:struct:__anon75::__anon76	access:public
__anon75::fields	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} fields;$/;"	m	struct:__anon75	typeref:struct:__anon75::__anon77	access:public
__anon75::file	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *file;$/;"	m	struct:__anon75	access:public
__anon75::fileScope	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	short fileScope;$/;"	m	struct:__anon75	access:public
__anon75::kind	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *kind;$/;"	m	struct:__anon75	access:public
__anon75::name	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *name;$/;"	m	struct:__anon75	access:public
__anon8::x	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { int x, y; } point;$/;"	m	struct:__anon8	access:public
__anon8::y	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { int x, y; } point;$/;"	m	struct:__anon8	access:public
__anon9::LL	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { point LL, UR; } box;$/;"	m	struct:__anon9	access:public
__anon9::UR	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { point LL, UR; } box;$/;"	m	struct:__anon9	access:public
__author__	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^__author__ = "Ryan Kulla (rkulla AT gmail DOT com)"$/;"	v
__copyright__	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^__copyright__ = "Copyright (c) 2003-2014 Ryan Kulla"$/;"	v
__cplusplus	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	17;"	d	file:
__init__	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^    def __init__(self, *args):$/;"	m	class:MyClass	access:public
__init__	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^    def __init__(self, vim):$/;"	m	class:Source	access:public
__init__	C:\exVim\vimfiles\py-support\class.py	/^    def __init__(self,arg):$/;"	f	access:public
__version__	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^__version__ = "1.2.3"$/;"	v
_add_to_errors	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_as_echon	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
_as_statusline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
_assert	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^function! s:_assert(...) abort$/;"	f
_auto_cmap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
_base_set._add	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
_base_set._clear	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._clear() abort$/;"	f
_base_set._hash	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
_base_set._new	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
_base_set._set_data	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
_base_set._to_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
_base_set._update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
_base_set.difference	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
_base_set.gt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
_base_set.in	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
_base_set.intersection	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
_base_set.issubset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
_base_set.issuperset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
_base_set.len	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.len() abort$/;"	f
_base_set.lt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
_base_set.symmetric_difference	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
_base_set.to_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
_base_set.union	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
_buffer_complete	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
_build_module	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_build_module(sid) abort$/;"	f
_capture	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:_capture(mode)$/;"	f
_checkPackage	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_clamp	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:_clamp(x, max, min)$/;"	f
_compare	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_concat	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_concat(lists) abort$/;"	f
_convert_sid	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
_create_hash	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_hash	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_win2pos2hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
_decode_JSON	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
_default_compare	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_delete_dumb	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_delete_dumb(what, flags) abort " {{{2$/;"	f
_deprecated2	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_disabled_by_eclim	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_dt_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dt_s$/;"	s
_dt_s::data	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtdata_t*	data;	\/* sharable data			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::disc	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtdisc_t*	disc;	\/* method to manipulate objs		*\/$/;"	m	struct:_dt_s	access:public
_dt_s::memoryf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmemory_f	memoryf;\/* function to alloc\/free memory	*\/$/;"	m	struct:_dt_s	access:public
_dt_s::meth	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmethod_t*	meth;	\/* dictionary method			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::nview	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		nview;	\/* number of parent view dictionaries	*\/$/;"	m	struct:_dt_s	access:public
_dt_s::searchf	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtsearch_f	searchf;\/* search function			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::type	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		type;	\/* type information			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::user	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Void_t*		user;	\/* for user's usage			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::view	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dt_t*		view;	\/* next on viewpath			*\/$/;"	m	struct:_dt_s	access:public
_dt_s::walk	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dt_t*		walk;	\/* dictionary being walked		*\/$/;"	m	struct:_dt_s	access:public
_dtdata_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dtdata_s$/;"	s
_dtdata_s::__anon2::_head	C:\exVim\graphviz\include\graphviz\cdt.h	/^	  Dtlink_t*	_head;	\/* linked list				*\/$/;"	m	union:_dtdata_s::__anon2	access:public
_dtdata_s::__anon2::_htab	C:\exVim\graphviz\include\graphviz\cdt.h	/^	{ Dtlink_t**	_htab;	\/* hash table				*\/$/;"	m	union:_dtdata_s::__anon2	access:public
_dtdata_s::here	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtlink_t*	here;	\/* finger to last search element	*\/$/;"	m	struct:_dtdata_s	access:public
_dtdata_s::hh	C:\exVim\graphviz\include\graphviz\cdt.h	/^	} hh;$/;"	m	struct:_dtdata_s	typeref:union:_dtdata_s::__anon2	access:public
_dtdata_s::loop	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		loop;	\/* number of nested loops		*\/$/;"	m	struct:_dtdata_s	access:public
_dtdata_s::minp	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		minp;	\/* min path before splay, always even	*\/$/;"	m	struct:_dtdata_s	access:public
_dtdata_s::ntab	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		ntab;	\/* number of hash slots			*\/$/;"	m	struct:_dtdata_s	access:public
_dtdata_s::size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		size;	\/* number of objects			*\/$/;"	m	struct:_dtdata_s	access:public
_dtdata_s::type	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int		type;	\/* type of dictionary			*\/$/;"	m	struct:_dtdata_s	access:public
_dtdisc_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dtdisc_s$/;"	s
_dtdisc_s::comparf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtcompar_f	comparf;\/* to compare two objects		*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::eventf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtevent_f	eventf;	\/* to process events			*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::freef	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtfree_f	freef;	\/* object destructor			*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::hashf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dthash_f	hashf;	\/* to compute hash value of an object	*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::key	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int		key;	\/* where the key begins in an object	*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::link	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		link;	\/* offset to Dtlink_t field		*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::makef	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmake_f	makef;	\/* object constructor			*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::memoryf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmemory_f	memoryf;\/* to allocate\/free memory		*\/$/;"	m	struct:_dtdisc_s	access:public
_dtdisc_s::size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		size;	\/* key size and type			*\/$/;"	m	struct:_dtdisc_s	access:public
_dthold_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dthold_s$/;"	s
_dthold_s::hdr	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtlink_t	hdr;	\/* header		*\/$/;"	m	struct:_dthold_s	access:public
_dthold_s::obj	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Void_t*		obj;	\/* user object		*\/$/;"	m	struct:_dthold_s	access:public
_dtlink_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dtlink_s$/;"	s
_dtlink_s::__anon1::_hash	C:\exVim\graphviz\include\graphviz\cdt.h	/^	{ unsigned int	_hash;	\/* hash value		*\/$/;"	m	union:_dtlink_s::__anon1	access:public
_dtlink_s::__anon1::_left	C:\exVim\graphviz\include\graphviz\cdt.h	/^	  Dtlink_t*	_left;	\/* left child		*\/$/;"	m	union:_dtlink_s::__anon1	access:public
_dtlink_s::hl	C:\exVim\graphviz\include\graphviz\cdt.h	/^	} hl;$/;"	m	struct:_dtlink_s	typeref:union:_dtlink_s::__anon1	access:public
_dtlink_s::right	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtlink_t*	right;	\/* right child		*\/$/;"	m	struct:_dtlink_s	access:public
_dtmethod_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dtmethod_s $/;"	s
_dtmethod_s::searchf	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtsearch_f	searchf; \/* search function	*\/$/;"	m	struct:_dtmethod_s	access:public
_dtmethod_s::type	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		type;	\/* type of operation	*\/$/;"	m	struct:_dtmethod_s	access:public
_dtstat_s	C:\exVim\graphviz\include\graphviz\cdt.h	/^struct _dtstat_s$/;"	s
_dtstat_s::dt_count	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int*	dt_count;	\/* counts of chains or levels by size	*\/$/;"	m	struct:_dtstat_s	access:public
_dtstat_s::dt_max	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_max;		\/* max size of a chain or a level	*\/$/;"	m	struct:_dtstat_s	access:public
_dtstat_s::dt_meth	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int	dt_meth;	\/* method type				*\/$/;"	m	struct:_dtstat_s	access:public
_dtstat_s::dt_n	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_n;		\/* number of chains or levels		*\/$/;"	m	struct:_dtstat_s	access:public
_dtstat_s::dt_size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_size;	\/* number of elements			*\/$/;"	m	struct:_dtstat_s	access:public
_echon	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
_encode_name	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_encode_name	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_execute	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:_execute(cmd)$/;"	f
_explain_skip	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_file2module	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
_find_index	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_finish	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:_finish()$/;"	f
_float2str_dumb	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
_float2str_smart	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
_format_variable	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_function	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
_get_cflags	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_functions	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_include_dirs	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_key	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
_get_module_path	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_hash	C:\exVim\graphviz\include\graphviz\cdt.h	/^	{ unsigned int	_hash;	\/* hash value		*\/$/;"	m	union:_dtlink_s::__anon1	access:public
_hash_func	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_hash_func(x) abort$/;"	f
_head	C:\exVim\graphviz\include\graphviz\cdt.h	/^	  Dtlink_t*	_head;	\/* linked list				*\/$/;"	m	union:_dtdata_s::__anon2	access:public
_htab	C:\exVim\graphviz\include\graphviz\cdt.h	/^	{ Dtlink_t**	_htab;	\/* hash table				*\/$/;"	m	union:_dtdata_s::__anon2	access:public
_ignore_file	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_import(name) abort$/;"	f
_import	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_import(name) abort$/;"	f
_import	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_import(name) abort$/;"	f
_init	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_init() abort " {{{2$/;"	f
_init_hl	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:_init_hl() abort$/;"	f
_isAvailableDefault	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_modified	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
_is_quitting	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
_is_same_index	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_is_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_is_set(x) abort$/;"	f
_is_valid_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
_j	C:\exVim\vim74\macros\justify.vim	/^nmap _j :%call Justify('tw',4)<CR>$/;"	m
_j	C:\exVim\vim74\macros\justify.vim	/^vmap _j :call Justify('tw',4)<CR>$/;"	m
_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
_keys_count	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
_left	C:\exVim\graphviz\include\graphviz\cdt.h	/^	  Dtlink_t*	_left;	\/* left child		*\/$/;"	m	union:_dtlink_s::__anon1	access:public
_logRedirect	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! s:_log_timestamp() abort " {{{2$/;"	f
_maparg	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
_normalise_filetype	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_os_name	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_pad_with_char	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_parse_line	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
_path2project_directory_git	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
_redraw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
_registerHandler	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_shadowed_items	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_replace	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_reset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:_reset()$/;"	f
_reset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^function! s:_reset()$/;"	f
_resolve_filetypes	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_rmrf	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_runtime_files	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_safe_eval	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
_search_headers	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_set_screen_column	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_should_match_cmdline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
_skip_file	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_split_by_wcswidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_keystring	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
_throw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:_throw(message) abort$/;"	f
_translate	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_unify_path	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
_verbosefile_pop	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
_verbosefile_push	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
_virtual_tab2spacelen	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_virtual_tab2spacelen	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_warn_deprecated	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_xdot_op	C:\exVim\graphviz\include\graphviz\xdot.h	/^struct _xdot_op {$/;"	s
_xdot_op::__anon61::bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline bezier;    \/* xd_filled_bezier,  xd_unfilled_bezier *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::color	C:\exVim\graphviz\include\graphviz\xdot.h	/^      char* color;             \/* xd_fill_color, xd_pen_color *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_rect ellipse;       \/* xd_filled_ellipse, xd_unfilled_ellipse *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::font	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_font font;          \/* xd_font *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^      unsigned int fontchar;   \/* xd_fontchar *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::grad_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_color grad_color;   \/* xd_grad_fill_color, xd_grad_pen_color *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::image	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_image image;        \/* xd_image *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline polygon;   \/* xd_filled_polygon, xd_unfilled_polygon *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline polyline;  \/* xd_polyline *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::style	C:\exVim\graphviz\include\graphviz\xdot.h	/^      char* style;             \/* xd_style *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::__anon61::text	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_text text;          \/* xd_text *\/$/;"	m	union:_xdot_op::__anon61	access:public
_xdot_op::drawfunc	C:\exVim\graphviz\include\graphviz\xdot.h	/^    drawfunc_t drawfunc;$/;"	m	struct:_xdot_op	access:public
_xdot_op::kind	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_kind kind;$/;"	m	struct:_xdot_op	access:public
_xdot_op::u	C:\exVim\graphviz\include\graphviz\xdot.h	/^    } u;$/;"	m	struct:_xdot_op	typeref:union:_xdot_op::__anon61	access:public
``	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! ``$/;"	m
a	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
a	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t a, b;$/;"	m	struct:Pedge_t	access:public
a	C:\exVim\graphviz\include\graphviz\types.h	/^	} a;$/;"	m	union:inside_t	typeref:struct:inside_t::__anon35	access:public
a%	C:\exVim\vim74\macros\matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
a%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
a:Damping HREF=#d:Damping	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:Damping HREF=#d:Damping>Damping<\/A>$/;"	a
a:K HREF=#d:K	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:K HREF=#d:K>K<\/A>$/;"	a
a:URL HREF=#d:URL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:URL HREF=#d:URL>URL<\/A>$/;"	a
a:arrowhead HREF=#d:arrowhead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:arrowhead HREF=#d:arrowhead>arrowhead<\/A>$/;"	a
a:arrowsize HREF=#d:arrowsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:arrowsize HREF=#d:arrowsize>arrowsize<\/A>$/;"	a
a:arrowtail HREF=#d:arrowtail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:arrowtail HREF=#d:arrowtail>arrowtail<\/A>$/;"	a
a:aspect HREF=#d:aspect	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:aspect HREF=#d:aspect>aspect<\/A>$/;"	a
a:bb HREF=#d:bb	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:bb HREF=#d:bb>bb<\/A>$/;"	a
a:bgcolor HREF=#d:bgcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:bgcolor HREF=#d:bgcolor>bgcolor<\/A>$/;"	a
a:bmp HREF=#d:bmp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:bmp HREF=#d:bmp>bmp<\/A>$/;"	a
a:canon HREF=#d:canon	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:canon HREF=#d:canon>canon<\/A>$/;"	a
a:center HREF=#d:center	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:center HREF=#d:center>center<\/A>$/;"	a
a:charset HREF=#d:charset	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:charset HREF=#d:charset>charset<\/A>$/;"	a
a:clusterrank HREF=#d:clusterrank	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:clusterrank HREF=#d:clusterrank>clusterrank<\/A>$/;"	a
a:cmap HREF=#d:cmap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:cmap HREF=#d:cmap>cmap<\/A>$/;"	a
a:cmapx HREF=#d:cmapx	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:cmapx HREF=#d:cmapx>cmapx<\/A>$/;"	a
a:cmapx_np HREF=#d:cmapx_np	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:cmapx_np HREF=#d:cmapx_np>cmapx_np<\/A>$/;"	a
a:color HREF=#d:color	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:color HREF=#d:color>color<\/A>$/;"	a
a:colorscheme HREF=#d:colorscheme	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:colorscheme HREF=#d:colorscheme>colorscheme<\/A>$/;"	a
a:comment HREF=#d:comment	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:comment HREF=#d:comment>comment<\/A>$/;"	a
a:compound HREF=#d:compound	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:compound HREF=#d:compound>compound<\/A>$/;"	a
a:concentrate HREF=#d:concentrate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:concentrate HREF=#d:concentrate>concentrate<\/A>$/;"	a
a:constraint HREF=#d:constraint	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:constraint HREF=#d:constraint>constraint<\/A>$/;"	a
a:decorate HREF=#d:decorate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:decorate HREF=#d:decorate>decorate<\/A>$/;"	a
a:defaultdist HREF=#d:defaultdist	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:defaultdist HREF=#d:defaultdist>defaultdist<\/A>$/;"	a
a:dia HREF=#d:dia	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:dia HREF=#d:dia>dia<\/A>$/;"	a
a:dim HREF=#d:dim	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:dim HREF=#d:dim>dim<\/A>$/;"	a
a:dimen HREF=#d:dimen	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:dimen HREF=#d:dimen>dimen<\/A>$/;"	a
a:dir HREF=#d:dir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:dir HREF=#d:dir>dir<\/A>$/;"	a
a:diredgeconstraints HREF=#d:diredgeconstraints	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:diredgeconstraints HREF=#d:diredgeconstraints>diredgeconstraints<\/A>$/;"	a
a:distortion HREF=#d:distortion	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:distortion HREF=#d:distortion>distortion<\/A>$/;"	a
a:dot HREF=#d:dot	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:dot HREF=#d:dot>dot<\/A>$/;"	a
a:dpi HREF=#d:dpi	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:dpi HREF=#d:dpi>dpi<\/A>$/;"	a
a:edgeURL HREF=#d:edgeURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:edgeURL HREF=#d:edgeURL>edgeURL<\/A>$/;"	a
a:edgehref HREF=#d:edgehref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:edgehref HREF=#d:edgehref>edgehref<\/A>$/;"	a
a:edgetarget HREF=#d:edgetarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:edgetarget HREF=#d:edgetarget>edgetarget<\/A>$/;"	a
a:edgetooltip HREF=#d:edgetooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:edgetooltip HREF=#d:edgetooltip>edgetooltip<\/A>$/;"	a
a:eps HREF=#d:eps	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:eps HREF=#d:eps>eps<\/A>$/;"	a
a:epsilon HREF=#d:epsilon	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:epsilon HREF=#d:epsilon>epsilon<\/A>$/;"	a
a:esep HREF=#d:esep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:esep HREF=#d:esep>esep<\/A>$/;"	a
a:fig HREF=#d:fig	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:fig HREF=#d:fig>fig<\/A>$/;"	a
a:fillcolor HREF=#d:fillcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fillcolor HREF=#d:fillcolor>fillcolor<\/A>$/;"	a
a:fixedsize HREF=#d:fixedsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fixedsize HREF=#d:fixedsize>fixedsize<\/A>$/;"	a
a:fontcolor HREF=#d:fontcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fontcolor HREF=#d:fontcolor>fontcolor<\/A>$/;"	a
a:fontname HREF=#d:fontname	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fontname HREF=#d:fontname>fontname<\/A>$/;"	a
a:fontnames HREF=#d:fontnames	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fontnames HREF=#d:fontnames>fontnames<\/A>$/;"	a
a:fontpath HREF=#d:fontpath	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fontpath HREF=#d:fontpath>fontpath<\/A>$/;"	a
a:fontsize HREF=#d:fontsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:fontsize HREF=#d:fontsize>fontsize<\/A>$/;"	a
a:gd HREF=#d:gd	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:gd HREF=#d:gd>gd<\/A>$/;"	a
a:gd2 HREF=#d:gd2	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:gd2 HREF=#d:gd2>gd2<\/A>$/;"	a
a:gif HREF=#d:gif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:gif HREF=#d:gif>gif<\/A>$/;"	a
a:group HREF=#d:group	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:group HREF=#d:group>group<\/A>$/;"	a
a:gtk HREF=#d:gtk	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:gtk HREF=#d:gtk>gtk<\/A>$/;"	a
a:headURL HREF=#d:headURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headURL HREF=#d:headURL>headURL<\/A>$/;"	a
a:headclip HREF=#d:headclip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headclip HREF=#d:headclip>headclip<\/A>$/;"	a
a:headhref HREF=#d:headhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headhref HREF=#d:headhref>headhref<\/A>$/;"	a
a:headlabel HREF=#d:headlabel	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headlabel HREF=#d:headlabel>headlabel<\/A>$/;"	a
a:headport HREF=#d:headport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headport HREF=#d:headport>headport<\/A>$/;"	a
a:headtarget HREF=#d:headtarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headtarget HREF=#d:headtarget>headtarget<\/A>$/;"	a
a:headtooltip HREF=#d:headtooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:headtooltip HREF=#d:headtooltip>headtooltip<\/A>$/;"	a
a:height HREF=#d:height	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:height HREF=#d:height>height<\/A>$/;"	a
a:hpgl HREF=#d:hpgl	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:hpgl HREF=#d:hpgl>hpgl<\/A>$/;"	a
a:href HREF=#d:href	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:href HREF=#d:href>href<\/A>$/;"	a
a:ico HREF=#d:ico	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:ico HREF=#d:ico>ico<\/A>$/;"	a
a:id HREF=#d:id	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:id HREF=#d:id>id<\/A>$/;"	a
a:image HREF=#d:image	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:image HREF=#d:image>image<\/A>$/;"	a
a:imagescale HREF=#d:imagescale	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:imagescale HREF=#d:imagescale>imagescale<\/A>$/;"	a
a:imap HREF=#d:imap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:imap HREF=#d:imap>imap<\/A>$/;"	a
a:imap_np HREF=#d:imap_np	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:imap_np HREF=#d:imap_np>imap_np<\/A>$/;"	a
a:ismap HREF=#d:ismap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:ismap HREF=#d:ismap>ismap<\/A>$/;"	a
a:jpe HREF=#d:jpe	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:jpe HREF=#d:jpe>jpe<\/A>$/;"	a
a:jpeg HREF=#d:jpeg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:jpeg HREF=#d:jpeg>jpeg<\/A>$/;"	a
a:jpg HREF=#d:jpg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:jpg HREF=#d:jpg>jpg<\/A>$/;"	a
a:label HREF=#d:label	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:label HREF=#d:label>label<\/A>$/;"	a
a:labelURL HREF=#d:labelURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelURL HREF=#d:labelURL>labelURL<\/A>$/;"	a
a:labelangle HREF=#d:labelangle	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelangle HREF=#d:labelangle>labelangle<\/A>$/;"	a
a:labeldistance HREF=#d:labeldistance	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labeldistance HREF=#d:labeldistance>labeldistance<\/A>$/;"	a
a:labelfloat HREF=#d:labelfloat	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelfloat HREF=#d:labelfloat>labelfloat<\/A>$/;"	a
a:labelfontcolor HREF=#d:labelfontcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelfontcolor HREF=#d:labelfontcolor>labelfontcolor<\/A>$/;"	a
a:labelfontname HREF=#d:labelfontname	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelfontname HREF=#d:labelfontname>labelfontname<\/A>$/;"	a
a:labelfontsize HREF=#d:labelfontsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelfontsize HREF=#d:labelfontsize>labelfontsize<\/A>$/;"	a
a:labelhref HREF=#d:labelhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelhref HREF=#d:labelhref>labelhref<\/A>$/;"	a
a:labeljust HREF=#d:labeljust	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labeljust HREF=#d:labeljust>labeljust<\/A>$/;"	a
a:labelloc HREF=#d:labelloc	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labelloc HREF=#d:labelloc>labelloc<\/A>$/;"	a
a:labeltarget HREF=#d:labeltarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labeltarget HREF=#d:labeltarget>labeltarget<\/A>$/;"	a
a:labeltooltip HREF=#d:labeltooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:labeltooltip HREF=#d:labeltooltip>labeltooltip<\/A>$/;"	a
a:landscape HREF=#d:landscape	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:landscape HREF=#d:landscape>landscape<\/A>$/;"	a
a:layer HREF=#d:layer	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:layer HREF=#d:layer>layer<\/A>$/;"	a
a:layers HREF=#d:layers	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:layers HREF=#d:layers>layers<\/A>$/;"	a
a:layersep HREF=#d:layersep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:layersep HREF=#d:layersep>layersep<\/A>$/;"	a
a:layout HREF=#d:layout	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:layout HREF=#d:layout>layout<\/A>$/;"	a
a:len HREF=#d:len	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:len HREF=#d:len>len<\/A>$/;"	a
a:levels HREF=#d:levels	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:levels HREF=#d:levels>levels<\/A>$/;"	a
a:levelsgap HREF=#d:levelsgap	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:levelsgap HREF=#d:levelsgap>levelsgap<\/A>$/;"	a
a:lhead HREF=#d:lhead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:lhead HREF=#d:lhead>lhead<\/A>$/;"	a
a:lp HREF=#d:lp	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:lp HREF=#d:lp>lp<\/A>$/;"	a
a:ltail HREF=#d:ltail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:ltail HREF=#d:ltail>ltail<\/A>$/;"	a
a:margin HREF=#d:margin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:margin HREF=#d:margin>margin<\/A>$/;"	a
a:maxiter HREF=#d:maxiter	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:maxiter HREF=#d:maxiter>maxiter<\/A>$/;"	a
a:mclimit HREF=#d:mclimit	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:mclimit HREF=#d:mclimit>mclimit<\/A>$/;"	a
a:mif HREF=#d:mif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:mif HREF=#d:mif>mif<\/A>$/;"	a
a:mindist HREF=#d:mindist	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:mindist HREF=#d:mindist>mindist<\/A>$/;"	a
a:minlen HREF=#d:minlen	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:minlen HREF=#d:minlen>minlen<\/A>$/;"	a
a:mode HREF=#d:mode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:mode HREF=#d:mode>mode<\/A>$/;"	a
a:model HREF=#d:model	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:model HREF=#d:model>model<\/A>$/;"	a
a:mosek HREF=#d:mosek	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:mosek HREF=#d:mosek>mosek<\/A>$/;"	a
a:mp HREF=#d:mp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:mp HREF=#d:mp>mp<\/A>$/;"	a
a:nodesep HREF=#d:nodesep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:nodesep HREF=#d:nodesep>nodesep<\/A>$/;"	a
a:nojustify HREF=#d:nojustify	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:nojustify HREF=#d:nojustify>nojustify<\/A>$/;"	a
a:normalize HREF=#d:normalize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:normalize HREF=#d:normalize>normalize<\/A>$/;"	a
a:nslimit HREF=#d:nslimit	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:nslimit HREF=#d:nslimit>nslimit<\/A>$/;"	a
a:nslimit1 HREF=#d:nslimit1	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<BR><A NAME=a:nslimit1 HREF=#d:nslimit1>nslimit1<\/A>$/;"	a
a:ordering HREF=#d:ordering	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:ordering HREF=#d:ordering>ordering<\/A>$/;"	a
a:orientation HREF=#d:orientation	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:orientation HREF=#d:orientation>orientation<\/A>$/;"	a
a:outputorder HREF=#d:outputorder	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:outputorder HREF=#d:outputorder>outputorder<\/A>$/;"	a
a:overlap HREF=#d:overlap	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:overlap HREF=#d:overlap>overlap<\/A>$/;"	a
a:overlap_scaling HREF=#d:overlap_scaling	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:overlap_scaling HREF=#d:overlap_scaling>overlap_scaling<\/A>$/;"	a
a:pack HREF=#d:pack	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pack HREF=#d:pack>pack<\/A>$/;"	a
a:packmode HREF=#d:packmode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:packmode HREF=#d:packmode>packmode<\/A>$/;"	a
a:pad HREF=#d:pad	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pad HREF=#d:pad>pad<\/A>$/;"	a
a:page HREF=#d:page	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:page HREF=#d:page>page<\/A>$/;"	a
a:pagedir HREF=#d:pagedir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pagedir HREF=#d:pagedir>pagedir<\/A>$/;"	a
a:pcl HREF=#d:pcl	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:pcl HREF=#d:pcl>pcl<\/A>$/;"	a
a:pdf HREF=#d:pdf	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:pdf HREF=#d:pdf>pdf<\/A>$/;"	a
a:pencolor HREF=#d:pencolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pencolor HREF=#d:pencolor>pencolor<\/A>$/;"	a
a:penwidth HREF=#d:penwidth	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:penwidth HREF=#d:penwidth>penwidth<\/A>$/;"	a
a:peripheries HREF=#d:peripheries	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:peripheries HREF=#d:peripheries>peripheries<\/A>$/;"	a
a:pic HREF=#d:pic	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:pic HREF=#d:pic>pic<\/A>$/;"	a
a:pin HREF=#d:pin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pin HREF=#d:pin>pin<\/A>$/;"	a
a:plain HREF=#d:plain	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:plain HREF=#d:plain>plain<\/A>$/;"	a
a:plain-ext HREF=#d:plain-ext	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:plain-ext HREF=#d:plain-ext>plain-ext<\/A>$/;"	a
a:png HREF=#d:png	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:png HREF=#d:png>png<\/A>$/;"	a
a:pos HREF=#d:pos	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:pos HREF=#d:pos>pos<\/A>$/;"	a
a:ps HREF=#d:ps	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:ps HREF=#d:ps>ps<\/A>$/;"	a
a:ps2 HREF=#d:ps2	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:ps2 HREF=#d:ps2>ps2<\/A>$/;"	a
a:quadtree HREF=#d:quadtree	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:quadtree HREF=#d:quadtree>quadtree<\/A>$/;"	a
a:quantum HREF=#d:quantum	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:quantum HREF=#d:quantum>quantum<\/A>$/;"	a
a:rank HREF=#d:rank	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:rank HREF=#d:rank>rank<\/A>$/;"	a
a:rankdir HREF=#d:rankdir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:rankdir HREF=#d:rankdir>rankdir<\/A>$/;"	a
a:ranksep HREF=#d:ranksep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:ranksep HREF=#d:ranksep>ranksep<\/A>$/;"	a
a:ratio HREF=#d:ratio	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:ratio HREF=#d:ratio>ratio<\/A>$/;"	a
a:rects HREF=#d:rects	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:rects HREF=#d:rects>rects<\/A>$/;"	a
a:regular HREF=#d:regular	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:regular HREF=#d:regular>regular<\/A>$/;"	a
a:remincross HREF=#d:remincross	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:remincross HREF=#d:remincross>remincross<\/A>$/;"	a
a:repulsiveforce HREF=#d:repulsiveforce	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:repulsiveforce HREF=#d:repulsiveforce>repulsiveforce<\/A>$/;"	a
a:resolution HREF=#d:resolution	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:resolution HREF=#d:resolution>resolution<\/A>$/;"	a
a:root HREF=#d:root	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:root HREF=#d:root>root<\/A>$/;"	a
a:rotate HREF=#d:rotate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:rotate HREF=#d:rotate>rotate<\/A>$/;"	a
a:samehead HREF=#d:samehead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:samehead HREF=#d:samehead>samehead<\/A>$/;"	a
a:sametail HREF=#d:sametail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:sametail HREF=#d:sametail>sametail<\/A>$/;"	a
a:samplepoints HREF=#d:samplepoints	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:samplepoints HREF=#d:samplepoints>samplepoints<\/A>$/;"	a
a:searchsize HREF=#d:searchsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:searchsize HREF=#d:searchsize>searchsize<\/A>$/;"	a
a:sep HREF=#d:sep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:sep HREF=#d:sep>sep<\/A>$/;"	a
a:shape HREF=#d:shape	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:shape HREF=#d:shape>shape<\/A>$/;"	a
a:shapefile HREF=#d:shapefile	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:shapefile HREF=#d:shapefile>shapefile<\/A>$/;"	a
a:showboxes HREF=#d:showboxes	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:showboxes HREF=#d:showboxes>showboxes<\/A>$/;"	a
a:sides HREF=#d:sides	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:sides HREF=#d:sides>sides<\/A>$/;"	a
a:size HREF=#d:size	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:size HREF=#d:size>size<\/A>$/;"	a
a:skew HREF=#d:skew	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:skew HREF=#d:skew>skew<\/A>$/;"	a
a:smoothing HREF=#d:smoothing	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:smoothing HREF=#d:smoothing>smoothing<\/A>$/;"	a
a:sortv HREF=#d:sortv	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:sortv HREF=#d:sortv>sortv<\/A>$/;"	a
a:splines HREF=#d:splines	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:splines HREF=#d:splines>splines<\/A>$/;"	a
a:start HREF=#d:start	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:start HREF=#d:start>start<\/A>$/;"	a
a:style HREF=#d:style	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:style HREF=#d:style>style<\/A>$/;"	a
a:stylesheet HREF=#d:stylesheet	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:stylesheet HREF=#d:stylesheet>stylesheet<\/A>$/;"	a
a:svg HREF=#d:svg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:svg HREF=#d:svg>svg<\/A>$/;"	a
a:svgz HREF=#d:svgz	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:svgz HREF=#d:svgz>svgz<\/A>$/;"	a
a:tailURL HREF=#d:tailURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailURL HREF=#d:tailURL>tailURL<\/A>$/;"	a
a:tailclip HREF=#d:tailclip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailclip HREF=#d:tailclip>tailclip<\/A>$/;"	a
a:tailhref HREF=#d:tailhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailhref HREF=#d:tailhref>tailhref<\/A>$/;"	a
a:taillabel HREF=#d:taillabel	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:taillabel HREF=#d:taillabel>taillabel<\/A>$/;"	a
a:tailport HREF=#d:tailport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailport HREF=#d:tailport>tailport<\/A>$/;"	a
a:tailtarget HREF=#d:tailtarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailtarget HREF=#d:tailtarget>tailtarget<\/A>$/;"	a
a:tailtooltip HREF=#d:tailtooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tailtooltip HREF=#d:tailtooltip>tailtooltip<\/A>$/;"	a
a:target HREF=#d:target	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:target HREF=#d:target>target<\/A>$/;"	a
a:tga HREF=#d:tga	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:tga HREF=#d:tga>tga<\/A>$/;"	a
a:tif HREF=#d:tif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:tif HREF=#d:tif>tif<\/A>$/;"	a
a:tiff HREF=#d:tiff	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:tiff HREF=#d:tiff>tiff<\/A>$/;"	a
a:tooltip HREF=#d:tooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:tooltip HREF=#d:tooltip>tooltip<\/A>$/;"	a
a:truecolor HREF=#d:truecolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:truecolor HREF=#d:truecolor>truecolor<\/A>$/;"	a
a:vertices HREF=#d:vertices	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:vertices HREF=#d:vertices>vertices<\/A>$/;"	a
a:viewport HREF=#d:viewport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:viewport HREF=#d:viewport>viewport<\/A>$/;"	a
a:vml HREF=#d:vml	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:vml HREF=#d:vml>vml<\/A>$/;"	a
a:vmlz HREF=#d:vmlz	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:vmlz HREF=#d:vmlz>vmlz<\/A>$/;"	a
a:voro_margin HREF=#d:voro_margin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:voro_margin HREF=#d:voro_margin>voro_margin<\/A>$/;"	a
a:vrml HREF=#d:vrml	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:vrml HREF=#d:vrml>vrml<\/A>$/;"	a
a:vtx HREF=#d:vtx	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:vtx HREF=#d:vtx>vtx<\/A>$/;"	a
a:wbmp HREF=#d:wbmp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:wbmp HREF=#d:wbmp>wbmp<\/A>$/;"	a
a:weight HREF=#d:weight	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:weight HREF=#d:weight>weight<\/A>$/;"	a
a:width HREF=#d:width	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:width HREF=#d:width>width<\/A>$/;"	a
a:xdot HREF=#d:xdot	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<BR><A NAME=a:xdot HREF=#d:xdot>xdot<\/A>$/;"	a
a:xlib HREF=#d:xlib	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^ <TR><TD ALIGN=CENTER><A NAME=a:xlib HREF=#d:xlib>xlib<\/A>$/;"	a
a:z HREF=#d:z	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=a:z HREF=#d:z>z<\/A>$/;"	a
aM	C:\exVim\vim74\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aa:labelloc HREF=#dd:labelloc	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=aa:labelloc HREF=#dd:labelloc>labelloc<\/A>$/;"	a
aa:orientation HREF=#dd:orientation	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^ <TR><TD><A NAME=aa:orientation HREF=#dd:orientation>orientation<\/A>$/;"	a
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc = def$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc == def$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc ===== def$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc =^= def$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc::def$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc:: function$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc::break$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc::do$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc::function$/;"	r
abc	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc::true$/;"	r
accessLevel	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static String accessLevel(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
action	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public Action action;$/;"	f	class:Struts2Configure.MyAction	access:public
action	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public Action action;$/;"	f	class:Struts2Simple.MyAction	access:public
action2List	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction a)
action2List	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction a)
action_table.expand.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:action_table.expand.func(candidate) "{{{$/;"	f
action_table.neosnippet_source.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:action_table.neosnippet_source.func(candidates) "{{{$/;"	f
action_table.preview.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:action_table.preview.func(candidates) "{{{$/;"	f
action_table.unite__new_candidate.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
actionpkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String actionpkg;$/;"	f	class:Struts2Configure	access:default
actionpkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String actionpkg;$/;"	f	class:Struts2Simple	access:default
actions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Configure	access:default
actions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Simple	access:default
actions2vim	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public String actions2vim() {$/;"	m	class:Struts2Configure	access:public	signature:()
actions2vim	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public String actions2vim() {$/;"	m	class:Struts2Simple	access:public	signature:()
activateAll	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
active_tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *active_tooltip;		\/* tooltip of active object - or NULL *\/$/;"	m	struct:GVJ_s	access:public
ada#Completion	C:\exVim\vim74\autoload\ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	C:\exVim\vim74\autoload\ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	C:\exVim\vim74\autoload\ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	C:\exVim\vim74\autoload\ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	C:\exVim\vim74\autoload\ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	C:\exVim\vim74\autoload\ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	C:\exVim\vim74\autoload\ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	C:\exVim\vim74\autoload\ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	C:\exVim\vim74\autoload\ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	C:\exVim\vim74\autoload\ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	C:\exVim\vim74\autoload\ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	C:\exVim\vim74\autoload\ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	C:\exVim\vim74\autoload\ada.vim	/^function ada#Word (...)$/;"	f
adacomplete#Complete	C:\exVim\vim74\autoload\adacomplete.vim	/^function! adacomplete#Complete (findstart, base)$/;"	f
add	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def add(file,uri=nil) $/;"	f	class:Vjde.VjdeProjectTlds
addClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected void addClass(String qualifiedName) {$/;"	m	class:ClassPathEntry	access:protected	signature:(String qualifiedName)
addRecursively	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    void addRecursively(File directory, File rootDir) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory, File rootDir)
add_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def add_attr(a)$/;"	f	class:Vjde.TagElement
add_file	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def add_file(t)$/;"	f	class:Vjde.VjdeTemplateManager
add_methods	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_new_timeout	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void add_new_timeout()$/;"	f	signature:()
add_new_timeout	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void add_new_timeout();$/;"	p	file:	signature:()
add_para	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def add_para(n,d) $/;"	f	class:Vjde.VjdeTemplate
add_pars	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def add_pars(p)$/;"	f	class:Vjde.TagElement
add_snippet_attribute	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! s:add_snippet_attribute(snippets_file, line, linenr, snippet_dict) "{{{$/;"	f
add_value	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def add_value(v)$/;"	f	class:Vjde.AttributeElement
address	C:\exVim\graphviz\include\graphviz\gvcext.h	/^	void* address;$/;"	m	struct:__anon14	access:public
address	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} address;$/;"	m	struct:__anon75	typeref:struct:__anon75::__anon76	access:public
addtomrufs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
adjacent	C:\exVim\graphviz\include\graphviz\types.h	/^	char adjacent;          \/* true for flat edge with adjacent nodes *\/$/;"	m	struct:Agedgeinfo_t	access:public
adjmatrix_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct adjmatrix_t {$/;"	s
adjmatrix_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } adjmatrix_t;$/;"	t	typeref:struct:adjmatrix_t
adjmatrix_t::data	C:\exVim\graphviz\include\graphviz\types.h	/^	char *data;$/;"	m	struct:adjmatrix_t	access:public
adjmatrix_t::ncols	C:\exVim\graphviz\include\graphviz\types.h	/^	int nrows, ncols;$/;"	m	struct:adjmatrix_t	access:public
adjmatrix_t::nrows	C:\exVim\graphviz\include\graphviz\types.h	/^	int nrows, ncols;$/;"	m	struct:adjmatrix_t	access:public
adjust_screen	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
afold	C:\exVim\vim74\syntax\2html.vim	/^	  let afold.firstline = g:html_start_line$/;"	v
afold	C:\exVim\vim74\syntax\2html.vim	/^	let afold.firstline = g:html_start_line$/;"	v
afold	C:\exVim\vim74\syntax\2html.vim	/^      let afold.level -= leveladjust$/;"	v
afread	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*afread) (void *chan, char *buf, int bufsize);$/;"	m	struct:Agiodisc_s	access:public
after_colors_script	C:\exVim\vimfiles\bundle\ex-aftercolors\plugin\AfterColors.vim	/^function! s:after_colors_script()$/;"	f
ag_xget	C:\exVim\graphviz\include\graphviz\types.h	562;"	d
agalloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void *agalloc(Agraph_t * g, size_t size);$/;"	p	signature:(Agraph_t * g, size_t size)
agattr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agsym_t *agattr(Agraph_t * g, int kind, char *name, char *value);$/;"	p	signature:(Agraph_t * g, int kind, char *name, char *value)
agattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agattr(void *, char *, char *);$/;"	p	signature:(void *, char *, char *)
agattrsym	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agsym_t *agattrsym(void *obj, char *name);$/;"	p	signature:(void *obj, char *name)
agbindrec	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void *agbindrec(void *obj, char *name, unsigned int size,$/;"	p	signature:(void *obj, char *name, unsigned int size, int move_to_front)
agcallbacks	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agcallbacks(Agraph_t * g, int flag);	\/* return prev value *\/$/;"	p	signature:(Agraph_t * g, int flag)
agcanon	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agcanon(char *, int);$/;"	p	signature:(char *, int)
agcanon	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agcanon(char *);$/;"	p	signature:(char *)
agcanonStr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agcanonStr(char *str);  \/* manages its own buf *\/$/;"	p	signature:(char *str)
agcanonical	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agcanonical(char *);$/;"	p	signature:(char *)
agclean	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agclean(Agraph_t * g, int kind, char *rec_name);$/;"	p	signature:(Agraph_t * g, int kind, char *rec_name)
agclose	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agclose(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agclose	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agclose(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agconcat	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agconcat(Agraph_t * g, void *chan, Agdisc_t * disc);$/;"	p	signature:(Agraph_t * g, void *chan, Agdisc_t * disc)
agcontains	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agcontains(Agraph_t *, void *);$/;"	p	signature:(Agraph_t *, void *)
agcontains	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agcontains(Agraph_t *, void *);$/;"	p	signature:(Agraph_t *, void *)
agcopyattr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int      agcopyattr(void *oldobj, void *newobj);$/;"	p	signature:(void *oldobj, void *newobj)
agcopyattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int      agcopyattr(void *, void *);	$/;"	p	signature:(void *, void *)
agcountuniqedges	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agcountuniqedges(Agraph_t * g, Agnode_t * n, int in, int out);$/;"	p	signature:(Agraph_t * g, Agnode_t * n, int in, int out)
agdegree	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agdegree(Agraph_t * g, Agnode_t * n, int in, int out);$/;"	p	signature:(Agraph_t * g, Agnode_t * n, int in, int out)
agdeledge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agdeledge(Agraph_t * g, Agedge_t * arg_e);$/;"	p	signature:(Agraph_t * g, Agedge_t * arg_e)
agdelete	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agdelete(Agraph_t * g, void *obj);$/;"	p	signature:(Agraph_t * g, void *obj)
agdelete	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agdelete(Agraph_t *, void *);$/;"	p	signature:(Agraph_t *, void *)
agdelnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agdelnode(Agraph_t * g, Agnode_t * arg_n);$/;"	p	signature:(Agraph_t * g, Agnode_t * arg_n)
agdelrec	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agdelrec(void *obj, char *name);$/;"	p	signature:(void *obj, char *name)
agdelsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern long agdelsubg(Agraph_t * g, Agraph_t * sub);	\/* could be agclose *\/$/;"	p	signature:(Agraph_t * g, Agraph_t * sub)
agedge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agedge(Agraph_t * g, Agnode_t * t, Agnode_t * h,$/;"	p	signature:(Agraph_t * g, Agnode_t * t, Agnode_t * h, char *name, int createflag)
agedge	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agedge(Agraph_t *, Agnode_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *, Agnode_t *)
agedgeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agedgeattr(Agraph_t *, char *, char *);$/;"	p	signature:(Agraph_t *, char *, char *)
ageqedge	C:\exVim\graphviz\include\graphviz\cgraph.h	412;"	d
agerr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agerr(agerrlevel_t level, const char *fmt, ...);$/;"	p	signature:(agerrlevel_t level, const char *fmt, ...)
agerr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agerr(agerrlevel_t level, char *fmt, ...);$/;"	p	signature:(agerrlevel_t level, char *fmt, ...)
agerrlevel_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	t	typeref:enum:__anon5
agerrlevel_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGWARN, AGERR, AGMAX, AGPREV } agerrlevel_t;$/;"	t	typeref:enum:__anon11
agerrorf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agerrorf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
agerrorf	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agerrorf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
agerrors	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agerrors(void);$/;"	p	signature:(void)
agerrors	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agerrors(void);$/;"	p	signature:(void)
agfindattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agfindattr(void *, char *);$/;"	p	signature:(void *, char *)
agfindedge	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agfindedge(Agraph_t *, Agnode_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *, Agnode_t *)
agfindedge	C:\exVim\graphviz\include\graphviz\types.h	564;"	d
agfindedgeattr	C:\exVim\graphviz\include\graphviz\types.h	568;"	d
agfindgraphattr	C:\exVim\graphviz\include\graphviz\types.h	566;"	d
agfindnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agfindnode(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agfindnode	C:\exVim\graphviz\include\graphviz\types.h	565;"	d
agfindnodeattr	C:\exVim\graphviz\include\graphviz\types.h	567;"	d
agfindsubg	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agfindsubg(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agflatten	C:\exVim\graphviz\include\graphviz\cgraph.h	/^void agflatten(Agraph_t * g, int flag);$/;"	p	signature:(Agraph_t * g, int flag)
agfree	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agfree(Agraph_t * g, void *ptr);$/;"	p	signature:(Agraph_t * g, void *ptr)
agfstattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agfstattr(void *);$/;"	p	signature:(void *)
agfstedge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agfstedge(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agfstedge	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agfstedge(Agraph_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *)
agfstin	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agfstin(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agfstin	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agfstin(Agraph_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *)
agfstnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agfstnode(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agfstnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agfstnode(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agfstout	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agfstout(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agfstout	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agfstout(Agraph_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *)
agfstsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agfstsubg(Agraph_t * g), *agnxtsubg(Agraph_t * subg);$/;"	p	signature:(Agraph_t * g)
agget	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agget(void *obj, char *name);$/;"	p	signature:(void *obj, char *name)
agget	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agget(void *, char *);$/;"	p	signature:(void *, char *)
aggetrec	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agrec_t *aggetrec(void *obj, char *name, int move_to_front);$/;"	p	signature:(void *obj, char *name, int move_to_front)
aghead	C:\exVim\graphviz\include\graphviz\cgraph.h	410;"	d
agheap	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern struct _vmalloc_s *agheap(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
aghtmlstr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int aghtmlstr(char *);$/;"	p	signature:(char *)
aghtmlstr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int aghtmlstr(char *s);$/;"	p	signature:(char *s)
agidedge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agidedge(Agraph_t * g, Agnode_t * t, Agnode_t * h,$/;"	p	signature:(Agraph_t * g, Agnode_t * t, Agnode_t * h, unsigned long id, int createflag)
agidnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agidnode(Agraph_t * g, unsigned long id, int createflag);$/;"	p	signature:(Agraph_t * g, unsigned long id, int createflag)
agidsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agidsubg(Agraph_t * g, unsigned long id, int cflag);	\/* constructor *\/$/;"	p	signature:(Agraph_t * g, unsigned long id, int cflag)
agindex	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agindex(void *, char *);$/;"	p	signature:(void *, char *)
aginit	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void aginit(Agraph_t * g, int kind, char *rec_name, int rec_size,$/;"	p	signature:(Agraph_t * g, int kind, char *rec_name, int rec_size, int move_to_front)
aginit	C:\exVim\graphviz\include\graphviz\graph.h	61;"	d
aginitlib	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void aginitlib(int, int, int);$/;"	p	signature:(int, int, int)
aginsert	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void aginsert(Agraph_t *, void *);$/;"	p	signature:(Agraph_t *, void *)
aginternalmapclearlocalnames	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void aginternalmapclearlocalnames(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agisdirected	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agisdirected(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agissimple	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agissimple(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agisstrict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agisstrict(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agisundirected	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agisundirected(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
aglasterr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *aglasterr(void);$/;"	p	signature:(void)
aglasterr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *aglasterr(void);$/;"	p	signature:(void)
aglstattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *aglstattr(void *);$/;"	p	signature:(void *)
aglstnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *aglstnode(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
aglstnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *aglstnode(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agmemread	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agmemread(const char *cp);$/;"	p	signature:(const char *cp)
agmemread	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agmemread(char *);$/;"	p	signature:(char *)
agmetanode	C:\exVim\graphviz\include\graphviz\graph.h	227;"	d
agnameof	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agnameof(void *);$/;"	p	signature:(void *)
agnedges	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agnnodes(Agraph_t * g), agnedges(Agraph_t * g), agnsubg(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agnedges	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agnedges(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agnew	C:\exVim\graphviz\include\graphviz\cgraph.h	385;"	d
agnnew	C:\exVim\graphviz\include\graphviz\cgraph.h	386;"	d
agnnodes	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agnnodes(Agraph_t * g), agnedges(Agraph_t * g), agnsubg(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agnnodes	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agnnodes(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agnode(Agraph_t * g, char *name, int createflag);$/;"	p	signature:(Agraph_t * g, char *name, int createflag)
agnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agnode(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agnodeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agnodeattr(Agraph_t *, char *, char *);$/;"	p	signature:(Agraph_t *, char *, char *)
agnsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agnnodes(Agraph_t * g), agnedges(Agraph_t * g), agnsubg(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agnxtattr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agsym_t *agnxtattr(Agraph_t * g, int kind, Agsym_t * attr);$/;"	p	signature:(Agraph_t * g, int kind, Agsym_t * attr)
agnxtattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agnxtattr(void *, Agsym_t *);$/;"	p	signature:(void *, Agsym_t *)
agnxtedge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agnxtedge(Agraph_t * g, Agedge_t * e, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agedge_t * e, Agnode_t * n)
agnxtedge	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agnxtedge(Agraph_t *, Agedge_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agedge_t *, Agnode_t *)
agnxtin	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agnxtin(Agraph_t * g, Agedge_t * e);$/;"	p	signature:(Agraph_t * g, Agedge_t * e)
agnxtin	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agnxtin(Agraph_t *, Agedge_t *);$/;"	p	signature:(Agraph_t *, Agedge_t *)
agnxtnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agnxtnode(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agnxtnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agnxtnode(Agraph_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *)
agnxtout	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agnxtout(Agraph_t * g, Agedge_t * e);$/;"	p	signature:(Agraph_t * g, Agedge_t * e)
agnxtout	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agnxtout(Agraph_t *, Agedge_t *);$/;"	p	signature:(Agraph_t *, Agedge_t *)
agnxtsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agfstsubg(Agraph_t * g), *agnxtsubg(Agraph_t * subg);$/;"	p	signature:(Agraph_t * subg)
agobjfn_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef void (*agobjfn_t) (Agraph_t * g, Agobj_t * obj, void *arg);$/;"	t
agobjkind	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agobjkind(void *);$/;"	p	signature:(void *)
agobjkind	C:\exVim\graphviz\include\graphviz\graph.h	225;"	d
agobjkind_t	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef enum { AGNODE = 1, AGEDGE, AGGRAPH } agobjkind_t;$/;"	t	typeref:enum:__anon12
agobjupdfn_t	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef void (*agobjupdfn_t) (Agraph_t * g, Agobj_t * obj, void *arg,$/;"	t
agopen	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agopen(char *name, Agdesc_t desc, Agdisc_t * disc);$/;"	p	signature:(char *name, Agdesc_t desc, Agdisc_t * disc)
agopen	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agopen(char *, int);$/;"	p	signature:(char *, int)
agopp	C:\exVim\graphviz\include\graphviz\cgraph.h	411;"	d
agparent	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agparent(Agraph_t * g);$/;"	p	signature:(Agraph_t * g)
agpopdisc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agpopdisc(Agraph_t * g, Agcbdisc_t * disc);$/;"	p	signature:(Agraph_t * g, Agcbdisc_t * disc)
agprotoedge	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agedge_t *agprotoedge(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agprotograph	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agprotograph(void);$/;"	p	signature:(void)
agprotonode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agprotonode(Agraph_t *);$/;"	p	signature:(Agraph_t *)
agprvattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agprvattr(void *, Agsym_t *);$/;"	p	signature:(void *, Agsym_t *)
agprvnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agprvnode(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agprvnode	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agnode_t *agprvnode(Agraph_t *, Agnode_t *);$/;"	p	signature:(Agraph_t *, Agnode_t *)
agpushdisc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agpushdisc(Agraph_t * g, Agcbdisc_t * disc, void *state);$/;"	p	signature:(Agraph_t * g, Agcbdisc_t * disc, void *state)
agputc	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agputc(int c, FILE *fp);$/;"	p	signature:(int c, FILE *fp)
agputs	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agputs(const char *s, FILE *fp);$/;"	p	signature:(const char *s, FILE *fp)
agraphattr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agsym_t *agraphattr(Agraph_t *, char *, char *);$/;"	p	signature:(Agraph_t *, char *, char *)
agraphof	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agraphof(void* obj);$/;"	p	signature:(void* obj)
agread	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agread(void *chan, Agdisc_t * disc);$/;"	p	signature:(void *chan, Agdisc_t * disc)
agread	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agread(FILE *);$/;"	p	signature:(FILE *)
agread_usergets	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agread_usergets(FILE *, gets_f);$/;"	p	signature:(FILE *, gets_f)
agreadline	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agreadline(int);$/;"	p	signature:(int)
agreadline	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agreadline(int);$/;"	p	signature:(int)
agrealloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void *agrealloc(Agraph_t * g, void *ptr, size_t oldsize,$/;"	p	signature:(Agraph_t * g, void *ptr, size_t oldsize, size_t size)
agrelabel	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agrelabel(void *obj, char *name);	\/* scary *\/$/;"	p	signature:(void *obj, char *name)
agrelabel_node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agrelabel_node(Agnode_t * n, char *newname);$/;"	p	signature:(Agnode_t * n, char *newname)
agreseterrors	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agreseterrors(void);$/;"	p	signature:(void)
agroot	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agroot(void* obj);$/;"	p	signature:(void* obj)
agsafeset	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agsafeset(void* obj, char* name, char* value, char* def);$/;"	p	signature:(void* obj, char* name, char* value, char* def)
agsafeset	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agsafeset(void *, char *, char *, char*);$/;"	p	signature:(void *, char *, char *, char*)
agset	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agset(void *obj, char *name, char *value);$/;"	p	signature:(void *obj, char *name, char *value)
agset	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agset(void *, char *, char *);$/;"	p	signature:(void *, char *, char *)
agseterr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern agerrlevel_t agseterr(agerrlevel_t);$/;"	p	signature:(agerrlevel_t)
agseterr	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agseterr(agerrlevel_t);$/;"	p	signature:(agerrlevel_t)
agseterrf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern agusererrf agseterrf(agusererrf);$/;"	p	signature:(agusererrf)
agsetfile	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agsetfile(char *);$/;"	p	signature:(char *)
agsetfile	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agsetfile(char *);$/;"	p	signature:(char *)
agsetiodisc	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agsetiodisc($/;"	p	signature:( char * (*myfgets) (char *s, int size, FILE *stream), size_t (*myfwrite) (const void *ptr, size_t size, size_t nmemb, FILE *stream), int (*myferror) (FILE *stream) )
agstrbind	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agstrbind(Agraph_t * g, char *);$/;"	p	signature:(Agraph_t * g, char *)
agstrcanon	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agstrcanon(char *, char *);$/;"	p	signature:(char *, char *)
agstrcanon	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agstrcanon(char *, char *);$/;"	p	signature:(char *, char *)
agstrdup	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agstrdup(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agstrdup	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agstrdup(char *);$/;"	p	signature:(char *)
agstrdup_html	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agstrdup_html(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agstrdup_html	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agstrdup_html(char *s);$/;"	p	signature:(char *s)
agstrfree	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agstrfree(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agstrfree	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agstrfree(char *);$/;"	p	signature:(char *)
agsubedge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agedge_t *agsubedge(Agraph_t * g, Agedge_t * e, int createflag);$/;"	p	signature:(Agraph_t * g, Agedge_t * e, int createflag)
agsubg	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agraph_t *agsubg(Agraph_t * g, char *name, int cflag);	\/* constructor *\/$/;"	p	signature:(Agraph_t * g, char *name, int cflag)
agsubg	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agsubg(Agraph_t *, char *);$/;"	p	signature:(Agraph_t *, char *)
agsubnode	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agnode_t *agsubnode(Agraph_t * g, Agnode_t * n, int createflag);$/;"	p	signature:(Agraph_t * g, Agnode_t * n, int createflag)
agsubrep	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern Agsubnode_t *agsubrep(Agraph_t * g, Agnode_t * n);$/;"	p	signature:(Agraph_t * g, Agnode_t * n)
agtail	C:\exVim\graphviz\include\graphviz\cgraph.h	409;"	d
agusererrf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^typedef int (*agusererrf) (char*);$/;"	t
agusergraph	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern Agraph_t *agusergraph(Agnode_t *);$/;"	p	signature:(Agnode_t *)
agwarningf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern void agwarningf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
agwarningf	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern void agwarningf(char *fmt, ...);$/;"	p	signature:(char *fmt, ...)
agwrite	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agwrite(Agraph_t * g, void *chan);$/;"	p	signature:(Agraph_t * g, void *chan)
agwrite	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agwrite(Agraph_t *, FILE *);$/;"	p	signature:(Agraph_t *, FILE *)
agxget	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern char *agxget(void *obj, Agsym_t * sym);$/;"	p	signature:(void *obj, Agsym_t * sym)
agxget	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern char *agxget(void *, int);$/;"	p	signature:(void *, int)
agxset	C:\exVim\graphviz\include\graphviz\cgraph.h	/^extern int agxset(void *obj, Agsym_t * sym, char *value);$/;"	p	signature:(void *obj, Agsym_t * sym, char *value)
agxset	C:\exVim\graphviz\include\graphviz\graph.h	/^    extern int agxset(void *, int, char *);$/;"	p	signature:(void *, int, char *)
alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agedgeinfo_t	access:public
alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agnodeinfo_t	access:public
alg	C:\exVim\graphviz\include\graphviz\types.h	/^	void *alg;$/;"	m	struct:Agraphinfo_t	access:public
aliens	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^function aliens(obj){$/;"	r
align	C:\exVim\graphviz\include\graphviz\xdot.h	/^  xdot_align align;$/;"	m	struct:__anon56	access:public
all	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:all(f, xs) abort$/;"	f
all	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:all(f, xs) abort$/;"	f
all	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:all(f, xs) abort$/;"	f
alloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    long (*alloc) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
alloc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*alloc) (void *state, size_t req);$/;"	m	struct:Agmemdisc_s	access:public
alloc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int alloc;$/;"	m	struct:gv_argvlist_s	access:public
alloc_elist	C:\exVim\graphviz\include\graphviz\types.h	263;"	d
allsteps	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! s:allsteps()$/;"	f
am	C:\exVim\vim74\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
an	C:\exVim\graphviz\include\graphviz\types.h	/^	int an;			\/* globally allocated number of nodes   *\/$/;"	m	struct:rank_t	access:public
and	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:and(xs) abort$/;"	f
and	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:and(xs) abort$/;"	f
and	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:and(xs) abort$/;"	f
annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl	access:public	signature:()
annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl	access:public	signature:()
annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl2	access:public	signature:()
annotationType	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl2	access:public	signature:()
answer	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^            answer = get_yesno('Overwrite existing backup "%s" [Y\/n]? ' %$/;"	v
any	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:any(f, xs) abort$/;"	f
any	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:any(f, xs) abort$/;"	f
any	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:any(f, xs) abort$/;"	f
api	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	api_t api;$/;"	m	struct:__anon27	access:public
api_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef enum { APIS _DUMMY_ELEM_=0 } api_t; \/* API_render, API_layout, ... *\/$/;"	t	typeref:enum:__anon13
apis	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	gvplugin_api_t *apis;$/;"	m	struct:__anon28	access:public
apps_dir_from_src	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
arg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^        arg = match[1]$/;"	r
arg	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^      arg = match[1];$/;"	r
argc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int argc;$/;"	m	struct:gv_argvlist_s	access:public
argmaps	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^args = args.filter (arg) ->$/;"	r
args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^args = process.argv.slice(1)$/;"	r
args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  args = args.filter(function(arg) {$/;"	r
args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  args = process.argv.slice(1);$/;"	r
args	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  var args, fs, less, options, parser;$/;"	r
argv	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **argv;$/;"	m	struct:gv_argvlist_s	access:public
argv	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^from sys import argv, exit$/;"	i
argv	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\compile.py	/^from sys import argv, exit$/;"	i
as_key_config	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
as_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:as_keymapping(key)$/;"	f
aspect	C:\exVim\graphviz\include\graphviz\pack.h	/^	float aspect;		\/* desired aspect ratio *\/$/;"	m	struct:__anon32	access:public
async_load	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
at	C:\exVim\vim74\syntax\sed.vim	/^let __at = char2nr("@")$/;"	v
at	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:at(str)$/;"	f
attach_attrs	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern void attach_attrs(graph_t *g);$/;"	p	signature:(graph_t *g)
attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agedge_t	access:public
attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agnode_t	access:public
attr	C:\exVim\graphviz\include\graphviz\graph.h	/^	char **attr;$/;"	m	struct:Agraph_t	access:public
attrsym_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agsym_s attrsym_t;$/;"	t	typeref:struct:Agsym_s
attrwf	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned attrwf:1;		\/* attrs written (parity, write.c) *\/$/;"	m	struct:Agtag_s	access:public
author	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *author;$/;"	m	struct:sTagFile::__anon67	file:	access:public
author	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *author;$/;"	m	struct:__anon70::__anon73	access:public
auto_outfile_names	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	boolean config, auto_outfile_names;$/;"	m	struct:GVCOMMON_s	access:public
autocmds	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:autocmds()$/;"	f
av	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **av;		\/* allocated list of nodes in rank  *\/$/;"	m	struct:rank_t	access:public
b	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
b	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t a, b;$/;"	m	struct:Pedge_t	access:public
b	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf b;			\/* its placement in node's coordinates *\/$/;"	m	struct:field_t	access:public
b	C:\exVim\vim74\macros\less.vim	/^noremap <script> b <C-B><SID>L$/;"	m
b	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b:	C:\exVim\vim74\syntax\liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:	C:\exVim\vim74\syntax\markdown.vim	/^    let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:InPHPcode	C:\exVim\vim74\indent\php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	C:\exVim\vim74\indent\php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	C:\exVim\vim74\indent\php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	C:\exVim\vim74\indent\php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	C:\exVim\vim74\indent\php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	C:\exVim\vim74\indent\php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	C:\exVim\vim74\indent\php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	C:\exVim\vim74\indent\php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	C:\exVim\vim74\indent\php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	C:\exVim\vim74\indent\php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	C:\exVim\vim74\indent\php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentSLComments	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_outdentSLComments = 0$/;"	v
b:PHP_outdentSLComments	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_outdentSLComments = PHP_outdentSLComments * &sw$/;"	v
b:PHP_outdentphpescape	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	C:\exVim\vim74\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:UserIsTypingComment	C:\exVim\vim74\indent\php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:autohotkey_syntax_sync_minlines	C:\exVim\vim74\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = 50$/;"	v
b:autohotkey_syntax_sync_minlines	C:\exVim\vim74\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = g:autohotkey_syntax_sync_minlines$/;"	v
b:bdf_minlines	C:\exVim\vim74\syntax\bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	C:\exVim\vim74\syntax\bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\c.vim	/^    let b:browsefilter = "C Source Files (*.c)\\t*.c\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\c.vim	/^    let b:browsefilter = "C++ Source Files (*.cpp *.c++)\\t*.cpp;*.c++\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\c.vim	/^    let b:browsefilter = "Ch Source Files (*.ch *.chf)\\t*.ch;*.chf\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\csh.vim	/^    let  b:browsefilter="csh Scripts (*.csh)\\t*.csh\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\ishd.vim	/^    let b:browsefilter = "InstallShield Files (*.rul)\\t*.rul\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\msmessages.vim	/^  let b:browsefilter = "MS Message Files (*.mc)\\t*.mc\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\perl6.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\php.vim	/^    let  b:browsefilter="PHP Files (*.php)\\t*.php\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\python.vim	/^    let b:browsefilter = "Python Files (*.py)\\t*.py\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\r.vim	/^  let b:browsefilter = "R Source Files (*.R)\\t*.R\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\registry.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\rhelp.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\sgml.vim	/^    let  b:browsefilter="SGML Files (*.sgml,*.sgm)\\t*.sgm*\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\sh.vim	/^    let  b:browsefilter="Bourne Shell Scripts (*.sh)\\t*.sh\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\svg.vim	/^    let  b:browsefilter="SVG Files (*.svg)\\t*.svg\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\tcsh.vim	/^    let  b:browsefilter="tcsh Scripts (*.tcsh)\\t*.tcsh\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\xml.vim	/^    let  b:browsefilter="XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\ftplugin\xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	C:\exVim\vim74\syntax\lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:browsefilter	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^  let  b:browsefilter="M-files (*.m)\\t*.m\\n" .$/;"	v
b:browsefilter	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	C:\exVim\vim74\syntax\lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	C:\exVim\vim74\ftplugin\sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	C:\exVim\vim74\ftplugin\sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	C:\exVim\vim74\ftplugin\sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_skip_back	C:\exVim\vim74\ftplugin\sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	C:\exVim\vim74\ftplugin\sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:cucumber_root	C:\exVim\vim74\ftplugin\cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_ftplugin	C:\exVim\vim74\ftplugin\sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	C:\exVim\vim74\indent\sqlanywhere.vim	/^let b:current_indent = "sqlanywhere"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aflex.vim	/^let b:current_syntax = "aflex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\amiga.vim	/^let b:current_syntax = "amiga"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\antlr.vim	/^let b:current_syntax = "antlr"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asm.vim	/^let b:current_syntax = "asm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asm68k.vim	/^let b:current_syntax = "asm68k"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asmh8300.vim	/^let b:current_syntax = "asmh8300"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	C:\exVim\vim74\syntax\asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\autohotkey.vim	/^let b:current_syntax = "autohotkey"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\automake.vim	/^let b:current_syntax = "automake"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ayacc.vim	/^let b:current_syntax = "ayacc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\baan.vim	/^let b:current_syntax = "baan"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\btm.vim	/^let b:current_syntax = "btm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cf.vim	/^let b:current_syntax = "cf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\change.vim	/^let b:current_syntax = "change"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\changelog.vim	/^let b:current_syntax = "changelog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cheetah.vim	/^let b:current_syntax = "cheetah"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\clipper.vim	/^let b:current_syntax = "clipper"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\context.vim	/^let b:current_syntax = "context"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cs.vim	/^let b:current_syntax = "cs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\csh.vim	/^let b:current_syntax = "csh"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cweb.vim	/^let b:current_syntax = "cweb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cynlib.vim	/^let b:current_syntax = "cynlib"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dcl.vim	/^let b:current_syntax = "dcl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\debchangelog.vim	/^let b:current_syntax = "debchangelog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\debcontrol.vim	/^let b:current_syntax = "debcontrol"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\debsources.vim	/^let b:current_syntax = "debsources"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dirpager.vim	/^let b:current_syntax = "dirpager"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\diva.vim	/^let b:current_syntax = "diva"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\docbk.vim	/^let b:current_syntax = "docbk"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\doxygen.vim	/^    let b:current_syntax = "doxygen"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\doxygen.vim	/^    let b:current_syntax = b:current_syntax.'.doxygen'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\doxygen.vim	/^    let b:current_syntax=b:doxygen_syntax_save$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dtml.vim	/^let b:current_syntax = "dtml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dtrace.vim	/^let b:current_syntax = "dtrace"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\eiffel.vim	/^let b:current_syntax = "eiffel"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\euphoria3.vim	/^let b:current_syntax = "euphoria3"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\euphoria4.vim	/^let b:current_syntax = "euphoria4"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\eviews.vim	/^let b:current_syntax="eviews"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fasm.vim	/^let b:current_syntax = "fasm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fdcc.vim	/^let b:current_syntax = "fdcc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\flexwiki.vim	/^let b:current_syntax="FlexWiki"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\form.vim	/^  let b:current_syntax = "form"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\foxpro.vim	/^let b:current_syntax = "foxpro"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\fvwm2m4.vim	/^let b:current_syntax = 'fvwm2m4'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\go.vim	/^let b:current_syntax = 'go'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\godoc.vim	/^let b:current_syntax = 'godoc'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gprof.vim	/^let b:current_syntax = "gprof"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\htmlcheetah.vim	/^let b:current_syntax = "htmlcheetah"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\htmlos.vim	/^let b:current_syntax = "htmlos"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ia64.vim	/^let b:current_syntax = "ia64"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\idl.vim	/^  let b:current_syntax = "idl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\idlang.vim	/^let b:current_syntax = "idlang"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\initex.vim	/^let b:current_syntax = "initex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ishd.vim	/^let b:current_syntax = "ishd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\j.vim	/^let b:current_syntax = 'j'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jargon.vim	/^let b:current_syntax = "jargon"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ldapconf.vim	/^let b:current_syntax = "ldapconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lscript.vim	/^let b:current_syntax = "lscript"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\man.vim	/^let b:current_syntax = "man"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\masm.vim	/^let b:current_syntax = "masm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\maxima.vim	/^let b:current_syntax = "maxima"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mix.vim	/^let b:current_syntax = "mix"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mmix.vim	/^let b:current_syntax = "mmix"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\model.vim	/^let b:current_syntax = "model"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\modsim3.vim	/^let b:current_syntax = "modsim3"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\msmessages.vim	/^let b:current_syntax = "msmessages"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nasm.vim	/^let b:current_syntax = "nasm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nastran.vim	/^let b:current_syntax = "nastran"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\netrw.vim	/^let   b:current_syntax = "netrwlist"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\objc.vim	/^let b:current_syntax = "objc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\objcpp.vim	/^let b:current_syntax = "objcpp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pcap.vim	/^let b:current_syntax = "pcap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\perl6.vim	/^let b:current_syntax = "perl6"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\plaintex.vim	/^let b:current_syntax = "plaintex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pli.vim	/^let b:current_syntax = "pl1"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\prescribe.vim	/^let b:current_syntax = "prescribe"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\progress.vim	/^let b:current_syntax = "progress"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ptcap.vim	/^let b:current_syntax = "ptcap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\purifylog.vim	/^let b:current_syntax = "purifylog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\qf.vim	/^let b:current_syntax = "qf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\r.vim	/^let b:current_syntax="r"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\racc.vim	/^let b:current_syntax = "racc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rcslog.vim	/^let b:current_syntax = "rcslog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rebol.vim	/^let b:current_syntax = "rebol"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\redif.vim	/^let b:current_syntax="redif"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\registry.vim	/^let b:current_syntax = "registry"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rng.vim	/^let b:current_syntax = 'rng'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\scheme.vim	/^let b:current_syntax = "scheme"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sgml.vim	/^let b:current_syntax = "sgml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sgmldecl.vim	/^let b:current_syntax = "sgmldecl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sgmllnx.vim	/^let b:current_syntax = "sgmllnx"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sh.vim	/^ let b:current_syntax = "bash"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sh.vim	/^ let b:current_syntax = "ksh"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sh.vim	/^ let b:current_syntax = "sh"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sicad.vim	/^let b:current_syntax = "sicad"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sindacmp.vim	/^let b:current_syntax = "sindacmp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sindaout.vim	/^let b:current_syntax = "sindaout"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sl.vim	/^let b:current_syntax = "sl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\smil.vim	/^let b:current_syntax = "smil"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\snnsnet.vim	/^let b:current_syntax = "snnsnet"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\snnspat.vim	/^let b:current_syntax = "snnspat"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\snnsres.vim	/^let b:current_syntax = "snnsres"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\specman.vim	/^let b:current_syntax = "specman"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\splint.vim	/^let b:current_syntax = "splint"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqlanywhere.vim	/^let b:current_syntax = "sqlanywhere"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqlforms.vim	/^let b:current_syntax = "sqlforms"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqlhana.vim	/^let b:current_syntax = "sqlhana"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqlinformix.vim	/^let b:current_syntax = "sqlinformix"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\strace.vim	/^let b:current_syntax = "strace"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\takcmp.vim	/^let b:current_syntax = "takcmp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\takout.vim	/^let b:current_syntax = "takout"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tcsh.vim	/^let b:current_syntax = 'tcsh'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tpp.vim	/^let b:current_syntax = "tpp"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\udevrules.vim	/^let b:current_syntax = "udevrules"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\valgrind.vim	/^let b:current_syntax = "valgrind"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\virata.vim	/^let b:current_syntax = "virata"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\vsejcl.vim	/^let b:current_syntax = "vsejcl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wdiff.vim	/^let b:current_syntax = "wdiff"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\web.vim	/^let b:current_syntax = "web"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xbl.vim	/^let b:current_syntax = "xbl"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xkb.vim	/^let b:current_syntax = "xkb"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\xxd.vim	/^let b:current_syntax = "xxd"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
b:current_syntax	C:\exVim\vim74\syntax\zsh.vim	/^let b:current_syntax = "zsh"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\cs.vim	/^let b:current_syntax = "cs"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\after\syntax\vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-config\syntax\shader.vim	/^let b:current_syntax = "shader"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-cscope\syntax\excscope.vim	/^let b:current_syntax = "excscope"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-gsearch\syntax\exgsearch.vim	/^let b:current_syntax = "exgsearch"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-project\syntax\exproject.vim	/^let b:current_syntax = "exproject"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-qfix\syntax\exqfix.vim	/^let b:current_syntax = "exqfix"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-symbol\syntax\exsymbol.vim	/^let b:current_syntax = "exsymbol"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-tags\syntax\extags.vim	/^let b:current_syntax = "extags"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-typescript\syntax\typescript.vim	/^let b:current_syntax = "typeScript"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\ex-vimentry\syntax\vimentry.vim	/^let b:current_syntax = "vimentry"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\indentLine\after\syntax\sass.vim	/^let b:current_syntax = "fixed_sass"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let b:current_syntax = "fixed_yaml"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\neosnippet.vim\syntax\neosnippet.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-coffee-script\syntax\coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-less\after\syntax\html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-less\syntax\less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-matlab\syntax\matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	C:\exVim\vimfiles\bundle\vim-stylus\syntax\stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:curret_syntax	C:\exVim\vim74\syntax\tasm.vim	/^let b:curret_syntax = "tasm"$/;"	v
b:dc_next_index	C:\exVim\vim74\syntax\dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\abap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\c.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\changelog.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\context.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\csh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\dtrace.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\erlang.vim	/^	let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\flexwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\gprof.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\haskell.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\initex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ishd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\j.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\javascript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\json.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\lua.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\man.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\msmessages.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\perl6.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\php.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\python.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\r.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\racc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\registry.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rhelp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rrst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sgml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\svg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\tcsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\text.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\udevrules.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\vim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\vroom.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vim74\ftplugin\zsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vimfiles\bundle\Vundle.vim\ftplugin\vundlelog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vimfiles\bundle\vim-coffee-script\ftplugin\coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vimfiles\bundle\vim-less\ftplugin\less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	C:\exVim\vim74\indent\awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\c.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\changelog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cpp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\dtrace.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\eiffel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\idlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ishd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\j.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\mma.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\objc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\perl6.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\r.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rhelp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rmd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rnoweb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rrst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\sh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\sqlanywhere.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\systemverilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\tcsh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\vim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\vroom.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\xml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\yaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\indent\zimbu.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vim74\syntax\spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\vim-markdown\indent\markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\vim-matlab\indent\matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	C:\exVim\vimfiles\bundle\vim-stylus\indent\stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_javacom	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:did_javacom = 1$/;"	v
b:dnsmasq_backrgound_light	C:\exVim\vim74\syntax\dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	C:\exVim\vim74\syntax\dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:docbk_type	C:\exVim\vim74\ftplugin\docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	C:\exVim\vim74\ftplugin\docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	C:\exVim\vim74\syntax\docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	C:\exVim\vim74\syntax\docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	C:\exVim\vim74\syntax\docbksgml.vim	/^let b:docbk_type="sgml"$/;"	v
b:docbk_type	C:\exVim\vim74\syntax\docbkxml.vim	/^let b:docbk_type="xml"$/;"	v
b:docbk_ver	C:\exVim\vim74\syntax\docbk.vim	/^    let b:docbk_ver = 4$/;"	v
b:docbk_ver	C:\exVim\vim74\syntax\docbk.vim	/^    let b:docbk_ver = docbk_ver$/;"	v
b:doxygen_syntax_save	C:\exVim\vim74\syntax\doxygen.vim	/^    let b:doxygen_syntax_save=b:current_syntax$/;"	v
b:enforce_freedesktop_standard	C:\exVim\vim74\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 0$/;"	v
b:enforce_freedesktop_standard	C:\exVim\vim74\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 1$/;"	v
b:erlang_syntax_synced	C:\exVim\vim74\syntax\erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	C:\exVim\vim74\syntax\eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	C:\exVim\vim74\syntax\eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	C:\exVim\vim74\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	C:\exVim\vim74\indent\eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:escape_spaces	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let b:escape_spaces=1$/;"	v
b:eterm_minlines	C:\exVim\vim74\syntax\eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	C:\exVim\vim74\syntax\eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:fenced_block	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^let b:fenced_block = 0$/;"	v
b:fortran_dialect	C:\exVim\vim74\syntax\fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	C:\exVim\vim74\syntax\fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	C:\exVim\vim74\syntax\fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	C:\exVim\vim74\syntax\fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\ftplugin\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\indent\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\indent\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\indent\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\syntax\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\syntax\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	C:\exVim\vim74\syntax\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	C:\exVim\vim74\syntax\fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	C:\exVim\vim74\syntax\framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:front_matter	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^let b:front_matter = 0$/;"	v
b:git_dir	C:\exVim\vim74\ftplugin\git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	C:\exVim\vim74\ftplugin\git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	C:\exVim\vim74\ftplugin\git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	C:\exVim\vim74\ftplugin\gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:hi_indent	C:\exVim\vim74\indent\html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	C:\exVim\vim74\indent\html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	C:\exVim\vim74\indent\html.vim	/^let b:hi_newstate = {}$/;"	v
b:hs_chs	C:\exVim\vim74\syntax\chaskell.vim	/^let b:hs_chs=1$/;"	v
b:i	C:\exVim\vim74\syntax\hitest.vim	/^   let b:i = b:i + 1$/;"	v
b:i	C:\exVim\vim74\syntax\hitest.vim	/^let b:i = 1$/;"	v
b:indent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let b:indent = {"lnum": -1}$/;"	v
b:indent_use_syntax	C:\exVim\vim74\indent\perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	C:\exVim\vim74\indent\perl6.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:is_bash	C:\exVim\vim74\syntax\sh.vim	/^    let b:is_bash= 1$/;"	v
b:is_kornshell	C:\exVim\vim74\syntax\sh.vim	/^    let b:is_kornshell= 1$/;"	v
b:is_sh	C:\exVim\vim74\syntax\sh.vim	/^    let b:is_sh= 1$/;"	v
b:javascript_fold	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:jcommenter_add_empty_line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_add_empty_line = 1$/;"	v
b:jcommenter_autostart_insert_mode	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_autostart_insert_mode = 1$/;"	v
b:jcommenter_class_author	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_class_author = ''$/;"	v
b:jcommenter_class_description_space	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_class_description_space = 2$/;"	v
b:jcommenter_class_version	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_class_version = ''$/;"	v
b:jcommenter_description_starts_from_first_line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_description_starts_from_first_line = 0$/;"	v
b:jcommenter_field_description_space	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_field_description_space = 1$/;"	v
b:jcommenter_file_author	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_file_author = ''$/;"	v
b:jcommenter_file_copyright	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_file_copyright = ''$/;"	v
b:jcommenter_file_noautotime	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_file_noautotime = 0 $/;"	v
b:jcommenter_method_description_space	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_method_description_space = 2$/;"	v
b:jcommenter_modeline	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_modeline = "\/* vim: set " . (&et ? "et" : "noet") . " sw=" . &sw . " ts=" . &ts . ": *\/"$/;"	v
b:jcommenter_move_cursor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_move_cursor = 1$/;"	v
b:jcommenter_remove_tags_on_update	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_remove_tags_on_update = 1$/;"	v
b:jcommenter_smart_method_description_spacing	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_smart_method_description_spacing = 1$/;"	v
b:jcommenter_update_comments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_update_comments = 1$/;"	v
b:jcommenter_use_exception_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let b:jcommenter_use_exception_tag = 0$/;"	v
b:keymap	C:\exVim\vim74\keymap\magyar_utf-8.vim	/^let b:keymap = "magyar"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\accents.vim	/^let b:keymap_name = "acc"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\arabic_utf-8.vim	/^let b:keymap_name = "arab"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\belarusian-jcuken.vim	/^let b:keymap_name = "by"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\bulgarian-bds.vim	/^let b:keymap_name = "bds"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\bulgarian-phonetic.vim	/^let b:keymap_name = "pho"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\canfr-win.vim	/^let b:keymap_name = "canfr"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\croatian_cp1250.vim	/^let b:keymap_name = "croatian-cp1250"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\croatian_iso-8859-2.vim	/^let b:keymap_name = "croatian-iso-8859-2"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\croatian_utf-8.vim	/^let b:keymap_name = "croatian-UTF-8"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\czech_utf-8.vim	/^let b:keymap_name = "czech"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\dvorak.vim	/^let b:keymap_name = "en-dv"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\esperanto_utf-8.vim	/^let b:keymap_name = "Eo"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\greek_cp1253.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\greek_cp737.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\greek_iso-8859-7.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\greek_utf-8.vim	/^let b:keymap_name = "grk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrew_cp1255.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrew_iso-8859-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrew_utf-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrewp_cp1255.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrewp_iso-8859-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\hebrewp_utf-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\kana.vim	/^let b:keymap_name = "kana"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\lithuanian-baltic.vim	/^let b:keymap_name = "lt"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\mongolian_utf-8.vim	/^let b:keymap_name = "mn"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\persian-iranian_utf-8.vim	/^let b:keymap_name = "per"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\pinyin.vim	/^let b:keymap_name = "py"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\polish-slash_cp1250.vim	/^let b:keymap_name = "PL-slash-WIN"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\polish-slash_cp852.vim	/^let b:keymap_name = "PL-slash-DOS"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\polish-slash_iso-8859-2.vim	/^let b:keymap_name = "PL-slash-ISO"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\polish-slash_utf-8.vim	/^let b:keymap_name = "PL-slash-UTF"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\russian-dvorak.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\russian-jcuken.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\russian-jcukenwin.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\russian-yawerty.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian-latin_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian_cp1250.vim	/^let b:keymap_name = "serbian-cp1250"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian_cp1251.vim	/^let b:keymap_name = "serbian-cp1251"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian_iso-8859-2.vim	/^let b:keymap_name = "serbian-iso-8859-2"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian_iso-8859-5.vim	/^let b:keymap_name = "serbian-iso-8859-5"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\serbian_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\sinhala-phonetic_utf-8.vim	/^let b:keymap_name = "sinhala"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\slovak_cp1250.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\slovak_iso-8859-2.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\slovak_utf-8.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\tamil_tscii.vim	/^let b:keymap_name = "tamil_tscii"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\thaana-phonetic_utf-8.vim	/^let b:keymap_name= "thaana"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\ukrainian-dvorak.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\ukrainian-jcuken.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	C:\exVim\vim74\keymap\vietnamese-viqr_utf-8.vim	/^let b:keymap_name = "vietnamese"$/;"	v
b:lhs_markup	C:\exVim\vim74\syntax\lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	C:\exVim\vim74\syntax\lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	C:\exVim\vim74\syntax\lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	C:\exVim\vim74\syntax\lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	C:\exVim\vim74\syntax\lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	C:\exVim\vim74\ftplugin\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	C:\exVim\vim74\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	C:\exVim\vim74\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	C:\exVim\vim74\syntax\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	C:\exVim\vim74\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	C:\exVim\vim74\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	C:\exVim\vim74\syntax\liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	C:\exVim\vim74\syntax\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	C:\exVim\vim74\indent\liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:main_syntax	C:\exVim\vim74\syntax\groff.vim	/^let b:main_syntax = "nroff"$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\context.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\ishd.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\lua.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\plaintex.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\vim.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	C:\exVim\vim74\ftplugin\xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\c.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\context.vim	/^  let b:match_skip = 'r:\\\\\\@<!\\%(\\\\\\\\\\)*%'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\dtrace.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitution\\|perlTranslation\\|perlMatch\\|perlFormatField'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\vim.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name")$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\zimbu.vim	/^let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
b:match_skip	C:\exVim\vim74\ftplugin\zsh.vim	/^let b:match_skip = 's:comment\\|string\\|heredoc\\|subst'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	C:\exVim\vim74\ftplugin\ada.vim	/^   let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\c.vim	/^let b:match_words = &matchpairs . ',^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s*#\\s*endif\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\context.vim	/^  let b:match_words = '(:),\\[:],{:},\\\\(:\\\\),\\\\\\[:\\\\],' .$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\csc.vim	/^    let b:match_words=$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\csh.vim	/^    let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\dtrace.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\ishd.vim	/^    let b:match_words=$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\j.vim	/^  let b:match_words = '^.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|verb\\|monad\\|dyad\\)\\s\\+\\%(\\:\\s*0\\|def\\s\\+0\\|define\\)\\>:^\\s*\\:\\s*$:^\\s*)\\s*$'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\lua.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\make.vim	/^  let b:match_words = '\\<if\\(n\\)\\=\\(eq\\|def\\)\\>:\\<else\\>:\\<endif\\>,\\<define\\>:\\<endef\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\matlab.vim	/^	let b:match_words = '\\<if\\>\\|\\<while\\>\\|\\<for\\>\\|\\<switch\\>:' .$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<endstream\\>,\\<xref\\>:\\<trailer\\>,<<:>>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\php.vim	/^    let b:match_words = '<?php:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grestore\\>'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\sh.vim	/^    let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\spec.vim	/^let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\vb.vim	/^    let b:match_words=$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\vim.vim	/^  let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\xml.vim	/^    let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\zimbu.vim	/^let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FUNC\\|REPLACE\\|DEFINE\\|PROC\\|EQUAL\\|MAIN\\|IF\\|GENERATE_IF\\|WHILE\\|REPEAT\\|WITH\\|DO\\|FOR\\|SWITCH\\|TRY\\)\\>\\|{\\s*$:\\(^\\s*\\)\\@<=\\(ELSE\\|ELSEIF\\|GENERATE_ELSE\\|GENERATE_ELSEIF\\|CATCH\\|FINALLY\\)\\>:\\(^\\s*\\)\\@<=\\(}\\|\\<UNTIL\\>\\)'$/;"	v
b:match_words	C:\exVim\vim74\ftplugin\zsh.vim	/^let b:match_words =$/;"	v
b:match_words	C:\exVim\vim74\syntax\cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^  let b:match_words = '\\<classdef\\>\\|\\<methods\\>\\|\\<events\\>\\|\\<properties\\>\\|\\<if\\>\\|\\<while\\>\\|\\<for\\>\\|\\<switch\\>\\|\\<try\\>\\|\\<function\\>:' . s:conditionalEnd$/;"	v
b:match_words	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:nroff_is_groff	C:\exVim\vim74\syntax\groff.vim	/^let b:nroff_is_groff = 1$/;"	v
b:optionsset	C:\exVim\vim74\indent\php.vim	/^let b:optionsset = 0$/;"	v
b:pdf_tagstack	C:\exVim\vim74\ftplugin\pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:ruby_no_expensive	C:\exVim\vim74\syntax\haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	C:\exVim\vim74\syntax\ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	C:\exVim\vim74\ftplugin\ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:spell_options	C:\exVim\vim74\syntax\groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	C:\exVim\vim74\syntax\java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	C:\exVim\vim74\syntax\wsml.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	C:\exVim\vim74\ftplugin\sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	C:\exVim\vim74\ftplugin\sql.vim	/^    let b:sql_vis = 1$/;"	v
b:synhead	C:\exVim\vim74\syntax\hitest.vim	/^	    let b:synhead = b:synhead."s"$/;"	v
b:synhead	C:\exVim\vim74\syntax\hitest.vim	/^	 let b:synhead = b:synhead." - filetype"$/;"	v
b:synhead	C:\exVim\vim74\syntax\hitest.vim	/^	 let b:synhead = b:synhead.":".@a$/;"	v
b:synhead	C:\exVim\vim74\syntax\hitest.vim	/^   let b:synhead = "Syntax highlighting groups"$/;"	v
b:tex_stylish	C:\exVim\vim74\syntax\tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	C:\exVim\vim74\syntax\tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	C:\exVim\vim74\syntax\tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tt2_syn_inc_perl	C:\exVim\vim74\syntax\tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	C:\exVim\vim74\syntax\tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\c.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\changelog.vim	/^    let b:undo_ftplugin .= " tw<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\changelog.vim	/^  let b:undo_ftplugin = "setl com< fo< et< ai<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispwords<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\context.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< sua< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\csh.vim	/^let b:undo_ftplugin = "setlocal commentstring< formatoptions<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\debchangelog.vim	/^let b:undo_ftplugin = "setlocal tw< comments< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\debcontrol.vim	/^let b:undo_ftplugin = "setlocal tw< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\docbk.vim	/^let b:undo_ftplugin = "unlet! b:docbk_type"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\dtrace.vim	/^let b:undo_ftplugin = "setl fo< com< cms< isk<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\erlang.vim	/^let b:undo_ftplugin = "setlocal foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\flexwiki.vim	/^let b:undo_ftplugin = "setl tw< wrap< lbr< et< ts< fenc< bomb< ff<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitcommit.vim	/^  let b:undo_ftplugin .= "|setl tw<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\go.vim	/^let b:undo_ftplugin = 'setl fo< com< cms<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\haskell.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\initex.vim	/^let b:undo_ftplugin = "setl com< cms< define< include< sua<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\j.vim	/^let b:undo_ftplugin = 'setlocal matchpairs< expandtab< softtabstop< shiftwidth< formatoptions< commentstring< comments< iskeyword<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\json.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< comments< commentstring<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\logcheck.vim	/^let b:undo_ftplugin = "setl fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\lua.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< suffixesadd<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\make.vim	/^let b:undo_ftplugin = "setl et< sts< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\man.vim	/^  let b:undo_ftplugin = "setlocal iskeyword<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< "$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\msmessages.vim	/^let b:undo_ftplugin = "setl fo< com< cms< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ocaml.vim	/^let b:undo_ftplugin = "setlocal efm< foldmethod< foldexpr<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp< path<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\perl6.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\php.vim	/^let b:undo_ftplugin = "setlocal commentstring< include< omnifunc<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\plaintex.vim	/^let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\qf.vim	/^let b:undo_ftplugin = "set stl<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\r.vim	/^let b:undo_ftplugin = "setl cms< com< fo< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\racc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\registry.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rhelp.vim	/^let b:undo_ftplugin = "setl isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\scheme.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lispwords< lisp< commentstring<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sgml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sh.vim	/^let b:undo_ftplugin = "setlocal cms< | unlet! b:browsefilter b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\svg.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\tcsh.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\udevrules.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\vim.vim	/^let b:undo_ftplugin = "setl fo< isk< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xml.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	C:\exVim\vim74\ftplugin\zsh.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\neosnippet.vim\ftplugin\neosnippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\neosnippet.vim\ftplugin\neosnippet.vim	/^    let b:undo_ftplugin = '|'$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\neosnippet.vim\ftplugin\neosnippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\vim-less\ftplugin\less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< "$/;"	v
b:undo_ftplugin	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_indent	C:\exVim\vim74\indent\bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\c.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\changelog.vim	/^let b:undo_indent = "setl ai<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< indentexpr< indentkeys<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\cpp.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\cs.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\dtrace.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\eiffel.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr< autoindent< comments< "$/;"	v
b:undo_indent	C:\exVim\vim74\indent\gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\html.vim	/^let b:undo_indent = "setlocal inde< indk< cino<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\ishd.vim	/^let b:undo_indent = "setl ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\javascript.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\vim.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	C:\exVim\vim74\indent\vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	C:\exVim\vim74\indent\zimbu.vim	/^let b:undo_indent = "setl et< sw< ai< indentkeys< indentexpr="$/;"	v
b:undo_indent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let b:undo_indent = "set inde< indk<| unlet b:indent"$/;"	v
b:undo_indent	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^    let b:undo_indent = ''$/;"	v
b:undo_indent	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^    let b:undo_indent = '|'$/;"	v
b:undo_indent	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^let b:undo_indent .= '$/;"	v
b:various	C:\exVim\vim74\syntax\hitest.vim	/^let b:various = &highlight.',:Normal,:Cursor,:,'$/;"	v
b:vera_minlines	C:\exVim\vim74\syntax\vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	C:\exVim\vim74\syntax\vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	C:\exVim\vim74\syntax\vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	C:\exVim\vim74\ftplugin\vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\|package\\|procedure\\|process\\|record\\|units\\)'$/;"	v
b:xf86conf_xfree86_version	C:\exVim\vim74\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	C:\exVim\vim74\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xml_indent_close	C:\exVim\vim74\indent\xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	C:\exVim\vim74\indent\xml.vim	/^    let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
b:yaml_schema	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
b:yaml_schema	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
bar	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^  bar: function() {$/;"	r
bas	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string bas=null;$/;"	f	class:Wangfc.CSParser	file:	access:private
bas	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
bas	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agedge_s	access:public
base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agnode_s	access:public
base	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agobj_t base;$/;"	m	struct:Agraph_s	access:public
base	C:\exVim\vim74\syntax\2html.vim	/^      let base = 0.01 * w$/;"	v
base.__empty	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__empty(...)$/;"	f
base.__execute	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__execute(command)$/;"	f
base.__execute__	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
base.__finish	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__finish()$/;"	f
base.__get_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__get_keymapping()$/;"	f
base.__init	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__init()$/;"	f
base.__init_variables	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__init_variables()$/;"	f
base.__input	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__input(input, ...)$/;"	f
base.__input_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__input_char(char)$/;"	f
base.__inputting	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__inputting()$/;"	f
base.__is_exit	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__is_exit()$/;"	f
base.__keymapping__	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__keymapping__()$/;"	f
base.__main	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__main(...)$/;"	f
base.__update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.__update()$/;"	f
base.backward	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.backward()$/;"	f
base.backward	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.backward()$/;"	f
base.backward_word	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.backward_word(...)$/;"	f
base.call	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.call(func, ...)$/;"	f
base.callevent	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.callevent(event)$/;"	f
base.char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.char()$/;"	f
base.cmap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
base.cnoremap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
base.connect	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.connect(module, ...)$/;"	f
base.connect	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.connect(slot)$/;"	f
base.cunmap	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
base.disable_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.disable_keymapping()$/;"	f
base.disconnect	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.disconnect(name)$/;"	f
base.disconnect	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
base.disconnect_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
base.draw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.draw()$/;"	f
base.enable_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.enable_keymapping()$/;"	f
base.execute	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.execute(...)$/;"	f
base.exit	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.exit(...)$/;"	f
base.exit_code	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.exit_code()$/;"	f
base.find_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.find_by(expr)$/;"	f
base.find_first_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
base.forward	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.forward()$/;"	f
base.forward	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.forward()$/;"	f
base.get	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.get(...)$/;"	f
base.get_module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.get_module(name)$/;"	f
base.get_prompt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.get_prompt()$/;"	f
base.get_slot	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.get_slot(val)$/;"	f
base.get_suffix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.get_suffix()$/;"	f
base.get_tap_key	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.get_tap_key()$/;"	f
base.getchar	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.getchar(...)$/;"	f
base.getline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.getline()$/;"	f
base.getpos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.getpos()$/;"	f
base.hl_cursor_off	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
base.hl_cursor_on	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
base.input	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.input(str)$/;"	f
base.input_key	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.input_key()$/;"	f
base.input_key_stack	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.input_key_stack()$/;"	f
base.input_key_stack_pop	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
base.input_key_stack_string	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
base.insert	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.insert(word, ...)$/;"	f
base.is_enable_keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
base.is_exit	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.is_exit()$/;"	f
base.is_input	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
base.keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.keymapping()$/;"	f
base.length	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.length()$/;"	f
base.next	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.next()$/;"	f
base.pos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.pos()$/;"	f
base.pos_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.pos_char()$/;"	f
base.prev	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.prev()$/;"	f
base.remove	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.remove(index)$/;"	f
base.remove_next	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.remove_next()$/;"	f
base.remove_pos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.remove_pos()$/;"	f
base.remove_prev	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.remove_prev()$/;"	f
base.set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.set(item)$/;"	f
base.set_input_key_stack	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
base.set_pos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.set_pos(pos)$/;"	f
base.set_prompt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
base.set_str	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.set_str(str)$/;"	f
base.set_suffix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.set_suffix(str)$/;"	f
base.setchar	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
base.setline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.setline(line)$/;"	f
base.setpos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.setpos(pos)$/;"	f
base.slots	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.slots()$/;"	f
base.sort_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
base.start	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.start(...)$/;"	f
base.str	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:base.str()$/;"	f
base.tap_keyinput	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
base.untap_keyinput	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
base.variables.modules.get_slot	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
basics	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="basics"><H3>gd basics: using gd in your program<\/H3><\/A>$/;"	a
bb	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf    bb;		\/* graph bb with padding - graph units *\/$/;"	m	struct:GVJ_s	access:public
bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;			\/* bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;$/;"	m	struct:Agnodeinfo_t	access:public
bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;$/;"	m	struct:splines	access:public
bb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal bb$/;"	m
beep	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:beep()$/;"	f
begin_anchor	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_anchor) (GVJ_t * job,$/;"	m	struct:gvrender_engine_s	access:public
begin_cluster	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_cluster) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_edge	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_edge) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_edges	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_edges) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_graph	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_graph) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_job	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_job) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_label	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_label) (GVJ_t * job, label_type type);$/;"	m	struct:gvrender_engine_s	access:public
begin_layer	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_layer) (GVJ_t * job, char *layername,$/;"	m	struct:gvrender_engine_s	access:public
begin_node	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_node) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_nodes	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_nodes) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
begin_page	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_page) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
bezier	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct bezier {$/;"	s
bezier	C:\exVim\graphviz\include\graphviz\types.h	/^    } bezier;$/;"	t	typeref:struct:bezier
bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline bezier;    \/* xd_filled_bezier,  xd_unfilled_bezier *\/$/;"	m	union:_xdot_op::__anon61	access:public
bezier::eflag	C:\exVim\graphviz\include\graphviz\types.h	/^	int sflag, eflag;$/;"	m	struct:bezier	access:public
bezier::ep	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf sp, ep;$/;"	m	struct:bezier	access:public
bezier::list	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *list;$/;"	m	struct:bezier	access:public
bezier::sflag	C:\exVim\graphviz\include\graphviz\types.h	/^	int sflag, eflag;$/;"	m	struct:bezier	access:public
bezier::size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:bezier	access:public
bezier::sp	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf sp, ep;$/;"	m	struct:bezier	access:public
beziercurve	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*beziercurve) (GVJ_t * job, pointf * A, int n,$/;"	m	struct:gvrender_engine_s	access:public
bh	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal bh$/;"	m
binary_search	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
bindings	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprbinding* bindings;    \/* array of bindings, terminated with {NULL,NULL} *\/$/;"	m	struct:__anon30	access:public
bmenu_priority	C:\exVim\vim74\menu.vim	/^  let bmenu_priority = 60$/;"	v
bonbon	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^  def bonbon():$/;"	f	function:derpyhooves	access:public
boolean	C:\exVim\graphviz\include\graphviz\types.h	/^typedef unsigned char boolean;$/;"	t
border	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf border[4];	\/* sizes of margins for graph labels *\/$/;"	m	struct:Agraphinfo_t	access:public
boundingBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	box     boundingBox;    \/* cumulative boundingBox over all pages - device units *\/$/;"	m	struct:GVJ_s	access:public
box	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { point LL, UR; } box;$/;"	t	typeref:struct:__anon9
boxes	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf *boxes;		\/* rectangular regions of subdivision *\/$/;"	m	struct:path	access:public
boxes	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf boxes[20];$/;"	m	struct:pathend_t	access:public
boxf	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { pointf LL, UR; } boxf;$/;"	t	typeref:struct:__anon10
boxn	C:\exVim\graphviz\include\graphviz\types.h	/^	int boxn;$/;"	m	struct:pathend_t	access:public
bp	C:\exVim\graphviz\include\graphviz\types.h	/^	    boxf*    bp;$/;"	m	struct:inside_t::__anon36	access:public
bp	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf *bp;		\/* if not null, points to bbox of $/;"	m	struct:port	access:public
break	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^      break;$/;"	r
break	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^  break;$/;"	r
break	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:break(f, xs) abort$/;"	f
break	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:break(f, xs) abort$/;"	f
break	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc.break$/;"	r
break	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:break(f, xs) abort$/;"	f
brewer_license	C:\exVim\graphviz\share\graphviz\doc\html\info\colors.html	/^<A NAME=brewer_license>Apache-Style Software License for ColorBrewer software and ColorBrewer$/;"	a
bsearch_cmpf	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef int (*bsearch_cmpf) (const void *, const void *);$/;"	t
bsub	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
buffer	C:\exVim\graphviz\bin\exparse.h	/^	struct Exbuf_s*	buffer;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exbuf_s	access:public
buffer	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    char *buffer;$/;"	m	struct:__anon64	file:	access:public
bufferSize	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int bufferSize;$/;"	v
buffer_commit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_shiftwidth	C:\exVim\vim74\indent\sh.vim	/^function s:buffer_shiftwidth()$/;"	f
buffer_spec	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buffunc	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
bufname	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        let bufname=escape(substitute(expand('%:p', 0), '\\\\', '\/', 'g'), ' ')$/;"	v
buftab	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_path	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:build_path(path)$/;"	f
build_tree	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:build_tree( entry_path, file_pattern, file_ignore_pattern, folder_pattern, folder_filter_include, included )$/;"	f
buildgd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="buildgd"><H3>How do I build gd?<\/H3><\/A>$/;"	a
buildpat	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
builtins	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const lt_symlist_t *builtins;$/;"	m	struct:GVCOMMON_s	access:public
bundle.is_pinned	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:bundle.path()$/;"	f
button	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned char button;   \/* active button *\/$/;"	m	struct:GVJ_s	access:public
button_press	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*button_press) (GVJ_t * job, int button, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
button_release	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*button_release) (GVJ_t * job, int button, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
byfname	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:byfname()$/;"	f
cBuffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^char cBuffer[2048];$/;"	v
cBuffer	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^char cBuffer[2048];$/;"	v
cS	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
c_comment_strings	C:\exVim\vim74\gvimrc_example.vim	/^  let c_comment_strings=1$/;"	v
c_d	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let c_d=s:GetCd(info, '')$/;"	v
cache_nc	C:\exVim\graphviz\include\graphviz\types.h	/^	int cache_nc;		\/* caches number of crossings *\/$/;"	m	struct:rank_t	access:public
cachefile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
call	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:call(list, func, ...)$/;"	f
callback	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvevent_key_callback_t callback;$/;"	m	struct:gvevent_key_binding_s	access:public
callbacks	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvdevice_callbacks_t *callbacks;$/;"	m	struct:GVJ_s	access:public
callbacks_enabled	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char callbacks_enabled;	\/* issue user callbacks or hold them? *\/$/;"	m	struct:Agclos_s	access:public
can_diffoff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
candidate	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean candidate;	\/* for transpose () *\/$/;"	m	struct:rank_t	access:public
canvasBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf	canvasBox;	\/* viewport area - points *\/$/;"	m	struct:GVJ_s	access:public
capitalize	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:capitalize(word)$/;"	f
capture	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:capture(name)$/;"	f
capture	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:capture(...)$/;"	f
capture	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:capture(command) abort$/;"	f
capture_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:capture_list(...)$/;"	f
cb	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbstack_t *cb;		\/* user and system callback function stacks *\/$/;"	m	struct:Agclos_s	access:public
cccomps	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern Agraph_t **cccomps(Agraph_t *, int *, char *);$/;"	p	signature:(Agraph_t *, int *, char *)
ccomplete#Complete	C:\exVim\vim74\autoload\ccomplete.vim	/^function! ccomplete#Complete(findstart, base)$/;"	f
ccomps	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern Agraph_t **ccomps(Agraph_t *, int *, char *);$/;"	p	signature:(Agraph_t *, int *, char *)
centered	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean centered;$/;"	m	struct:layout_t	access:public
cfile	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:cfile() abort$/;"	f
chCwd	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:chRoot(node)$/;"	f
changelist	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! s:changelist(bufnr)$/;"	f
changelogMenu	C:\exVim\vim74\ftplugin\debchangelog.vim	/^augroup changelogMenu$/;"	a
changesurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
char_range	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:char_range(from, to) abort$/;"	f
chars	C:\exVim\vim74\syntax\xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	C:\exVim\vim74\syntax\xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	C:\exVim\vim74\syntax\xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	C:\exVim\vim74\syntax\xpm.vim	/^let chars  = ""$/;"	v
chars	C:\exVim\vim74\syntax\xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	C:\exVim\vim74\syntax\xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	C:\exVim\vim74\syntax\xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	C:\exVim\vim74\syntax\xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	C:\exVim\vim74\syntax\xpm2.vim	/^  let chars  = ""$/;"	v
charset	C:\exVim\graphviz\include\graphviz\types.h	/^	int charset;$/;"	m	struct:textlabel_t	access:public
charset	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char charset; \/* input character set *\/$/;"	m	struct:Agraphinfo_t	access:public
check	C:\exVim\vim74\autoload\gzip.vim	/^fun s:check(cmd)$/;"	f
check_async_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:check_async_cache(context) "{{{$/;"	f
check_bundle_name	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
check_changed_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:check_changed_buffer(bufnr) "{{{$/;"	f
check_fallback	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:check_fallback(cur_text) "{{{$/;"	f
check_force_omni	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:check_force_omni(cur_text) "{{{$/;"	f
check_in_do_auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_match_nr	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:check_match_nr(match_nr)$/;"	f
check_old_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_old_cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_shell	C:\exVim\vim74\tools\shtags.pl	/^sub check_shell$/;"	s
check_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:check_source() "{{{$/;"	f
checkbuf	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chill_minlines	C:\exVim\vim74\syntax\chill.vim	/^  let chill_minlines = 15$/;"	v
chknearby	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chomp	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose	C:\exVim\vim74\ftplugin\gitrebase.vim	/^function! s:choose(word)$/;"	f
chop	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
chop	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:chop(str) abort "{{{$/;"	f
className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  static String className(Class c) {$/;"	m	class:ClassInfo	access:default	signature:(Class c)
className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String className(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
className	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String className;$/;"	f	class:Document	access:default
classname	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String classname;$/;"	f	class:Struts2Configure	access:default
classname	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String classname;$/;"	f	class:Struts2Simple	access:default
classpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String classpath;$/;"	f	class:Struts2Configure	access:default
classpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String classpath;$/;"	f	class:Struts2Simple	access:default
clean	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:clean() abort "{{{$/;"	f
cleanup	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	/^	void (*cleanup) (graph_t * g);$/;"	m	struct:gvlayout_engine_s	access:public
cleanup	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*cleanup) (graph_t * g);   \/* function to deallocate layout-specific data *\/$/;"	m	struct:Agraphinfo_t	access:public
clear	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:clear(list) abort$/;"	f
clear	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:clear(list) abort$/;"	f
clear	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:clear(list) abort$/;"	f
clear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def clear $/;"	f	class:Vjde.PackageCfu
clear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def clear $/;"	f	class:Vjde.PackageClass
clear	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def clear$/;"	f	class:Vjde.SourceReader
clear	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    void clear() {$/;"	m	class:ClassPathEntry	access:default	signature:()
click	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		click,$/;"	m	struct:GVJ_s	access:public
clip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf    clip;		\/* clip region in graph units *\/$/;"	m	struct:GVJ_s	access:public
clip	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean clip;           \/* if true, clip end to node\/port shape *\/$/;"	m	struct:port	access:public
clojurecomplete#Complete	C:\exVim\vim74\autoload\clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
clos	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agclos_t *clos;		\/* shared resources *\/$/;"	m	struct:Agraph_s	access:public
close	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*close) (void *state);$/;"	m	struct:Agiddisc_s	access:public
close	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*close) (void *state);$/;"	m	struct:Agmemdisc_s	access:public
closeChildren	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
closematch	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
clr	C:\exVim\graphviz\include\graphviz\xdot.h	/^	char* clr;$/;"	m	union:__anon50::__anon51	access:public
clust	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t **clust;	\/* clusters are in clust[1..n_cluster] !!! *\/$/;"	m	struct:Agraphinfo_t	access:public
clust	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *clust;$/;"	m	struct:Agnodeinfo_t	access:public
clustnode	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean clustnode;$/;"	m	struct:Agnodeinfo_t	access:public
cmdheight.get	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
cmdheight.restore	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
cmdheight.save	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
cmdname	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	char *cmdname;$/;"	m	struct:GVCOMMON_s	access:public
cmyk	C:\exVim\graphviz\include\graphviz\color.h	/^	unsigned char cmyk[4];$/;"	m	union:color_s::__anon7	access:public
cnt	C:\exVim\graphviz\include\graphviz\textspan.h	/^	unsigned int cnt:(sizeof(unsigned int) * 8 - 7);   \/* reference count *\/$/;"	m	struct:__anon33	access:public
cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;  \/* no. of xdot ops *\/$/;"	m	struct:__anon62	access:public
cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;  \/* no. of xdot ops *\/$/;"	m	struct:__anon63	access:public
cnt	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int cnt;$/;"	m	struct:__anon55	access:public
code	C:\exVim\vimfiles\asm-support\main.asm	/^code segment$/;"	l
codecs	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^import codecs$/;"	i
codefn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*codefn) (GVJ_t * job, node_t * n);	\/* emits graphics code for node *\/$/;"	m	struct:shape_functions	access:public
coffee#CoffeeSetUpErrorFormat	C:\exVim\vimfiles\bundle\vim-coffee-script\autoload\coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	C:\exVim\vimfiles\bundle\vim-coffee-script\autoload\coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col1	C:\exVim\vim74\syntax\colortest.vim	/^  let col1 = substitute(expand("<cword>"), '\\(\\a\\+\\)_on_\\a\\+', '\\1', "")$/;"	v
col2	C:\exVim\vim74\syntax\colortest.vim	/^  let col2 = substitute(expand("<cword>"), '\\a\\+_on_\\(\\a\\+\\)', '\\1', "")$/;"	v
color	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char*  color;$/;"	m	struct:__anon33	access:public
color	C:\exVim\graphviz\include\graphviz\xdot.h	/^      char* color;             \/* xd_fill_color, xd_pen_color *\/$/;"	m	union:_xdot_op::__anon61	access:public
color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* color;$/;"	m	struct:__anon47	access:public
color	C:\exVim\vim74\syntax\xpm.vim	/^		     let color = ""$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm.vim	/^let color  = ""$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^		let color = ""$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	C:\exVim\vim74\syntax\xpm2.vim	/^  let color  = ""$/;"	v
colorTypeXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern xdot_grad_type colorTypeXDot (char*);$/;"	p	signature:(char*)
color_helper#color_name_to_hex	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#color_name_to_hex(color_name)$/;"	f
color_helper#dec_to_hex	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#dec_to_hex(arg, padding)$/;"	f
color_helper#hex_color_darken	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#hex_color_darken(color, percent)$/;"	f
color_helper#hex_color_lighten	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#hex_color_lighten(color, percent)$/;"	f
color_helper#hex_color_to_rgb	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#hex_color_to_rgb(hex_color)$/;"	f
color_helper#hex_to_dec	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#hex_to_dec(arg)$/;"	f
color_helper#rgb_color_to_hex	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\color_helper.vim	/^function! color_helper#rgb_color_to_hex(rgb_color)$/;"	f
color_s	C:\exVim\graphviz\include\graphviz\color.h	/^typedef struct color_s {$/;"	s
color_s::__anon7::HSVA	C:\exVim\graphviz\include\graphviz\color.h	/^	double HSVA[4];$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::RGBA	C:\exVim\graphviz\include\graphviz\color.h	/^	double RGBA[4];$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::cmyk	C:\exVim\graphviz\include\graphviz\color.h	/^	unsigned char cmyk[4];$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::index	C:\exVim\graphviz\include\graphviz\color.h	/^	int index;$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::rgba	C:\exVim\graphviz\include\graphviz\color.h	/^	unsigned char rgba[4];$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::rrggbbaa	C:\exVim\graphviz\include\graphviz\color.h	/^	int rrggbbaa[4];$/;"	m	union:color_s::__anon7	access:public
color_s::__anon7::string	C:\exVim\graphviz\include\graphviz\color.h	/^	char *string;$/;"	m	union:color_s::__anon7	access:public
color_s::type	C:\exVim\graphviz\include\graphviz\color.h	/^    color_type_t type;$/;"	m	struct:color_s	access:public
color_s::u	C:\exVim\graphviz\include\graphviz\color.h	/^    } u;$/;"	m	struct:color_s	typeref:union:color_s::__anon7	access:public
color_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	color_type_t color_type;$/;"	m	struct:__anon20	access:public
color_type_t	C:\exVim\graphviz\include\graphviz\color.h	/^		RGBA_DOUBLE, COLOR_STRING, COLOR_INDEX } color_type_t;$/;"	t	typeref:enum:__anon6
colors	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="colors">Color-handling functions<\/A><\/H3>$/;"	a
colors	C:\exVim\vim74\syntax\xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	C:\exVim\vim74\syntax\xpm.vim	/^let colors = 0$/;"	v
colors	C:\exVim\vim74\syntax\xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	C:\exVim\vim74\syntax\xpm2.vim	/^  let colors = 0$/;"	v
colors_name	C:\exVim\vim74\colors\darkblue.vim	/^let colors_name = "darkblue"$/;"	v
colors_name	C:\exVim\vim74\colors\default.vim	/^let colors_name = "default"$/;"	v
colors_name	C:\exVim\vim74\colors\evening.vim	/^let colors_name = "evening"$/;"	v
colors_name	C:\exVim\vim74\colors\industry.vim	/^let colors_name = "industry"$/;"	v
colors_name	C:\exVim\vim74\colors\morning.vim	/^let colors_name = "morning"$/;"	v
colors_name	C:\exVim\vim74\colors\peachpuff.vim	/^let colors_name = "peachpuff"$/;"	v
colors_name	C:\exVim\vim74\colors\shine.vim	/^let colors_name = "shine"$/;"	v
colors_name	C:\exVim\vim74\colors\slate.vim	/^let colors_name = "slate"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\guardian.vim	/^let colors_name   = "Guardian"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\slate2.vim	/^let colors_name = "slate2"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\sweyla988775.vim	/^let colors_name = "sweyla988775"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\wombat.vim	/^let colors_name = "wombat"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\exlightgray.vim	/^let colors_name = "exlightgray"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\lucius.vim	/^let colors_name="lucius"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\wombat.vim	/^let colors_name = "wombat"$/;"	v
colors_name	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let colors_name = "solarized"$/;"	v
colour	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>colour(r, g, b)$/;"	f
combinations	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:combinations(list, r) abort$/;"	f
commProperty	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static Atom	commProperty = None;$/;"	v	file:
commWindow	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static Window	commWindow = None;$/;"	v	file:
command	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^function! s:command(cmd, ...)$/;"	f
command	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let command=substitute(command, '%F', escape(fnames, '\\'), 'g')$/;"	v
command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let command=substitute(command, '%d', escape(c_d, '\\'), 'g')$/;"	v
command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let command=substitute(command, '%h', escape(home, '\\'), 'g')$/;"	v
command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let command=substitute(command, '%s', escape(fnames, '\\'), 'g')$/;"	v
command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let command=substitute(g:proj_run_fold{a:number}, '%f', substitute(escape(fnames, '\\'), '\\\\ ', ' ', 'g'), 'g')$/;"	v
comment	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*comment) (GVJ_t * job, char *comment);$/;"	m	struct:gvrender_engine_s	access:public
common	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVCOMMON_t *common;$/;"	m	struct:GVJ_s	access:public
common_head	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:common_head(strs) abort$/;"	f
comp	C:\exVim\graphviz\include\graphviz\types.h	/^	nlist_t comp;$/;"	m	struct:Agraphinfo_t	access:public
compare	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_word.vim	/^function! s:compare(i1, i2)$/;"	f
compareUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Configure	access:public	signature:(String source,String actionurl)
compareUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Simple	access:public	signature:(String source,String actionurl)
compare_source_rank	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
comparent	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:comparent(...)$/;"	f
comparf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtcompar_f	comparf;\/* to compare two objects		*\/$/;"	m	struct:_dtdisc_s	access:public
compfnlen	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
complete_key	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:complete_key(key) "{{{$/;"	f
compmatlen	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:compmref(...)$/;"	f
componentName	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String componentName(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
comptime	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:compval(...)$/;"	f
conc_opp_flag	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean conc_opp_flag;$/;"	m	struct:Agedgeinfo_t	access:public
concat	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:concat(list) abort$/;"	f
concat	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:concat(list) abort$/;"	f
concat	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:concat(list) abort$/;"	f
config	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	boolean config, auto_outfile_names;$/;"	m	struct:GVCOMMON_s	access:public
configured_tree	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:cons(x, xs) abort$/;"	f
constants	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="constants">Constants<\/A><\/H3>$/;"	a
constrained	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean	constrained;    \/* if true, constraints such as theta are set *\/$/;"	m	struct:port	access:public
contains_multibyte	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
context	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *context;		\/* gd or cairo surface *\/$/;"	m	struct:GVJ_s	access:public
convertMigemo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
convertRegep	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
convertSmartcase	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
convertSmartsign	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
convert_filename	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function s:convert_filename(filename)$/;"	f
convert_filename	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function s:convert_filename(filename)$/;"	f
convert_t_regexp	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_add_paren.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_disable_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_last_paren.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_overlap.vim	/^function! s:converter.filter(context) "{{{$/;"	f
coord	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf coord;$/;"	m	struct:Agnodeinfo_t	access:public
copyName	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void copyName (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
copying	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="copying">Copying and resizing functions<\/A><\/H3>$/;"	a
count	C:\exVim\graphviz\include\graphviz\types.h	/^	short count;$/;"	m	struct:Agedgeinfo_t	access:public
count	C:\exVim\vim74\indent\bst.vim	/^function! s:count(string,char)$/;"	f
count	C:\exVim\vim74\indent\liquid.vim	/^function! s:count(string,pattern)$/;"	f
count	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		unsigned short count;$/;"	m	struct:__anon75::__anon77	access:public
count_braces	C:\exVim\vim74\indent\css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	C:\exVim\vim74\indent\ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	C:\exVim\vim74\indent\tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	C:\exVim\vim74\indent\xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	C:\exVim\vimfiles\bundle\vim-stylus\indent\stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
cpath	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cpp	C:\exVim\vim74\syntax\xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	C:\exVim\vim74\syntax\xpm.vim	/^let cpp    = 0$/;"	v
cpp	C:\exVim\vim74\syntax\xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	C:\exVim\vim74\syntax\xpm2.vim	/^  let cpp    = 0$/;"	v
create	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
create_changelog	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_column	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void create_column(string &temp)$/;"	f	signature:(string &temp)
create_win2pos2hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
creating	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="creating">Image creation, destruction, loading and saving<\/A><\/H3>$/;"	a
cs	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csc_minlines	C:\exVim\vim74\syntax\csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
css_countbraces	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:css_countbraces(lnum, count_open) "{{{$/;"	f
css_prevnoncomment	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^func! s:css_prevnoncomment(lnum, stopline) "{{{$/;"	f
csscomplete#CompleteCSS	C:\exVim\vim74\autoload\csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f
ctrlp#acceptfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
curVimDir	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def Vjde.curVimDir()$/;"	F	class:Vjde
currentLine	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int currentLine;$/;"	v
currentPkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String currentPkg=null;$/;"	f	class:Struts2Configure	access:default
currentPkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String currentPkg=null;$/;"	f	class:Struts2Simple	access:default
current_compiler	C:\exVim\vim74\compiler\ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	C:\exVim\vim74\compiler\bcc.vim	/^let current_compiler = "bcc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	C:\exVim\vim74\compiler\checkstyle.vim	/^let current_compiler = "checkstyle"$/;"	v
current_compiler	C:\exVim\vim74\compiler\cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	C:\exVim\vim74\compiler\cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	C:\exVim\vim74\compiler\decada.vim	/^let current_compiler = "decada"$/;"	v
current_compiler	C:\exVim\vim74\compiler\dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	C:\exVim\vim74\compiler\erlang.vim	/^let current_compiler = "erlang"$/;"	v
current_compiler	C:\exVim\vim74\compiler\eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fortran_F.vim	/^let current_compiler = "fortran_F"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fortran_cv.vim	/^let current_compiler = "fortran_cv"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fortran_elf90.vim	/^let current_compiler = "fortran_elf90"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fortran_g77.vim	/^let current_compiler = "fortran_g77"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fortran_lf95.vim	/^let current_compiler = "fortran_lf95"$/;"	v
current_compiler	C:\exVim\vim74\compiler\fpc.vim	/^let current_compiler = "fpc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\g95.vim	/^let current_compiler = 'g95'$/;"	v
current_compiler	C:\exVim\vim74\compiler\gcc.vim	/^let current_compiler = "gcc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\gfortran.vim	/^let current_compiler = 'gfortran'$/;"	v
current_compiler	C:\exVim\vim74\compiler\gnat.vim	/^let current_compiler = "gnat"$/;"	v
current_compiler	C:\exVim\vim74\compiler\go.vim	/^let current_compiler = 'go'$/;"	v
current_compiler	C:\exVim\vim74\compiler\haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	C:\exVim\vim74\compiler\hp_acc.vim	/^let current_compiler = "hp_acc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\icc.vim	/^let current_compiler = "icc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\ifort.vim	/^let current_compiler = 'ifort'$/;"	v
current_compiler	C:\exVim\vim74\compiler\intel.vim	/^let current_compiler = "intel"$/;"	v
current_compiler	C:\exVim\vim74\compiler\irix5_c.vim	/^let current_compiler = "irix5_c"$/;"	v
current_compiler	C:\exVim\vim74\compiler\irix5_cpp.vim	/^let current_compiler = "irix5_cpp"$/;"	v
current_compiler	C:\exVim\vim74\compiler\javac.vim	/^let current_compiler = "javac"$/;"	v
current_compiler	C:\exVim\vim74\compiler\jikes.vim	/^let current_compiler = "jikes"$/;"	v
current_compiler	C:\exVim\vim74\compiler\mcs.vim	/^let current_compiler = "mcs"$/;"	v
current_compiler	C:\exVim\vim74\compiler\mips_c.vim	/^let current_compiler = "mips_c"$/;"	v
current_compiler	C:\exVim\vim74\compiler\mipspro_c89.vim	/^let current_compiler = "mipspro_c89"$/;"	v
current_compiler	C:\exVim\vim74\compiler\mipspro_cpp.vim	/^let current_compiler = "mipspro_cpp"$/;"	v
current_compiler	C:\exVim\vim74\compiler\modelsim_vcom.vim	/^let current_compiler = "modelsim_vcom"$/;"	v
current_compiler	C:\exVim\vim74\compiler\msbuild.vim	/^let current_compiler = "msbuild"$/;"	v
current_compiler	C:\exVim\vim74\compiler\msvc.vim	/^let current_compiler = "msvc"$/;"	v
current_compiler	C:\exVim\vim74\compiler\neato.vim	/^let current_compiler = "neato"$/;"	v
current_compiler	C:\exVim\vim74\compiler\ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
current_compiler	C:\exVim\vim74\compiler\onsgmls.vim	/^let current_compiler = "onsgmls"$/;"	v
current_compiler	C:\exVim\vim74\compiler\pbx.vim	/^let current_compiler = "pbx"$/;"	v
current_compiler	C:\exVim\vim74\compiler\perl.vim	/^let current_compiler = "perl"$/;"	v
current_compiler	C:\exVim\vim74\compiler\php.vim	/^let current_compiler = "php"$/;"	v
current_compiler	C:\exVim\vim74\compiler\pyunit.vim	/^let current_compiler = "pyunit"$/;"	v
current_compiler	C:\exVim\vim74\compiler\rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	C:\exVim\vim74\compiler\rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	C:\exVim\vim74\compiler\rst.vim	/^let current_compiler = "rst"$/;"	v
current_compiler	C:\exVim\vim74\compiler\ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	C:\exVim\vim74\compiler\rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	C:\exVim\vim74\compiler\sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	C:\exVim\vim74\compiler\se.vim	/^let current_compiler = "se"$/;"	v
current_compiler	C:\exVim\vim74\compiler\splint.vim	/^let current_compiler = "splint"$/;"	v
current_compiler	C:\exVim\vim74\compiler\tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	C:\exVim\vim74\compiler\tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	C:\exVim\vim74\compiler\tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	C:\exVim\vim74\compiler\tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	C:\exVim\vim74\compiler\tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	C:\exVim\vim74\compiler\tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	C:\exVim\vim74\compiler\xbuild.vim	/^let current_compiler = "xbuild"$/;"	v
current_compiler	C:\exVim\vim74\compiler\xmllint.vim	/^let current_compiler = "xmllint"$/;"	v
current_compiler	C:\exVim\vim74\compiler\xmlwf.vim	/^let current_compiler = "xmlwf"$/;"	v
current_compiler	C:\exVim\vimfiles\bundle\ex-typescript\compiler\typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_compiler	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	C:\exVim\vimfiles\bundle\vim-matlab\compiler\mlint.vim	/^let current_compiler = "mlint"$/;"	v
current_compiler	C:\exVim\vimfiles\bundle\vjde\compiler\javac_ex.vim	/^let current_compiler = "javac_ex"$/;"	v
current_obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *current_obj;      \/* graph object that pointer is in currently *\/$/;"	m	struct:GVJ_s	access:public
cursor_hl	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:cursor_hl()$/;"	f
cutvalue	C:\exVim\graphviz\include\graphviz\types.h	/^	int cutvalue, tree_index;$/;"	m	struct:Agedgeinfo_t	access:public
cycle	C:\exVim\vim74\ftplugin\gitrebase.vim	/^function! s:cycle()$/;"	f
d	C:\exVim\vim74\macros\less.vim	/^noremap <script> d <C-D><SID>L$/;"	m
d	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! d$/;"	m
d:DOTFONTPATH	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:DOTFONTPATH><STRONG>DOTFONTPATH<\/STRONG><\/A>$/;"	a
d:Damping HREF=#a:Damping	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:Damping HREF=#a:Damping><STRONG>Damping<\/STRONG><\/A>$/;"	a
d:GVBINDIR	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:GVBINDIR><STRONG>GVBINDIR<\/STRONG><\/A>$/;"	a
d:GV_FILE_PATH	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:GV_FILE_PATH><STRONG>GV_FILE_PATH<\/STRONG><\/A>$/;"	a
d:K HREF=#a:K	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:K HREF=#a:K><STRONG>K<\/STRONG><\/A>$/;"	a
d:Mcircle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:Mcircle>Mcircle<\/A>$/;"	a
d:Mdiamond	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:Mdiamond>Mdiamond<\/A>$/;"	a
d:Msquare	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:Msquare>Msquare<\/A>$/;"	a
d:SERVER_NAME	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:SERVER_NAME><STRONG>SERVER_NAME<\/STRONG><\/A>$/;"	a
d:T	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:T><STRONG>-T<\/STRONG><\/A><I>format<\/I>[:<I>renderer<\/I>[:<I>formatter<\/I>]]       $/;"	a
d:URL HREF=#a:URL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:URL HREF=#a:URL><STRONG>URL<\/STRONG><\/A>$/;"	a
d:arrowhead HREF=#a:arrowhead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:arrowhead HREF=#a:arrowhead><STRONG>arrowhead<\/STRONG><\/A>$/;"	a
d:arrowsize HREF=#a:arrowsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:arrowsize HREF=#a:arrowsize><STRONG>arrowsize<\/STRONG><\/A>$/;"	a
d:arrowtail HREF=#a:arrowtail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:arrowtail HREF=#a:arrowtail><STRONG>arrowtail<\/STRONG><\/A>$/;"	a
d:aspect HREF=#a:aspect	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:aspect HREF=#a:aspect><STRONG>aspect<\/STRONG><\/A>$/;"	a
d:bb HREF=#a:bb	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:bb HREF=#a:bb><STRONG>bb<\/STRONG><\/A>$/;"	a
d:bgcolor HREF=#a:bgcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:bgcolor HREF=#a:bgcolor><STRONG>bgcolor<\/STRONG><\/A>$/;"	a
d:bmp HREF=#a:bmp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:bmp HREF=#a:bmp><STRONG>bmp<\/STRONG><\/A>$/;"	a
d:bold	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:bold><TT>bold<\/TT>$/;"	a
d:box	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:box>box<\/A>$/;"	a
d:box3d	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:box3d>box3d<\/A>$/;"	a
d:canon HREF=#a:canon	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:canon HREF=#a:canon><STRONG>canon<\/STRONG><\/A>$/;"	a
d:center HREF=#a:center	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:center HREF=#a:center><STRONG>center<\/STRONG><\/A>$/;"	a
d:charset HREF=#a:charset	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:charset HREF=#a:charset><STRONG>charset<\/STRONG><\/A>$/;"	a
d:circle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:circle>circle<\/A>$/;"	a
d:clusterrank HREF=#a:clusterrank	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:clusterrank HREF=#a:clusterrank><STRONG>clusterrank<\/STRONG><\/A>$/;"	a
d:cmap HREF=#a:cmap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:cmap HREF=#a:cmap><STRONG>cmap<\/STRONG><\/A>$/;"	a
d:cmapx HREF=#a:cmapx	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:cmapx HREF=#a:cmapx><STRONG>cmapx<\/STRONG><\/A>$/;"	a
d:cmapx_np HREF=#a:cmapx_np	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:cmapx_np HREF=#a:cmapx_np><STRONG>cmapx_np<\/STRONG><\/A>$/;"	a
d:color HREF=#a:color	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:color HREF=#a:color><STRONG>color<\/STRONG><\/A>$/;"	a
d:colorscheme HREF=#a:colorscheme	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:colorscheme HREF=#a:colorscheme><STRONG>colorscheme<\/STRONG><\/A>$/;"	a
d:comment HREF=#a:comment	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:comment HREF=#a:comment><STRONG>comment<\/STRONG><\/A>$/;"	a
d:component	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:component>component<\/A>$/;"	a
d:compound HREF=#a:compound	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:compound HREF=#a:compound><STRONG>compound<\/STRONG><\/A>$/;"	a
d:concentrate HREF=#a:concentrate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:concentrate HREF=#a:concentrate><STRONG>concentrate<\/STRONG><\/A>$/;"	a
d:constraint HREF=#a:constraint	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:constraint HREF=#a:constraint><STRONG>constraint<\/STRONG><\/A>$/;"	a
d:dashed	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:dashed><TT>dashed<\/TT>$/;"	a
d:decorate HREF=#a:decorate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:decorate HREF=#a:decorate><STRONG>decorate<\/STRONG><\/A>$/;"	a
d:defaultdist HREF=#a:defaultdist	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:defaultdist HREF=#a:defaultdist><STRONG>defaultdist<\/STRONG><\/A>$/;"	a
d:dia HREF=#a:dia	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:dia HREF=#a:dia><STRONG>dia<\/STRONG><\/A>$/;"	a
d:diagonals	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:diagonals><TT>diagonals<\/TT>$/;"	a
d:diamond	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:diamond>diamond<\/A>$/;"	a
d:dim HREF=#a:dim	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:dim HREF=#a:dim><STRONG>dim<\/STRONG><\/A>$/;"	a
d:dimen HREF=#a:dimen	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:dimen HREF=#a:dimen><STRONG>dimen<\/STRONG><\/A>$/;"	a
d:dir HREF=#a:dir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:dir HREF=#a:dir><STRONG>dir<\/STRONG><\/A>$/;"	a
d:diredgeconstraints HREF=#a:diredgeconstraints	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:diredgeconstraints HREF=#a:diredgeconstraints><STRONG>diredgeconstraints<\/STRONG><\/A>$/;"	a
d:distortion HREF=#a:distortion	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:distortion HREF=#a:distortion><STRONG>distortion<\/STRONG><\/A>$/;"	a
d:dot HREF=#a:dot	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:dot HREF=#a:dot><STRONG>dot<\/STRONG><\/A>$/;"	a
d:dotted	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:dotted><TT>dotted<\/TT>$/;"	a
d:doublecircle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:doublecircle>doublecircle<\/A>$/;"	a
d:doubleoctagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:doubleoctagon>doubleoctagon<\/A>$/;"	a
d:dpi HREF=#a:dpi	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:dpi HREF=#a:dpi><STRONG>dpi<\/STRONG><\/A>$/;"	a
d:edgeURL HREF=#a:edgeURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:edgeURL HREF=#a:edgeURL><STRONG>edgeURL<\/STRONG><\/A>$/;"	a
d:edgehref HREF=#a:edgehref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:edgehref HREF=#a:edgehref><STRONG>edgehref<\/STRONG><\/A>$/;"	a
d:edgetarget HREF=#a:edgetarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:edgetarget HREF=#a:edgetarget><STRONG>edgetarget<\/STRONG><\/A>$/;"	a
d:edgetooltip HREF=#a:edgetooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:edgetooltip HREF=#a:edgetooltip><STRONG>edgetooltip<\/STRONG><\/A>$/;"	a
d:egg	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:egg>egg<\/A>$/;"	a
d:ellipse	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:ellipse>ellipse<\/A>$/;"	a
d:eps HREF=#a:eps	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:eps HREF=#a:eps><STRONG>eps<\/STRONG><\/A>$/;"	a
d:epsilon HREF=#a:epsilon	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:epsilon HREF=#a:epsilon><STRONG>epsilon<\/STRONG><\/A>$/;"	a
d:esep HREF=#a:esep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:esep HREF=#a:esep><STRONG>esep<\/STRONG><\/A>$/;"	a
d:fig HREF=#a:fig	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:fig HREF=#a:fig><STRONG>fig<\/STRONG><\/A>$/;"	a
d:fillcolor HREF=#a:fillcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fillcolor HREF=#a:fillcolor><STRONG>fillcolor<\/STRONG><\/A>$/;"	a
d:filled	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:filled><TT>filled<\/TT>$/;"	a
d:fixedsize HREF=#a:fixedsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fixedsize HREF=#a:fixedsize><STRONG>fixedsize<\/STRONG><\/A>$/;"	a
d:folder	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:folder>folder<\/A>$/;"	a
d:fontcolor HREF=#a:fontcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fontcolor HREF=#a:fontcolor><STRONG>fontcolor<\/STRONG><\/A>$/;"	a
d:fontname HREF=#a:fontname	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fontname HREF=#a:fontname><STRONG>fontname<\/STRONG><\/A>$/;"	a
d:fontnames HREF=#a:fontnames	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fontnames HREF=#a:fontnames><STRONG>fontnames<\/STRONG><\/A>$/;"	a
d:fontpath HREF=#a:fontpath	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fontpath HREF=#a:fontpath><STRONG>fontpath<\/STRONG><\/A>$/;"	a
d:fontsize HREF=#a:fontsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:fontsize HREF=#a:fontsize><STRONG>fontsize<\/STRONG><\/A>$/;"	a
d:gd HREF=#a:gd	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:gd HREF=#a:gd><STRONG>gd<\/STRONG><\/A>$/;"	a
d:gd2 HREF=#a:gd2	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:gd2 HREF=#a:gd2><STRONG>gd2<\/STRONG><\/A>$/;"	a
d:gif HREF=#a:gif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:gif HREF=#a:gif><STRONG>gif<\/STRONG><\/A>$/;"	a
d:group HREF=#a:group	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:group HREF=#a:group><STRONG>group<\/STRONG><\/A>$/;"	a
d:gtk HREF=#a:gtk	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:gtk HREF=#a:gtk><STRONG>gtk<\/STRONG><\/A>$/;"	a
d:headURL HREF=#a:headURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headURL HREF=#a:headURL><STRONG>headURL<\/STRONG><\/A>$/;"	a
d:headclip HREF=#a:headclip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headclip HREF=#a:headclip><STRONG>headclip<\/STRONG><\/A>$/;"	a
d:headhref HREF=#a:headhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headhref HREF=#a:headhref><STRONG>headhref<\/STRONG><\/A>$/;"	a
d:headlabel HREF=#a:headlabel	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headlabel HREF=#a:headlabel><STRONG>headlabel<\/STRONG><\/A>$/;"	a
d:headport HREF=#a:headport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headport HREF=#a:headport><STRONG>headport<\/STRONG><\/A>$/;"	a
d:headtarget HREF=#a:headtarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headtarget HREF=#a:headtarget><STRONG>headtarget<\/STRONG><\/A>$/;"	a
d:headtooltip HREF=#a:headtooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:headtooltip HREF=#a:headtooltip><STRONG>headtooltip<\/STRONG><\/A>$/;"	a
d:height HREF=#a:height	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:height HREF=#a:height><STRONG>height<\/STRONG><\/A>$/;"	a
d:hexagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:hexagon>hexagon<\/A>$/;"	a
d:house	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:house>house<\/A>$/;"	a
d:hpgl HREF=#a:hpgl	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:hpgl HREF=#a:hpgl><STRONG>hpgl<\/STRONG><\/A>$/;"	a
d:href HREF=#a:href	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:href HREF=#a:href><STRONG>href<\/STRONG><\/A>$/;"	a
d:ico HREF=#a:ico	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:ico HREF=#a:ico><STRONG>ico<\/STRONG><\/A>$/;"	a
d:id HREF=#a:id	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:id HREF=#a:id><STRONG>id<\/STRONG><\/A>$/;"	a
d:image HREF=#a:image	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:image HREF=#a:image><STRONG>image<\/STRONG><\/A>$/;"	a
d:image_fmts	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<H1 align=CENTER><A NAME=d:image_fmts>Image Formats<\/A><\/H1>$/;"	a
d:imagescale HREF=#a:imagescale	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:imagescale HREF=#a:imagescale><STRONG>imagescale<\/STRONG><\/A>$/;"	a
d:imap HREF=#a:imap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:imap HREF=#a:imap><STRONG>imap<\/STRONG><\/A>$/;"	a
d:imap_np HREF=#a:imap_np	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:imap_np HREF=#a:imap_np><STRONG>imap_np<\/STRONG><\/A>$/;"	a
d:invhouse	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:invhouse>invhouse<\/A>$/;"	a
d:invisible	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:invisible><TT>invisible<\/TT>$/;"	a
d:invtrapezium	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:invtrapezium>invtrapezium<\/A>$/;"	a
d:invtriangle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:invtriangle>invtriangle<\/A>$/;"	a
d:ismap HREF=#a:ismap	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:ismap HREF=#a:ismap><STRONG>ismap<\/STRONG><\/A>$/;"	a
d:jpe HREF=#a:jpe	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:jpe HREF=#a:jpe><STRONG>jpe<\/STRONG><\/A>$/;"	a
d:jpeg HREF=#a:jpeg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:jpeg HREF=#a:jpeg><STRONG>jpeg<\/STRONG><\/A>$/;"	a
d:jpg HREF=#a:jpg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:jpg HREF=#a:jpg><STRONG>jpg<\/STRONG><\/A>$/;"	a
d:label HREF=#a:label	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:label HREF=#a:label><STRONG>label<\/STRONG><\/A>$/;"	a
d:labelURL HREF=#a:labelURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelURL HREF=#a:labelURL><STRONG>labelURL<\/STRONG><\/A>$/;"	a
d:labelangle HREF=#a:labelangle	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelangle HREF=#a:labelangle><STRONG>labelangle<\/STRONG><\/A>$/;"	a
d:labeldistance HREF=#a:labeldistance	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labeldistance HREF=#a:labeldistance><STRONG>labeldistance<\/STRONG><\/A>$/;"	a
d:labelfloat HREF=#a:labelfloat	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelfloat HREF=#a:labelfloat><STRONG>labelfloat<\/STRONG><\/A>$/;"	a
d:labelfontcolor HREF=#a:labelfontcolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelfontcolor HREF=#a:labelfontcolor><STRONG>labelfontcolor<\/STRONG><\/A>$/;"	a
d:labelfontname HREF=#a:labelfontname	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelfontname HREF=#a:labelfontname><STRONG>labelfontname<\/STRONG><\/A>$/;"	a
d:labelfontsize HREF=#a:labelfontsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelfontsize HREF=#a:labelfontsize><STRONG>labelfontsize<\/STRONG><\/A>$/;"	a
d:labelhref HREF=#a:labelhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelhref HREF=#a:labelhref><STRONG>labelhref<\/STRONG><\/A>$/;"	a
d:labeljust HREF=#a:labeljust	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labeljust HREF=#a:labeljust><STRONG>labeljust<\/STRONG><\/A>$/;"	a
d:labelloc HREF=#a:labelloc	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labelloc HREF=#a:labelloc><STRONG>labelloc<\/STRONG><\/A>$/;"	a
d:labeltarget HREF=#a:labeltarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labeltarget HREF=#a:labeltarget><STRONG>labeltarget<\/STRONG><\/A>$/;"	a
d:labeltooltip HREF=#a:labeltooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:labeltooltip HREF=#a:labeltooltip><STRONG>labeltooltip<\/STRONG><\/A>$/;"	a
d:landscape HREF=#a:landscape	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:landscape HREF=#a:landscape><STRONG>landscape<\/STRONG><\/A>$/;"	a
d:layer HREF=#a:layer	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:layer HREF=#a:layer><STRONG>layer<\/STRONG><\/A>$/;"	a
d:layers HREF=#a:layers	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:layers HREF=#a:layers><STRONG>layers<\/STRONG><\/A>$/;"	a
d:layersep HREF=#a:layersep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:layersep HREF=#a:layersep><STRONG>layersep<\/STRONG><\/A>$/;"	a
d:layout HREF=#a:layout	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:layout HREF=#a:layout><STRONG>layout<\/STRONG><\/A>$/;"	a
d:len HREF=#a:len	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:len HREF=#a:len><STRONG>len<\/STRONG><\/A>$/;"	a
d:levels HREF=#a:levels	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:levels HREF=#a:levels><STRONG>levels<\/STRONG><\/A>$/;"	a
d:levelsgap HREF=#a:levelsgap	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:levelsgap HREF=#a:levelsgap><STRONG>levelsgap<\/STRONG><\/A>$/;"	a
d:lhead HREF=#a:lhead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:lhead HREF=#a:lhead><STRONG>lhead<\/STRONG><\/A>$/;"	a
d:lp HREF=#a:lp	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:lp HREF=#a:lp><STRONG>lp<\/STRONG><\/A>$/;"	a
d:ltail HREF=#a:ltail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:ltail HREF=#a:ltail><STRONG>ltail<\/STRONG><\/A>$/;"	a
d:margin HREF=#a:margin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:margin HREF=#a:margin><STRONG>margin<\/STRONG><\/A>$/;"	a
d:maxiter HREF=#a:maxiter	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:maxiter HREF=#a:maxiter><STRONG>maxiter<\/STRONG><\/A>$/;"	a
d:mclimit HREF=#a:mclimit	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:mclimit HREF=#a:mclimit><STRONG>mclimit<\/STRONG><\/A>$/;"	a
d:mif HREF=#a:mif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:mif HREF=#a:mif><STRONG>mif<\/STRONG><\/A>$/;"	a
d:mindist HREF=#a:mindist	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:mindist HREF=#a:mindist><STRONG>mindist<\/STRONG><\/A>$/;"	a
d:minlen HREF=#a:minlen	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:minlen HREF=#a:minlen><STRONG>minlen<\/STRONG><\/A>$/;"	a
d:mode HREF=#a:mode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:mode HREF=#a:mode><STRONG>mode<\/STRONG><\/A>$/;"	a
d:model HREF=#a:model	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:model HREF=#a:model><STRONG>model<\/STRONG><\/A>$/;"	a
d:mosek HREF=#a:mosek	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:mosek HREF=#a:mosek><STRONG>mosek<\/STRONG><\/A>$/;"	a
d:mp HREF=#a:mp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:mp HREF=#a:mp><STRONG>mp<\/STRONG><\/A>$/;"	a
d:n	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:n><STRONG>-n<\/STRONG>[<I>num<\/I>]<\/A>      $/;"	a
d:nodesep HREF=#a:nodesep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:nodesep HREF=#a:nodesep><STRONG>nodesep<\/STRONG><\/A>$/;"	a
d:nojustify HREF=#a:nojustify	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:nojustify HREF=#a:nojustify><STRONG>nojustify<\/STRONG><\/A>$/;"	a
d:none	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:none>none<\/A>$/;"	a
d:normalize HREF=#a:normalize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:normalize HREF=#a:normalize><STRONG>normalize<\/STRONG><\/A>$/;"	a
d:note	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:note>note<\/A>$/;"	a
d:nslimit HREF=#a:nslimit	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:nslimit HREF=#a:nslimit><STRONG>nslimit<\/STRONG><\/A>$/;"	a
d:nslimit1 HREF=#a:nslimit1	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^,<DT><A NAME=d:nslimit1 HREF=#a:nslimit1><STRONG>nslimit1<\/STRONG><\/A>$/;"	a
d:octagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:octagon>octagon<\/A>$/;"	a
d:ordering HREF=#a:ordering	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:ordering HREF=#a:ordering><STRONG>ordering<\/STRONG><\/A>$/;"	a
d:orientation HREF=#a:orientation	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:orientation HREF=#a:orientation><STRONG>orientation<\/STRONG><\/A>$/;"	a
d:outputorder HREF=#a:outputorder	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:outputorder HREF=#a:outputorder><STRONG>outputorder<\/STRONG><\/A>$/;"	a
d:overlap HREF=#a:overlap	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:overlap HREF=#a:overlap><STRONG>overlap<\/STRONG><\/A>$/;"	a
d:overlap_scaling HREF=#a:overlap_scaling	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:overlap_scaling HREF=#a:overlap_scaling><STRONG>overlap_scaling<\/STRONG><\/A>$/;"	a
d:pack HREF=#a:pack	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pack HREF=#a:pack><STRONG>pack<\/STRONG><\/A>$/;"	a
d:packmode HREF=#a:packmode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:packmode HREF=#a:packmode><STRONG>packmode<\/STRONG><\/A>$/;"	a
d:pad HREF=#a:pad	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pad HREF=#a:pad><STRONG>pad<\/STRONG><\/A>$/;"	a
d:page HREF=#a:page	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:page HREF=#a:page><STRONG>page<\/STRONG><\/A>$/;"	a
d:pagedir HREF=#a:pagedir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pagedir HREF=#a:pagedir><STRONG>pagedir<\/STRONG><\/A>$/;"	a
d:parallelogram	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:parallelogram>parallelogram<\/A>$/;"	a
d:pcl HREF=#a:pcl	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:pcl HREF=#a:pcl><STRONG>pcl<\/STRONG><\/A>$/;"	a
d:pdf HREF=#a:pdf	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:pdf HREF=#a:pdf><STRONG>pdf<\/STRONG><\/A>$/;"	a
d:pencolor HREF=#a:pencolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pencolor HREF=#a:pencolor><STRONG>pencolor<\/STRONG><\/A>$/;"	a
d:pentagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:pentagon>pentagon<\/A>$/;"	a
d:penwidth HREF=#a:penwidth	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:penwidth HREF=#a:penwidth><STRONG>penwidth<\/STRONG><\/A>$/;"	a
d:peripheries HREF=#a:peripheries	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:peripheries HREF=#a:peripheries><STRONG>peripheries<\/STRONG><\/A>$/;"	a
d:pic HREF=#a:pic	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:pic HREF=#a:pic><STRONG>pic<\/STRONG><\/A>$/;"	a
d:pin HREF=#a:pin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pin HREF=#a:pin><STRONG>pin<\/STRONG><\/A>$/;"	a
d:plain HREF=#a:plain	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:plain HREF=#a:plain><STRONG>plain<\/STRONG><\/A>$/;"	a
d:plain-ext HREF=#a:plain-ext	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:plain-ext HREF=#a:plain-ext><STRONG>plain-ext<\/STRONG><\/A>$/;"	a
d:plaintext	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:plaintext>plaintext<\/A>$/;"	a
d:png HREF=#a:png	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:png HREF=#a:png><STRONG>png<\/STRONG><\/A>$/;"	a
d:point	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:point>point<\/A>$/;"	a
d:polygon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:polygon>polygon<\/A>$/;"	a
d:pos HREF=#a:pos	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:pos HREF=#a:pos><STRONG>pos<\/STRONG><\/A>$/;"	a
d:ps HREF=#a:ps	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:ps HREF=#a:ps><STRONG>ps<\/STRONG><\/A>$/;"	a
d:ps2 HREF=#a:ps2	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:ps2 HREF=#a:ps2><STRONG>ps2<\/STRONG><\/A>$/;"	a
d:quadtree HREF=#a:quadtree	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:quadtree HREF=#a:quadtree><STRONG>quadtree<\/STRONG><\/A>$/;"	a
d:quantum HREF=#a:quantum	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:quantum HREF=#a:quantum><STRONG>quantum<\/STRONG><\/A>$/;"	a
d:rank HREF=#a:rank	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:rank HREF=#a:rank><STRONG>rank<\/STRONG><\/A>$/;"	a
d:rankdir HREF=#a:rankdir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:rankdir HREF=#a:rankdir><STRONG>rankdir<\/STRONG><\/A>$/;"	a
d:ranksep HREF=#a:ranksep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:ranksep HREF=#a:ranksep><STRONG>ranksep<\/STRONG><\/A>$/;"	a
d:ratio HREF=#a:ratio	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:ratio HREF=#a:ratio><STRONG>ratio<\/STRONG><\/A>$/;"	a
d:rect	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:rect>rect<\/A>$/;"	a
d:rectangle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:rectangle>rectangle<\/A>$/;"	a
d:rects HREF=#a:rects	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:rects HREF=#a:rects><STRONG>rects<\/STRONG><\/A>$/;"	a
d:regular HREF=#a:regular	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:regular HREF=#a:regular><STRONG>regular<\/STRONG><\/A>$/;"	a
d:remincross HREF=#a:remincross	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:remincross HREF=#a:remincross><STRONG>remincross<\/STRONG><\/A>$/;"	a
d:repulsiveforce HREF=#a:repulsiveforce	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:repulsiveforce HREF=#a:repulsiveforce><STRONG>repulsiveforce<\/STRONG><\/A>$/;"	a
d:resolution HREF=#a:resolution	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:resolution HREF=#a:resolution><STRONG>resolution<\/STRONG><\/A>$/;"	a
d:root HREF=#a:root	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:root HREF=#a:root><STRONG>root<\/STRONG><\/A>$/;"	a
d:rotate HREF=#a:rotate	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:rotate HREF=#a:rotate><STRONG>rotate<\/STRONG><\/A>$/;"	a
d:rounded	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:rounded><TT>rounded<\/TT>$/;"	a
d:s	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=d:s><STRONG>-s<\/STRONG><\/A>[<I>scale<\/I>]$/;"	a
d:samehead HREF=#a:samehead	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:samehead HREF=#a:samehead><STRONG>samehead<\/STRONG><\/A>$/;"	a
d:sametail HREF=#a:sametail	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:sametail HREF=#a:sametail><STRONG>sametail<\/STRONG><\/A>$/;"	a
d:samplepoints HREF=#a:samplepoints	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:samplepoints HREF=#a:samplepoints><STRONG>samplepoints<\/STRONG><\/A>$/;"	a
d:searchsize HREF=#a:searchsize	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:searchsize HREF=#a:searchsize><STRONG>searchsize<\/STRONG><\/A>$/;"	a
d:sep HREF=#a:sep	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:sep HREF=#a:sep><STRONG>sep<\/STRONG><\/A>$/;"	a
d:septagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:septagon>septagon<\/A>$/;"	a
d:shape HREF=#a:shape	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:shape HREF=#a:shape><STRONG>shape<\/STRONG><\/A>$/;"	a
d:shapefile HREF=#a:shapefile	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:shapefile HREF=#a:shapefile><STRONG>shapefile<\/STRONG><\/A>$/;"	a
d:showboxes HREF=#a:showboxes	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:showboxes HREF=#a:showboxes><STRONG>showboxes<\/STRONG><\/A>$/;"	a
d:sides HREF=#a:sides	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:sides HREF=#a:sides><STRONG>sides<\/STRONG><\/A>$/;"	a
d:size HREF=#a:size	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:size HREF=#a:size><STRONG>size<\/STRONG><\/A>$/;"	a
d:skew HREF=#a:skew	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:skew HREF=#a:skew><STRONG>skew<\/STRONG><\/A>$/;"	a
d:smoothing HREF=#a:smoothing	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:smoothing HREF=#a:smoothing><STRONG>smoothing<\/STRONG><\/A>$/;"	a
d:solid	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<DT><A NAME=d:solid><TT>solid<\/TT>$/;"	a
d:sortv HREF=#a:sortv	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:sortv HREF=#a:sortv><STRONG>sortv<\/STRONG><\/A>$/;"	a
d:splines HREF=#a:splines	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:splines HREF=#a:splines><STRONG>splines<\/STRONG><\/A>$/;"	a
d:start HREF=#a:start	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:start HREF=#a:start><STRONG>start<\/STRONG><\/A>$/;"	a
d:style	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME="d:style">Styles for Nodes<\/A><\/H2>$/;"	a
d:style HREF=#a:style	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:style HREF=#a:style><STRONG>style<\/STRONG><\/A>$/;"	a
d:stylesheet HREF=#a:stylesheet	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:stylesheet HREF=#a:stylesheet><STRONG>stylesheet<\/STRONG><\/A>$/;"	a
d:svg HREF=#a:svg	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:svg HREF=#a:svg><STRONG>svg<\/STRONG><\/A>$/;"	a
d:svgz HREF=#a:svgz	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:svgz HREF=#a:svgz><STRONG>svgz<\/STRONG><\/A>$/;"	a
d:tab	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:tab>tab<\/A>$/;"	a
d:tailURL HREF=#a:tailURL	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailURL HREF=#a:tailURL><STRONG>tailURL<\/STRONG><\/A>$/;"	a
d:tailclip HREF=#a:tailclip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailclip HREF=#a:tailclip><STRONG>tailclip<\/STRONG><\/A>$/;"	a
d:tailhref HREF=#a:tailhref	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailhref HREF=#a:tailhref><STRONG>tailhref<\/STRONG><\/A>$/;"	a
d:taillabel HREF=#a:taillabel	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:taillabel HREF=#a:taillabel><STRONG>taillabel<\/STRONG><\/A>$/;"	a
d:tailport HREF=#a:tailport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailport HREF=#a:tailport><STRONG>tailport<\/STRONG><\/A>$/;"	a
d:tailtarget HREF=#a:tailtarget	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailtarget HREF=#a:tailtarget><STRONG>tailtarget<\/STRONG><\/A>$/;"	a
d:tailtooltip HREF=#a:tailtooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tailtooltip HREF=#a:tailtooltip><STRONG>tailtooltip<\/STRONG><\/A>$/;"	a
d:target HREF=#a:target	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:target HREF=#a:target><STRONG>target<\/STRONG><\/A>$/;"	a
d:tga HREF=#a:tga	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:tga HREF=#a:tga><STRONG>tga<\/STRONG><\/A>$/;"	a
d:tif HREF=#a:tif	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:tif HREF=#a:tif><STRONG>tif<\/STRONG><\/A>$/;"	a
d:tiff HREF=#a:tiff	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:tiff HREF=#a:tiff><STRONG>tiff<\/STRONG><\/A>$/;"	a
d:tooltip HREF=#a:tooltip	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:tooltip HREF=#a:tooltip><STRONG>tooltip<\/STRONG><\/A>$/;"	a
d:trapezium	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:trapezium>trapezium<\/A>$/;"	a
d:triangle	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:triangle>triangle<\/A>$/;"	a
d:tripleoctagon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^    <TD><A NAME=d:tripleoctagon>tripleoctagon<\/A>$/;"	a
d:truecolor HREF=#a:truecolor	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:truecolor HREF=#a:truecolor><STRONG>truecolor<\/STRONG><\/A>$/;"	a
d:vertices HREF=#a:vertices	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:vertices HREF=#a:vertices><STRONG>vertices<\/STRONG><\/A>$/;"	a
d:viewport HREF=#a:viewport	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:viewport HREF=#a:viewport><STRONG>viewport<\/STRONG><\/A>$/;"	a
d:vml HREF=#a:vml	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:vml HREF=#a:vml><STRONG>vml<\/STRONG><\/A>$/;"	a
d:vmlz HREF=#a:vmlz	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:vmlz HREF=#a:vmlz><STRONG>vmlz<\/STRONG><\/A>$/;"	a
d:voro_margin HREF=#a:voro_margin	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:voro_margin HREF=#a:voro_margin><STRONG>voro_margin<\/STRONG><\/A>$/;"	a
d:vrml HREF=#a:vrml	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:vrml HREF=#a:vrml><STRONG>vrml<\/STRONG><\/A>$/;"	a
d:vtx HREF=#a:vtx	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:vtx HREF=#a:vtx><STRONG>vtx<\/STRONG><\/A>$/;"	a
d:wbmp HREF=#a:wbmp	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:wbmp HREF=#a:wbmp><STRONG>wbmp<\/STRONG><\/A>$/;"	a
d:weight HREF=#a:weight	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:weight HREF=#a:weight><STRONG>weight<\/STRONG><\/A>$/;"	a
d:width HREF=#a:width	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:width HREF=#a:width><STRONG>width<\/STRONG><\/A>$/;"	a
d:xdot HREF=#a:xdot	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^,<DT><A NAME=d:xdot HREF=#a:xdot><STRONG>xdot<\/STRONG><\/A>$/;"	a
d:xlib HREF=#a:xlib	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<DT><A NAME=d:xlib HREF=#a:xlib><STRONG>xlib<\/STRONG><\/A>$/;"	a
d:z HREF=#a:z	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=d:z HREF=#a:z><STRONG>z<\/STRONG><\/A>$/;"	a
data	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtdata_t*	data;	\/* sharable data			*\/$/;"	m	struct:_dt_s	access:public
data	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t *data;$/;"	m	struct:Agobj_s	access:public
data	C:\exVim\graphviz\include\graphviz\types.h	/^	char *data;$/;"	m	struct:adjmatrix_t	access:public
data	C:\exVim\graphviz\include\graphviz\types.h	/^	void *data;$/;"	m	struct:path	access:public
data	C:\exVim\graphviz\include\graphviz\usershape.h	/^	void *data;                   \/* data loaded by a renderer *\/$/;"	m	struct:usershape_s	access:public
data	C:\exVim\vimfiles\asm-support\main.asm	/^data segment$/;"	l
datafree	C:\exVim\graphviz\include\graphviz\usershape.h	/^	void (*datafree)(usershape_t *us); \/* renderer's function for freeing data *\/$/;"	m	struct:usershape_s	access:public
datasize	C:\exVim\graphviz\include\graphviz\usershape.h	/^	size_t datasize;              \/* size of data (if mmap'ed) *\/$/;"	m	struct:usershape_s	access:public
db	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Configure	access:default
db	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Simple	access:default
db1	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal db1$/;"	m
db2	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal db2$/;"	m
dcl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Configure	access:default
dcl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Simple	access:default
dd:labelloc HREF=#aa:labelloc	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=dd:labelloc HREF=#aa:labelloc><STRONG>labelloc<\/STRONG><\/A>$/;"	a
dd:orientation HREF=#aa:orientation	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=dd:orientation HREF=#aa:orientation><STRONG>orientation<\/STRONG><\/A>$/;"	a
decada#Make	C:\exVim\vim74\autoload\decada.vim	/^function decada#Make () dict					     " {{{1$/;"	f
decada#New	C:\exVim\vim74\autoload\decada.vim	/^function decada#New ()						     " }}}1$/;"	f
decada#Set_Session	C:\exVim\vim74\autoload\decada.vim	/^function decada#Set_Session (...) dict				     " {{{1$/;"	f
decada#Unit_Name	C:\exVim\vim74\autoload\decada.vim	/^function decada#Unit_Name () dict				     " {{{1$/;"	f
decrease	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:decrease(...)$/;"	f
deepextend	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
def	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^  def: 123$/;"	r
def	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^def::42$/;"	r
def_comment	C:\exVim\vim74\syntax\cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
def_keyword	C:\exVim\vim74\syntax\cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
def_keywords	C:\exVim\vim74\syntax\cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
def_match	C:\exVim\vim74\syntax\cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
def_region	C:\exVim\vim74\syntax\cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
default_blacklist	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^let default_blacklist=['diff', 'gitcommit', 'unite', 'qf', 'help']$/;"	v
default_config	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:default_config() abort$/;"	f
default_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_dpi;$/;"	m	struct:__anon21	access:public
default_mapping	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
default_margin	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_margin;  \/* left\/right, top\/bottom - points *\/$/;"	m	struct:__anon21	access:public
default_pad	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double default_pad;	\/* graph units *\/$/;"	m	struct:__anon20	access:public
default_pagesize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf default_pagesize;\/* default page width, height - points *\/$/;"	m	struct:__anon21	access:public
define_commands	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:define_commands() abort$/;"	f
defined	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean	defined;        \/* if true, edge has port info at this end *\/$/;"	m	struct:port	access:public
defval	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *defval;		\/* its default value for initialization *\/$/;"	m	struct:Agsym_s	access:public
del	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjfn_t del;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
del	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*del) (GVJ_t * job);  \/* can't use "delete" 'cos C++ stole it *\/$/;"	m	struct:gvdevice_callbacks_s	access:public
delay	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	guint delay=1000;$/;"	v
delent	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
delete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
delete	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deleteBookmark	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
deleted	C:\exVim\vim74\spell\fixdup.vim	/^      let deleted += 1$/;"	v
deleted	C:\exVim\vim74\spell\fixdup.vim	/^let deleted = 0$/;"	v
deletefile	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
deletefile	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
demand_loading	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int demand_loading;$/;"	m	struct:GVCOMMON_s	access:public
derpyhooves	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^def derpyhooves(Thread):$/;"	f	access:public
desc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdesc_t desc;$/;"	m	struct:Agraph_s	access:public
destUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^    String destUrl=null;$/;"	f	class:Struts2Configure	access:default
destUrl	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    String destUrl=null;$/;"	f	class:Struts2Simple	access:default
destroy	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void destroy( GtkWidget *widget, gpointer   data );$/;"	p	file:	signature:( GtkWidget *widget, gpointer data )
destroy	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^void destroy( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, gpointer data )
device	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_device_t device;$/;"	m	struct:GVJ_s	access:public
device_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf device_dpi;$/;"	m	struct:GVJ_s	access:public
device_sets_dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean device_sets_dpi;$/;"	m	struct:GVJ_s	access:public
devscale	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  devscale;	\/* composite device to points: dpi, y_goes_down *\/$/;"	m	struct:GVJ_s	access:public
dfpa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! dfpa$/;"	m
dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *dict;		\/* shared dict to interpret attr field *\/$/;"	m	struct:Agattr_s	access:public
dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } dict;$/;"	m	struct:Agdatadict_s	typeref:struct:Agdatadict_s::__anon4	access:public
dict	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *dict;$/;"	m	struct:Agdict_t	access:public
dict2list	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_OPL_syntax_inits	C:\exVim\vim74\syntax\opl.vim	/^    let did_OPL_syntax_inits = 1$/;"	v
did_VRML_syntax_inits	C:\exVim\vim74\syntax\vrml.vim	/^    let did_VRML_syntax_inits = 1$/;"	v
did_a65_syntax_inits	C:\exVim\vim74\syntax\a65.vim	/^    let did_a65_syntax_inits = 1$/;"	v
did_abap_syntax_inits	C:\exVim\vim74\syntax\abap.vim	/^    let did_abap_syntax_inits = 1$/;"	v
did_abaqus_syn_inits	C:\exVim\vim74\syntax\abaqus.vim	/^		let did_abaqus_syn_inits = 1$/;"	v
did_abc_syn_inits	C:\exVim\vim74\syntax\abc.vim	/^    let did_abc_syn_inits = 1$/;"	v
did_abel_syn_inits	C:\exVim\vim74\syntax\abel.vim	/^    let did_abel_syn_inits = 1$/;"	v
did_acedb_syn_inits	C:\exVim\vim74\syntax\acedb.vim	/^    let did_acedb_syn_inits = 1$/;"	v
did_aflex_syntax_inits	C:\exVim\vim74\syntax\aflex.vim	/^      let did_aflex_syntax_inits = 1$/;"	v
did_ahdl_syn_inits	C:\exVim\vim74\syntax\ahdl.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_ahdl_syn_inits	C:\exVim\vim74\syntax\ppd.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_amiga_syn_inits	C:\exVim\vim74\syntax\amiga.vim	/^    let did_amiga_syn_inits = 1$/;"	v
did_aml_syntax_inits	C:\exVim\vim74\syntax\aml.vim	/^    let did_aml_syntax_inits = 1$/;"	v
did_ampl_syntax_inits	C:\exVim\vim74\syntax\ampl.vim	/^    let did_ampl_syntax_inits = 1$/;"	v
did_antlr_syntax_inits	C:\exVim\vim74\syntax\antlr.vim	/^      let did_antlr_syntax_inits = 1$/;"	v
did_apache_syntax_inits	C:\exVim\vim74\syntax\apache.vim	/^		let did_apache_syntax_inits = 1$/;"	v
did_apachestyle_syn_inits	C:\exVim\vim74\syntax\apachestyle.vim	/^    let did_apachestyle_syn_inits = 1$/;"	v
did_asm68k_syntax_inits	C:\exVim\vim74\syntax\asm68k.vim	/^    let did_asm68k_syntax_inits = 1$/;"	v
did_asm_syntax_inits	C:\exVim\vim74\syntax\asm.vim	/^    let did_asm_syntax_inits = 1$/;"	v
did_asn_syn_inits	C:\exVim\vim74\syntax\asn.vim	/^    let did_asn_syn_inits = 1$/;"	v
did_aspvbs_syn_inits	C:\exVim\vim74\syntax\aspvbs.vim	/^    let did_aspvbs_syn_inits = 1$/;"	v
did_atlas_syntax_inits	C:\exVim\vim74\syntax\atlas.vim	/^    let did_atlas_syntax_inits = 1$/;"	v
did_automake_syntax_inits	C:\exVim\vim74\syntax\automake.vim	/^    let did_automake_syntax_inits = 1$/;"	v
did_ave_syn_inits	C:\exVim\vim74\syntax\ave.vim	/^	let did_ave_syn_inits = 1$/;"	v
did_awk_syn_inits	C:\exVim\vim74\syntax\awk.vim	/^    let did_awk_syn_inits = 1$/;"	v
did_ayacc_syntax_inits	C:\exVim\vim74\syntax\ayacc.vim	/^      let did_ayacc_syntax_inits = 1$/;"	v
did_b_syntax_inits	C:\exVim\vim74\syntax\b.vim	/^      let did_b_syntax_inits = 1$/;"	v
did_baan_syn_inits	C:\exVim\vim74\syntax\baan.vim	/^    let did_baan_syn_inits = 1$/;"	v
did_basic_syntax_inits	C:\exVim\vim74\syntax\basic.vim	/^    let did_basic_syntax_inits = 1$/;"	v
did_bc_syntax_inits	C:\exVim\vim74\syntax\bc.vim	/^    let did_bc_syntax_inits = 1$/;"	v
did_bib_syn_inits	C:\exVim\vim74\syntax\bib.vim	/^    let did_bib_syn_inits = 1$/;"	v
did_bind_zone_syn_inits	C:\exVim\vim74\syntax\bindzone.vim	/^    let did_bind_zone_syn_inits = 1$/;"	v
did_blank_syntax_inits	C:\exVim\vim74\syntax\blank.vim	/^    let did_blank_syntax_inits = 1$/;"	v
did_bst_syn_inits	C:\exVim\vim74\syntax\bst.vim	/^        let did_bst_syn_inits = 1$/;"	v
did_btm_syntax_inits	C:\exVim\vim74\syntax\btm.vim	/^    let did_btm_syntax_inits = 1$/;"	v
did_bzr_syn_inits	C:\exVim\vim74\syntax\bzr.vim	/^    let did_bzr_syn_inits = 1$/;"	v
did_c_syn_inits	C:\exVim\vim74\syntax\pf.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cabal_syn_inits	C:\exVim\vim74\syntax\cabal.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cabal_syn_inits	C:\exVim\vim74\syntax\obj.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cfg_syn_inits	C:\exVim\vim74\syntax\cfg.vim	/^	let did_cfg_syn_inits = 1$/;"	v
did_ch_syntax_inits	C:\exVim\vim74\syntax\ch.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_ch_syntax_inits	C:\exVim\vim74\syntax\chill.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_change_syntax_inits	C:\exVim\vim74\syntax\change.vim	/^    let did_change_syntax_inits = 1$/;"	v
did_changelog_syntax_inits	C:\exVim\vim74\syntax\changelog.vim	/^    let did_changelog_syntax_inits = 1$/;"	v
did_cheetah_syn_inits	C:\exVim\vim74\syntax\cheetah.vim	/^		let did_cheetah_syn_inits = 1$/;"	v
did_cl_syntax_inits	C:\exVim\vim74\syntax\cl.vim	/^		let did_cl_syntax_inits = 1$/;"	v
did_clean_syntax_init	C:\exVim\vim74\syntax\clean.vim	/^    let did_clean_syntax_init = 1$/;"	v
did_clipper_syntax_inits	C:\exVim\vim74\syntax\clipper.vim	/^    let did_clipper_syntax_inits = 1$/;"	v
did_cmake_syntax_inits	C:\exVim\vim74\syntax\cmake.vim	/^    let did_cmake_syntax_inits = 1$/;"	v
did_cobol_syntax_inits	C:\exVim\vim74\syntax\cobol.vim	/^    let did_cobol_syntax_inits = 1$/;"	v
did_conf_syntax_inits	C:\exVim\vim74\syntax\asterisk.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_conf_syntax_inits	C:\exVim\vim74\syntax\asteriskvm.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_config_syntax_inits	C:\exVim\vim74\syntax\config.vim	/^    let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	C:\exVim\vim74\syntax\fstab.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	C:\exVim\vim74\syntax\resolv.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	C:\exVim\vim74\syntax\sd.vim	/^                let did_config_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	C:\exVim\vim74\syntax\cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_crontab_syn_inits	C:\exVim\vim74\syntax\crontab.vim	/^    let did_crontab_syn_inits = 1$/;"	v
did_csc_syntax_inits	C:\exVim\vim74\syntax\cdl.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csc_syntax_inits	C:\exVim\vim74\syntax\csc.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csh_syntax_inits	C:\exVim\vim74\syntax\csh.vim	/^    let did_csh_syntax_inits = 1$/;"	v
did_csp_syn_inits	C:\exVim\vim74\syntax\csp.vim	/^    let did_csp_syn_inits = 1$/;"	v
did_css_syn_inits	C:\exVim\vim74\syntax\css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	C:\exVim\vim74\syntax\javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	C:\exVim\vimfiles\bundle\vim-stylus\syntax\stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_cterm_syntax_inits	C:\exVim\vim74\syntax\cterm.vim	/^    let did_cterm_syntax_inits = 1$/;"	v
did_cupl_syn_inits	C:\exVim\vim74\syntax\cupl.vim	/^    let did_cupl_syn_inits = 1$/;"	v
did_cuplsim_syn_inits	C:\exVim\vim74\syntax\cuplsim.vim	/^    let did_cuplsim_syn_inits = 1$/;"	v
did_cvs_syn_inits	C:\exVim\vim74\syntax\cvs.vim	/^		let did_cvs_syn_inits = 1$/;"	v
did_cweb_syntax_inits	C:\exVim\vim74\syntax\cweb.vim	/^    let did_cweb_syntax_inits = 1$/;"	v
did_cynlib_syntax_inits	C:\exVim\vim74\syntax\cynlib.vim	/^    let did_cynlib_syntax_inits = 1$/;"	v
did_cynpp_syntax_inits	C:\exVim\vim74\syntax\cynpp.vim	/^    let did_cynpp_syntax_inits = 1$/;"	v
did_dcd_syntax_inits	C:\exVim\vim74\syntax\dcd.vim	/^    let did_dcd_syntax_inits = 1$/;"	v
did_dcl_syntax_inits	C:\exVim\vim74\syntax\dcl.vim	/^    let did_dcl_syntax_inits = 1$/;"	v
did_debchangelog_syn_inits	C:\exVim\vim74\syntax\debchangelog.vim	/^    let did_debchangelog_syn_inits = 1$/;"	v
did_debcontrol_syn_inits	C:\exVim\vim74\syntax\debcontrol.vim	/^    let did_debcontrol_syn_inits = 1$/;"	v
did_def_syntax_inits	C:\exVim\vim74\syntax\def.vim	/^    let did_def_syntax_inits = 1$/;"	v
did_desc_syntax_inits	C:\exVim\vim74\syntax\desc.vim	/^    let did_desc_syntax_inits = 1$/;"	v
did_diva_syntax_inits	C:\exVim\vim74\syntax\diva.vim	/^		let did_diva_syntax_inits = 1$/;"	v
did_django_syn_inits	C:\exVim\vim74\syntax\django.vim	/^    let did_django_syn_inits = 1$/;"	v
did_docbk_syn_inits	C:\exVim\vim74\syntax\docbk.vim	/^    let did_docbk_syn_inits = 1$/;"	v
did_dosbatch_syntax_inits	C:\exVim\vim74\syntax\dosbatch.vim	/^    let did_dosbatch_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	C:\exVim\vim74\syntax\desktop.vim	/^		let did_dosini_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	C:\exVim\vim74\syntax\dosini.vim	/^    let did_dosini_syntax_inits = 1$/;"	v
did_dot_syntax_inits	C:\exVim\vim74\syntax\dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_dracula_syn_inits	C:\exVim\vim74\syntax\dracula.vim	/^    let did_dracula_syn_inits = 1$/;"	v
did_drchip_netrwlist_syntax	C:\exVim\vim74\syntax\netrw.vim	/^ let did_drchip_netrwlist_syntax= 1$/;"	v
did_drchip_tags_inits	C:\exVim\vim74\syntax\tags.vim	/^    let did_drchip_tags_inits = 1$/;"	v
did_dtd_syn_inits	C:\exVim\vim74\syntax\dtd.vim	/^	let did_dtd_syn_inits = 1$/;"	v
did_dtml_syntax_inits	C:\exVim\vim74\syntax\dtml.vim	/^    let did_dtml_syntax_inits = 1$/;"	v
did_dummy_syn_inits	C:\exVim\vim74\syntax\ist.vim	/^    let did_dummy_syn_inits = 1$/;"	v
did_dylan_intr_syntax_inits	C:\exVim\vim74\syntax\dylanintr.vim	/^    let did_dylan_intr_syntax_inits = 1$/;"	v
did_dylan_lid_syntax_inits	C:\exVim\vim74\syntax\dylanlid.vim	/^    let did_dylan_lid_syntax_inits = 1$/;"	v
did_dylan_syntax_inits	C:\exVim\vim74\syntax\dylan.vim	/^    let did_dylan_syntax_inits = 1$/;"	v
did_ecd_syn_inits	C:\exVim\vim74\syntax\ecd.vim	/^    let did_ecd_syn_inits = 1$/;"	v
did_edif_syntax_inits	C:\exVim\vim74\syntax\edif.vim	/^    let did_edif_syntax_inits = 1$/;"	v
did_eiffel_syntax_inits	C:\exVim\vim74\syntax\eiffel.vim	/^    let did_eiffel_syntax_inits = 1$/;"	v
did_elf_syn_inits	C:\exVim\vim74\syntax\elf.vim	/^		let did_elf_syn_inits = 1$/;"	v
did_elmfilt_syntax_inits	C:\exVim\vim74\syntax\elmfilt.vim	/^    let did_elmfilt_syntax_inits = 1$/;"	v
did_erlang_inits	C:\exVim\vim74\syntax\erlang.vim	/^    let did_erlang_inits = 1$/;"	v
did_esqlc_syntax_inits	C:\exVim\vim74\syntax\esqlc.vim	/^    let did_esqlc_syntax_inits = 1$/;"	v
did_esterel_syntax_inits	C:\exVim\vim74\syntax\esterel.vim	/^    let did_esterel_syntax_inits = 1$/;"	v
did_exim_syntax_inits	C:\exVim\vim74\syntax\exim.vim	/^		let did_exim_syntax_inits = 1$/;"	v
did_expect_syntax_inits	C:\exVim\vim74\syntax\expect.vim	/^    let did_expect_syntax_inits = 1$/;"	v
did_exports_syntax_inits	C:\exVim\vim74\syntax\exports.vim	/^    let did_exports_syntax_inits = 1$/;"	v
did_fdcc_syn_inits	C:\exVim\vim74\syntax\fdcc.vim	/^    let did_fdcc_syn_inits = 1$/;"	v
did_fgl_syntax_inits	C:\exVim\vim74\syntax\fgl.vim	/^    let did_fgl_syntax_inits = 1$/;"	v
did_focexec_syntax_inits	C:\exVim\vim74\syntax\focexec.vim	/^    let did_focexec_syntax_inits = 1$/;"	v
did_form_syn_inits	C:\exVim\vim74\syntax\form.vim	/^    let did_form_syn_inits = 1$/;"	v
did_forth_syn_inits	C:\exVim\vim74\syntax\forth.vim	/^	let did_forth_syn_inits = 1$/;"	v
did_foxpro_syn_inits	C:\exVim\vim74\syntax\foxpro.vim	/^	let did_foxpro_syn_inits = 1$/;"	v
did_gdb_syn_inits	C:\exVim\vim74\syntax\gdb.vim	/^    let did_gdb_syn_inits = 1$/;"	v
did_gdmo_syntax_inits	C:\exVim\vim74\syntax\gdmo.vim	/^    let did_gdmo_syntax_inits = 1$/;"	v
did_gedcom_syntax_inits	C:\exVim\vim74\syntax\gedcom.vim	/^    let did_gedcom_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	C:\exVim\vim74\syntax\gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_gp_syn_inits	C:\exVim\vim74\syntax\gp.vim	/^    let did_gp_syn_inits = 1$/;"	v
did_groovy_syn_inits	C:\exVim\vim74\syntax\groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_gs_syn_inits	C:\exVim\vim74\syntax\grads.vim	/^	let did_gs_syn_inits = 1$/;"	v
did_gtkrc_syntax_inits	C:\exVim\vim74\syntax\gkrellmrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_gtkrc_syntax_inits	C:\exVim\vim74\syntax\gtkrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_hamster_syn_inits	C:\exVim\vim74\syntax\hamster.vim	/^        let did_hamster_syn_inits = 1$/;"	v
did_hb_syntax_inits	C:\exVim\vim74\syntax\hb.vim	/^    let did_hb_syntax_inits = 1$/;"	v
did_hercules_syntax_inits	C:\exVim\vim74\syntax\hercules.vim	/^    let did_hercules_syntax_inits = 1$/;"	v
did_hex_syntax_inits	C:\exVim\vim74\syntax\hex.vim	/^    let did_hex_syntax_inits = 1$/;"	v
did_hitachi_syntax_inits	C:\exVim\vim74\syntax\asmh8300.vim	/^    let did_hitachi_syntax_inits = 1$/;"	v
did_hog_syn_inits	C:\exVim\vim74\syntax\hog.vim	/^    let did_hog_syn_inits = 1$/;"	v
did_hs_syntax_inits	C:\exVim\vim74\syntax\haskell.vim	/^    let did_hs_syntax_inits = 1$/;"	v
did_html_syn_inits	C:\exVim\vim74\syntax\html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_html_syn_inits	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_htmlos_syn_inits	C:\exVim\vim74\syntax\htmlos.vim	/^    let did_htmlos_syn_inits = 1$/;"	v
did_ia64_syn_inits	C:\exVim\vim74\syntax\ia64.vim	/^		let did_ia64_syn_inits = 1$/;"	v
did_icon_syn_inits	C:\exVim\vim74\syntax\icon.vim	/^    let did_icon_syn_inits = 1$/;"	v
did_idl_syntax_inits	C:\exVim\vim74\syntax\idl.vim	/^    let did_idl_syntax_inits = 1$/;"	v
did_idlang_syn_inits	C:\exVim\vim74\syntax\idlang.vim	/^    let did_idlang_syn_inits = 1$/;"	v
did_indent_on	C:\exVim\vim74\indent.vim	/^let did_indent_on = 1$/;"	v
did_inform_syn_inits	C:\exVim\vim74\syntax\inform.vim	/^    let did_inform_syn_inits = 1$/;"	v
did_inittab_syntax_inits	C:\exVim\vim74\syntax\inittab.vim	/^    let did_inittab_syntax_inits = 1$/;"	v
did_install_default_menus	C:\exVim\vim74\menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	C:\exVim\vim74\menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_is_syntax_inits	C:\exVim\vim74\syntax\ishd.vim	/^    let did_is_syntax_inits = 1$/;"	v
did_iss_syntax_inits	C:\exVim\vim74\syntax\iss.vim	/^    let did_iss_syntax_inits = 1$/;"	v
did_jal_syn_inits	C:\exVim\vim74\syntax\jal.vim	/^  let did_jal_syn_inits = 1$/;"	v
did_jam_syn_inits	C:\exVim\vim74\syntax\jam.vim	/^    let did_jam_syn_inits = 1$/;"	v
did_jargon_syntax_inits	C:\exVim\vim74\syntax\jargon.vim	/^		let did_jargon_syntax_inits = 1$/;"	v
did_java_syn_inits	C:\exVim\vim74\syntax\java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_java_syn_inits	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_javascript_syn_inits	C:\exVim\vim74\syntax\javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jess_syntax_inits	C:\exVim\vim74\syntax\jess.vim	/^    let did_jess_syntax_inits = 1$/;"	v
did_jgraph_syn_inits	C:\exVim\vim74\syntax\jgraph.vim	/^    let did_jgraph_syn_inits = 1$/;"	v
did_jproperties_syntax_inits	C:\exVim\vim74\syntax\jproperties.vim	/^    let did_jproperties_syntax_inits = 1$/;"	v
did_json_syn_inits	C:\exVim\vim74\syntax\json.vim	/^    let did_json_syn_inits = 1$/;"	v
did_jsp_syn_inits	C:\exVim\vim74\syntax\jsp.vim	/^    let did_jsp_syn_inits = 1$/;"	v
did_kix_syn_inits	C:\exVim\vim74\syntax\kix.vim	/^		let did_kix_syn_inits=1$/;"	v
did_kscript_syntax_inits	C:\exVim\vim74\syntax\kscript.vim	/^    let did_kscript_syntax_inits = 1$/;"	v
did_kwt_syn_inits	C:\exVim\vim74\syntax\kwt.vim	/^	let did_kwt_syn_inits = 1$/;"	v
did_lace_syntax_inits	C:\exVim\vim74\syntax\lace.vim	/^    let did_lace_syntax_inits = 1$/;"	v
did_latte_syntax_inits	C:\exVim\vim74\syntax\latte.vim	/^    let did_latte_syntax_inits = 1$/;"	v
did_ldif_syn_inits	C:\exVim\vim74\syntax\ldif.vim	/^    let did_ldif_syn_inits = 1$/;"	v
did_lifelines_syn_inits	C:\exVim\vim74\syntax\lifelines.vim	/^    let did_lifelines_syn_inits = 1$/;"	v
did_lilo_syntax_inits	C:\exVim\vim74\syntax\lilo.vim	/^    let did_lilo_syntax_inits = 1$/;"	v
did_lite_syn_inits	C:\exVim\vim74\syntax\lite.vim	/^    let did_lite_syn_inits = 1$/;"	v
did_load_filetypes	C:\exVim\vim74\filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_ftplugin	C:\exVim\vim74\ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_logtalk_syn_inits	C:\exVim\vim74\syntax\logtalk.vim	/^		let did_logtalk_syn_inits = 1$/;"	v
did_lotos_syntax_inits	C:\exVim\vim74\syntax\lotos.vim	/^    let did_lotos_syntax_inits = 1$/;"	v
did_lout_syn_inits	C:\exVim\vim74\syntax\lout.vim	/^		let did_lout_syn_inits = 1$/;"	v
did_lpc_syn_inits	C:\exVim\vim74\syntax\lpc.vim	/^    let did_lpc_syn_inits = 1$/;"	v
did_lprolog_syntax_inits	C:\exVim\vim74\syntax\lprolog.vim	/^    let did_lprolog_syntax_inits = 1$/;"	v
did_lscript_syntax_inits	C:\exVim\vim74\syntax\lscript.vim	/^    let did_lscript_syntax_inits = 1$/;"	v
did_lss_syntax_inits	C:\exVim\vim74\syntax\lss.vim	/^    let did_lss_syntax_inits = 1$/;"	v
did_lua_syntax_inits	C:\exVim\vim74\syntax\lua.vim	/^    let did_lua_syntax_inits = 1$/;"	v
did_m4_syn_inits	C:\exVim\vim74\syntax\m4.vim	/^    let did_m4_syn_inits = 1$/;"	v
did_macro_syntax_inits	C:\exVim\vim74\syntax\vmasm.vim	/^    let did_macro_syntax_inits = 1$/;"	v
did_make_syn_inits	C:\exVim\vim74\syntax\make.vim	/^    let did_make_syn_inits = 1$/;"	v
did_man_syn_inits	C:\exVim\vim74\syntax\man.vim	/^    let did_man_syn_inits = 1$/;"	v
did_maplev_syntax_inits	C:\exVim\vim74\syntax\maple.vim	/^    let did_maplev_syntax_inits = 1$/;"	v
did_mason_syn_inits	C:\exVim\vim74\syntax\mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_master_syntax_inits	C:\exVim\vim74\syntax\master.vim	/^    let did_master_syntax_inits = 1$/;"	v
did_matlab_syntax_inits	C:\exVim\vim74\syntax\matlab.vim	/^    let did_matlab_syntax_inits = 1$/;"	v
did_matlab_syntax_inits	C:\exVim\vimfiles\bundle\vim-matlab\syntax\matlab.vim	/^		let did_matlab_syntax_inits = 1$/;"	v
did_maxima_syntax_inits	C:\exVim\vim74\syntax\maxima.vim	/^    let did_maxima_syntax_inits = 1$/;"	v
did_mel_syntax_inits	C:\exVim\vim74\syntax\mel.vim	/^    let did_mel_syntax_inits = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_af_af.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_chinese_gb.936.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_chinese_taiwan.950.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_en_gb.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ko_kr.euckr.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ko_kr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_pt_br.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sk_sk.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_slovak_slovak_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_zh_cn.gb2312.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_zh_cn.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	C:\exVim\vim74\lang\menu_zh_tw.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_mf_syntax_inits	C:\exVim\vim74\syntax\mf.vim	/^    let did_mf_syntax_inits = 1$/;"	v
did_mgl_syn_inits	C:\exVim\vim74\syntax\mgl.vim	/^    let did_mgl_syn_inits = 1$/;"	v
did_mgp_syn_inits	C:\exVim\vim74\syntax\mgp.vim	/^    let did_mgp_syn_inits = 1$/;"	v
did_mgp_syn_inits	C:\exVim\vim74\syntax\mgp.vim	/^  let did_mgp_syn_inits = 1$/;"	v
did_mma_syn_inits	C:\exVim\vim74\syntax\mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_mmix_syntax_inits	C:\exVim\vim74\syntax\mmix.vim	/^    let did_mmix_syntax_inits = 1$/;"	v
did_mmp_syntax_inits	C:\exVim\vim74\syntax\mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_modsim3_syntax_inits	C:\exVim\vim74\syntax\modsim3.vim	/^    let did_modsim3_syntax_inits = 1$/;"	v
did_modula2_syntax_inits	C:\exVim\vim74\syntax\modula2.vim	/^    let did_modula2_syntax_inits = 1$/;"	v
did_modula3_syntax_inits	C:\exVim\vim74\syntax\modula3.vim	/^    let did_modula3_syntax_inits = 1$/;"	v
did_monk_syntax_inits	C:\exVim\vim74\syntax\monk.vim	/^    let did_monk_syntax_inits = 1$/;"	v
did_mp_syntax_inits	C:\exVim\vim74\syntax\mp.vim	/^    let did_mp_syntax_inits = 1$/;"	v
did_msidl_syntax_inits	C:\exVim\vim74\syntax\msidl.vim	/^    let did_msidl_syntax_inits = 1$/;"	v
did_msql_syn_inits	C:\exVim\vim74\syntax\msql.vim	/^    let did_msql_syn_inits = 1$/;"	v
did_mupad_syntax_inits	C:\exVim\vim74\syntax\mupad.vim	/^    let did_mupad_syntax_inits = 1$/;"	v
did_mush_syntax_inits	C:\exVim\vim74\syntax\mush.vim	/^    let did_mush_syntax_inits = 1$/;"	v
did_muttrc_syntax_inits	C:\exVim\vim74\syntax\muttrc.vim	/^    let did_muttrc_syntax_inits = 1$/;"	v
did_mysql_syn_inits	C:\exVim\vim74\syntax\mysql.vim	/^    let did_mysql_syn_inits = 1$/;"	v
did_named_syn_inits	C:\exVim\vim74\syntax\named.vim	/^    let did_named_syn_inits = 1$/;"	v
did_nasm_syntax_inits	C:\exVim\vim74\syntax\nasm.vim	/^    let did_nasm_syntax_inits = 1$/;"	v
did_nastran_syntax_inits	C:\exVim\vim74\syntax\nastran.vim	/^     let did_nastran_syntax_inits = 1$/;"	v
did_natural_syntax_inits	C:\exVim\vim74\syntax\natural.vim	/^    let did_natural_syntax_inits = 1$/;"	v
did_ncf_syntax_inits	C:\exVim\vim74\syntax\ncf.vim	/^	let did_ncf_syntax_inits = 1$/;"	v
did_nqc_syn_inits	C:\exVim\vim74\syntax\nqc.vim	/^    let did_nqc_syn_inits = 1$/;"	v
did_nroff_syn_inits	C:\exVim\vim74\syntax\nroff.vim	/^		let did_nroff_syn_inits = 1$/;"	v
did_nsys_syn_inits	C:\exVim\vim74\syntax\nsis.vim	/^    let did_nsys_syn_inits = 1$/;"	v
did_ocaml_syntax_inits	C:\exVim\vim74\syntax\ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_occam_syntax_inits	C:\exVim\vim74\syntax\occam.vim	/^    let did_occam_syntax_inits = 1$/;"	v
did_omnimark_syntax_inits	C:\exVim\vim74\syntax\omnimark.vim	/^    let did_omnimark_syntax_inits = 1$/;"	v
did_openroad_syntax_inits	C:\exVim\vim74\syntax\openroad.vim	/^		let did_openroad_syntax_inits = 1$/;"	v
did_optwin_syntax_inits	C:\exVim\vim74\optwin.vim	/^    let did_optwin_syntax_inits = 1$/;"	v
did_ora_syn_inits	C:\exVim\vim74\syntax\ora.vim	/^    let did_ora_syn_inits = 1$/;"	v
did_pascal_syn_inits	C:\exVim\vim74\syntax\pascal.vim	/^    let did_pascal_syn_inits = 1$/;"	v
did_pcap_syntax_inits	C:\exVim\vim74\syntax\pcap.vim	/^    let did_pcap_syntax_inits = 1$/;"	v
did_pccts_syntax_inits	C:\exVim\vim74\syntax\pccts.vim	/^    let did_pccts_syntax_inits = 1$/;"	v
did_perl6_syntax_inits	C:\exVim\vim74\syntax\perl6.vim	/^        let did_perl6_syntax_inits = 1$/;"	v
did_php_syn_inits	C:\exVim\vim74\syntax\php.vim	/^    let did_php_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	C:\exVim\vim74\syntax\pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_pike_syntax_inits	C:\exVim\vim74\syntax\pike.vim	/^    let did_pike_syntax_inits = 1$/;"	v
did_pilrc_syntax_inits	C:\exVim\vim74\syntax\pilrc.vim	/^	let did_pilrc_syntax_inits = 1$/;"	v
did_pine_syn_inits	C:\exVim\vim74\syntax\pine.vim	/^    let did_pine_syn_inits = 1$/;"	v
did_pl1_syn_inits	C:\exVim\vim74\syntax\pli.vim	/^        let did_pl1_syn_inits = 1$/;"	v
did_plm_syntax_inits	C:\exVim\vim74\syntax\plm.vim	/^    let did_plm_syntax_inits = 1$/;"	v
did_plsql_syn_inits	C:\exVim\vim74\syntax\plsql.vim	/^    let did_plsql_syn_inits = 1$/;"	v
did_po_syn_inits	C:\exVim\vim74\syntax\po.vim	/^    let did_po_syn_inits = 1$/;"	v
did_pod_syntax_inits	C:\exVim\vim74\syntax\pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_postscr_syntax_inits	C:\exVim\vim74\syntax\postscr.vim	/^    let did_postscr_syntax_inits = 1$/;"	v
did_ppwiz_syn_inits	C:\exVim\vim74\syntax\ppwiz.vim	/^		let did_ppwiz_syn_inits = 1$/;"	v
did_prescribe_syn_inits	C:\exVim\vim74\syntax\prescribe.vim	/^    let did_prescribe_syn_inits = 1$/;"	v
did_procmail_syntax_inits	C:\exVim\vim74\syntax\procmail.vim	/^    let did_procmail_syntax_inits = 1$/;"	v
did_progress_syntax_inits	C:\exVim\vim74\syntax\progress.vim	/^		let did_progress_syntax_inits = 1$/;"	v
did_prolog_syn_inits	C:\exVim\vim74\syntax\prolog.vim	/^    let did_prolog_syn_inits = 1$/;"	v
did_psf_syntax_inits	C:\exVim\vim74\syntax\psf.vim	/^    let did_psf_syntax_inits = 1$/;"	v
did_ptcap_syntax_inits	C:\exVim\vim74\syntax\ptcap.vim	/^	let did_ptcap_syntax_inits = 1$/;"	v
did_purifyLog_syntax_inits	C:\exVim\vim74\syntax\purifylog.vim	/^    let did_purifyLog_syntax_inits = 1$/;"	v
did_pyrex_syntax_inits	C:\exVim\vim74\syntax\pyrex.vim	/^    let did_pyrex_syntax_inits = 1$/;"	v
did_python_syn_inits	C:\exVim\vim74\syntax\python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_python_syn_inits	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_r_syn_inits	C:\exVim\vim74\syntax\eviews.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	C:\exVim\vim74\syntax\gretl.vim	/^    let did_r_syn_inits = 1$/;"	v
did_radiance_syn_inits	C:\exVim\vim74\syntax\radiance.vim	/^    let did_radiance_syn_inits = 1$/;"	v
did_ratpoison_syn_inits	C:\exVim\vim74\syntax\ratpoison.vim	/^    let did_ratpoison_syn_inits = 1$/;"	v
did_rc_syntax_inits	C:\exVim\vim74\syntax\rc.vim	/^    let did_rc_syntax_inits = 1$/;"	v
did_rcs_syn_inits	C:\exVim\vim74\syntax\rcs.vim	/^    let did_rcs_syn_inits = 1$/;"	v
did_rcslog_syntax_inits	C:\exVim\vim74\syntax\rcslog.vim	/^    let did_rcslog_syntax_inits = 1$/;"	v
did_rebol_syntax_inits	C:\exVim\vim74\syntax\rebol.vim	/^    let did_rebol_syntax_inits = 1$/;"	v
did_registry_syntax_inits	C:\exVim\vim74\syntax\registry.vim	/^    let did_registry_syntax_inits = 1$/;"	v
did_remind_syn_inits	C:\exVim\vim74\syntax\remind.vim	/^    let did_remind_syn_inits = 1$/;"	v
did_reva_syntax_inits	C:\exVim\vim74\syntax\reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rexx_syn_inits	C:\exVim\vim74\syntax\rexx.vim	/^    let did_rexx_syn_inits = 1$/;"	v
did_rhelp_syntax_inits	C:\exVim\vim74\syntax\rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_rib_syntax_inits	C:\exVim\vim74\syntax\rib.vim	/^    let did_rib_syntax_inits = 1$/;"	v
did_robots_syntax_inits	C:\exVim\vim74\syntax\robots.vim	/^    let did_robots_syntax_inits = 1$/;"	v
did_rpcgen_syntax_inits	C:\exVim\vim74\syntax\rpcgen.vim	/^    let did_rpcgen_syntax_inits = 1$/;"	v
did_rpl_syntax_inits	C:\exVim\vim74\syntax\rpl.vim	/^    let did_rpl_syntax_inits = 1$/;"	v
did_rtf_syntax_inits	C:\exVim\vim74\syntax\rtf.vim	/^    let did_rtf_syntax_inits = 1$/;"	v
did_samba_syn_inits	C:\exVim\vim74\syntax\samba.vim	/^    let did_samba_syn_inits = 1$/;"	v
did_sas_syntax_inits	C:\exVim\vim74\syntax\sas.vim	/^      let did_sas_syntax_inits = 1$/;"	v
did_sather_syn_inits	C:\exVim\vim74\syntax\sather.vim	/^    let did_sather_syn_inits = 1$/;"	v
did_scheme_syntax_inits	C:\exVim\vim74\syntax\scheme.vim	/^    let did_scheme_syntax_inits = 1$/;"	v
did_scilab_syntax_inits	C:\exVim\vim74\syntax\scilab.vim	/^		let did_scilab_syntax_inits = 1$/;"	v
did_sdl_syn_inits	C:\exVim\vim74\syntax\sdl.vim	/^	let did_sdl_syn_inits = 1$/;"	v
did_sed_syntax_inits	C:\exVim\vim74\syntax\sed.vim	/^	let did_sed_syntax_inits = 1$/;"	v
did_sgmldecl_syntax_init	C:\exVim\vim74\syntax\sgmldecl.vim	/^    let did_sgmldecl_syntax_init = 1$/;"	v
did_sgmllnx_syn_inits	C:\exVim\vim74\syntax\sgmllnx.vim	/^    let did_sgmllnx_syn_inits = 1$/;"	v
did_shader_syntax_inits	C:\exVim\vimfiles\bundle\ex-config\syntax\shader.vim	/^    let did_shader_syntax_inits = 1$/;"	v
did_sicad_syntax_inits	C:\exVim\vim74\syntax\sicad.vim	/^    let did_sicad_syntax_inits = 1$/;"	v
did_simula_syntax_inits	C:\exVim\vim74\syntax\simula.vim	/^	let did_simula_syntax_inits = 1$/;"	v
did_sinda_syntax_inits	C:\exVim\vim74\syntax\sinda.vim	/^    let did_sinda_syntax_inits = 1$/;"	v
did_sindacmp_syntax_inits	C:\exVim\vim74\syntax\sindacmp.vim	/^    let did_sindacmp_syntax_inits = 1$/;"	v
did_sindaout_syntax_inits	C:\exVim\vim74\syntax\sindaout.vim	/^    let did_sindaout_syntax_inits = 1$/;"	v
did_skill_syntax_inits	C:\exVim\vim74\syntax\skill.vim	/^    let did_skill_syntax_inits = 1$/;"	v
did_sl_syntax_inits	C:\exVim\vim74\syntax\sl.vim	/^    let did_sl_syntax_inits = 1$/;"	v
did_slang_syntax_inits	C:\exVim\vim74\syntax\slang.vim	/^    let did_slang_syntax_inits = 1$/;"	v
did_slice_syn_inits	C:\exVim\vim74\syntax\slice.vim	/^    let did_slice_syn_inits = 1$/;"	v
did_slrnrc_syntax_inits	C:\exVim\vim74\syntax\slrnrc.vim	/^    let did_slrnrc_syntax_inits = 1$/;"	v
did_slrnsc_syntax_inits	C:\exVim\vim74\syntax\slrnsc.vim	/^    let did_slrnsc_syntax_inits = 1$/;"	v
did_smarty_syn_inits	C:\exVim\vim74\syntax\smarty.vim	/^    let did_smarty_syn_inits = 1$/;"	v
did_smil_syntax_inits	C:\exVim\vim74\syntax\sm.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smil_syntax_inits	C:\exVim\vim74\syntax\smil.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smith_syntax_inits	C:\exVim\vim74\syntax\smith.vim	/^    let did_smith_syntax_inits = 1$/;"	v
did_sml_syntax_inits	C:\exVim\vim74\syntax\sml.vim	/^    let did_sml_syntax_inits = 1$/;"	v
did_snnsnet_syn_inits	C:\exVim\vim74\syntax\snnsnet.vim	/^    let did_snnsnet_syn_inits = 1$/;"	v
did_snnspat_syn_inits	C:\exVim\vim74\syntax\snnspat.vim	/^    let did_snnspat_syn_inits = 1$/;"	v
did_snnsres_syn_inits	C:\exVim\vim74\syntax\snnsres.vim	/^    let did_snnsres_syn_inits = 1$/;"	v
did_snobol4_syntax_inits	C:\exVim\vim74\syntax\snobol4.vim	/^    let did_snobol4_syntax_inits = 1$/;"	v
did_spec_syntax_inits	C:\exVim\vim74\syntax\spec.vim	/^    let did_spec_syntax_inits = 1$/;"	v
did_specman_syn_inits	C:\exVim\vim74\syntax\specman.vim	/^    let did_specman_syn_inits = 1$/;"	v
did_spice_syntax_inits	C:\exVim\vim74\syntax\spice.vim	/^    let did_spice_syntax_inits = 1$/;"	v
did_splint_syntax_inits	C:\exVim\vim74\syntax\splint.vim	/^    let did_splint_syntax_inits = 1$/;"	v
did_spup_syn_inits	C:\exVim\vim74\syntax\spup.vim	/^	let did_spup_syn_inits = 1$/;"	v
did_sql_syn_inits	C:\exVim\vim74\syntax\sqlinformix.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	C:\exVim\vim74\syntax\sqloracle.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sqlforms_syn_inits	C:\exVim\vim74\syntax\sqlforms.vim	/^	let did_sqlforms_syn_inits = 1$/;"	v
did_sqlj_syn_inits	C:\exVim\vim74\syntax\sqlj.vim	/^    let did_sqlj_syn_inits = 1$/;"	v
did_sqr_syn_inits	C:\exVim\vim74\syntax\sqr.vim	/^    let did_sqr_syn_inits = 1$/;"	v
did_squid_syntax_inits	C:\exVim\vim74\syntax\squid.vim	/^    let did_squid_syntax_inits = 1$/;"	v
did_sshconfig_syntax_inits	C:\exVim\vim74\syntax\sshconfig.vim	/^    let did_sshconfig_syntax_inits = 1$/;"	v
did_sshdconfig_syntax_inits	C:\exVim\vim74\syntax\sshdconfig.vim	/^    let did_sshdconfig_syntax_inits = 1$/;"	v
did_st_syntax_inits	C:\exVim\vim74\syntax\st.vim	/^    let did_st_syntax_inits = 1$/;"	v
did_stp_syn_inits	C:\exVim\vim74\syntax\stp.vim	/^    let did_stp_syn_inits = 1$/;"	v
did_strace_syntax_inits	C:\exVim\vim74\syntax\strace.vim	/^		let did_strace_syntax_inits = 1$/;"	v
did_svn_syn_inits	C:\exVim\vim74\syntax\svn.vim	/^    let did_svn_syn_inits = 1$/;"	v
did_systemverilog_syn_inits	C:\exVim\vim74\syntax\systemverilog.vim	/^      let did_systemverilog_syn_inits = 1$/;"	v
did_tads_syn_inits	C:\exVim\vim74\syntax\tads.vim	/^    let did_tads_syn_inits = 1$/;"	v
did_tak_syntax_inits	C:\exVim\vim74\syntax\tak.vim	/^    let did_tak_syntax_inits = 1$/;"	v
did_takcmp_syntax_inits	C:\exVim\vim74\syntax\takcmp.vim	/^    let did_takcmp_syntax_inits = 1$/;"	v
did_takout_syntax_inits	C:\exVim\vim74\syntax\takout.vim	/^    let did_takout_syntax_inits = 1$/;"	v
did_tasm_syntax_inits	C:\exVim\vim74\syntax\tasm.vim	/^    let did_tasm_syntax_inits = 1$/;"	v
did_tcl_syntax_inits	C:\exVim\vim74\syntax\tcl.vim	/^    let did_tcl_syntax_inits = 1$/;"	v
did_tex_syntax_inits	C:\exVim\vim74\syntax\lhaskell.vim	/^    let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	C:\exVim\vim74\syntax\tex.vim	/^ let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	C:\exVim\vim74\syntax\tex.vim	/^ let did_tex_syntax_inits= 2$/;"	v
did_texinfo_syn_inits	C:\exVim\vim74\syntax\texinfo.vim	/^    let did_texinfo_syn_inits = 1$/;"	v
did_texmf_syntax_inits	C:\exVim\vim74\syntax\texmf.vim	/^    let did_texmf_syntax_inits = 1$/;"	v
did_tf_syn_inits	C:\exVim\vim74\syntax\tf.vim	/^    let did_tf_syn_inits = 1$/;"	v
did_tli_syntax_inits	C:\exVim\vim74\syntax\tli.vim	/^    let did_tli_syntax_inits = 1$/;"	v
did_toolbar_tmenu	C:\exVim\vim74\menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tpp_syn_inits	C:\exVim\vim74\syntax\tpp.vim	/^    let did_tpp_syn_inits = 1$/;"	v
did_trasys_syntax_inits	C:\exVim\vim74\syntax\trasys.vim	/^    let did_trasys_syntax_inits = 1$/;"	v
did_tsalt_syntax_inits	C:\exVim\vim74\syntax\tsalt.vim	/^    let did_tsalt_syntax_inits = 1$/;"	v
did_tsscl_syntax_inits	C:\exVim\vim74\syntax\tsscl.vim	/^    let did_tsscl_syntax_inits = 1$/;"	v
did_tssgm_syntax_inits	C:\exVim\vim74\syntax\tssgm.vim	/^    let did_tssgm_syntax_inits = 1$/;"	v
did_tssop_syntax_inits	C:\exVim\vim74\syntax\tssop.vim	/^    let did_tssop_syntax_inits = 1$/;"	v
did_typeScript_syn_inits	C:\exVim\vimfiles\bundle\ex-typescript\syntax\typescript.vim	/^    let did_typeScript_syn_inits = 1$/;"	v
did_uc_syntax_inits	C:\exVim\vim74\syntax\uc.vim	/^    let did_uc_syntax_inits = 1$/;"	v
did_uil_syn_inits	C:\exVim\vim74\syntax\uil.vim	/^    let did_uil_syn_inits = 1$/;"	v
did_vb_syntax_inits	C:\exVim\vim74\syntax\vb.vim	/^		let did_vb_syntax_inits = 1$/;"	v
did_vera_syn_inits	C:\exVim\vim74\syntax\vera.vim	/^    let did_vera_syn_inits = 1$/;"	v
did_verilog_syn_inits	C:\exVim\vim74\syntax\verilog.vim	/^      let did_verilog_syn_inits = 1$/;"	v
did_verilogams_syn_inits	C:\exVim\vim74\syntax\verilogams.vim	/^      let did_verilogams_syn_inits = 1$/;"	v
did_vhdl_syntax_inits	C:\exVim\vim74\syntax\vhdl.vim	/^    let did_vhdl_syntax_inits = 1$/;"	v
did_virata_syntax_inits	C:\exVim\vim74\syntax\virata.vim	/^    let did_virata_syntax_inits = 1$/;"	v
did_vsejcl_syntax	C:\exVim\vim74\syntax\vsejcl.vim	/^    let did_vsejcl_syntax = 1$/;"	v
did_wdiff_syn_inits	C:\exVim\vim74\syntax\wdiff.vim	/^    let did_wdiff_syn_inits = 1$/;"	v
did_wdiff_syn_inits	C:\exVim\vim74\syntax\wdiff.vim	/^  let did_wdiff_syn_inits = 1$/;"	v
did_webmacro_syn_inits	C:\exVim\vim74\syntax\webmacro.vim	/^    let did_webmacro_syn_inits = 1$/;"	v
did_winbatch_syntax_inits	C:\exVim\vim74\syntax\winbatch.vim	/^    let did_winbatch_syntax_inits = 1$/;"	v
did_wml_syn_inits	C:\exVim\vim74\syntax\wml.vim	/^    let did_wml_syn_inits = 1$/;"	v
did_wml_syn_inits	C:\exVim\vim74\syntax\wml.vim	/^  let did_wml_syn_inits = 1$/;"	v
did_wsml_syn_inits	C:\exVim\vim74\syntax\wsml.vim	/^       let did_wsml_syn_inits = 1$/;"	v
did_xdefaults_syntax_inits	C:\exVim\vim74\syntax\xdefaults.vim	/^    let did_xdefaults_syntax_inits = 1$/;"	v
did_xkb_syntax_inits	C:\exVim\vim74\syntax\xkb.vim	/^		let did_xkb_syntax_inits = 1$/;"	v
did_xmath_syntax_inits	C:\exVim\vim74\syntax\xmath.vim	/^    let did_xmath_syntax_inits = 1$/;"	v
did_xpm2_syntax_inits	C:\exVim\vim74\syntax\xpm2.vim	/^    let did_xpm2_syntax_inits = 1$/;"	v
did_xpm_syntax_inits	C:\exVim\vim74\syntax\xpm.vim	/^    let did_xpm_syntax_inits = 1$/;"	v
did_xs_syntax_inits	C:\exVim\vim74\syntax\xs.vim	/^    let did_xs_syntax_inits = 1$/;"	v
did_xxd_syntax_inits	C:\exVim\vim74\syntax\xxd.vim	/^    let did_xxd_syntax_inits = 1$/;"	v
did_z8a_syntax_inits	C:\exVim\vim74\syntax\z8a.vim	/^    let did_z8a_syntax_inits = 1$/;"	v
didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agedge_t	access:public
didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agnode_t	access:public
didset	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *didset;$/;"	m	struct:Agraph_t	access:public
diff_modifier	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffcomplete	C:\exVim\vim74\ftplugin\gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffidx	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffpanel.BindAu	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.BindAu()$/;"	f
diffpanel.CleanUpHighlight	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.CleanUpHighlight()$/;"	f
diffpanel.GetStatusLine	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.GetStatusLine()$/;"	f
diffpanel.Hide	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.Hide()$/;"	f
diffpanel.Init	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.Init()$/;"	f
diffpanel.ParseDiff	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.ParseDiff(diffresult)$/;"	f
diffpanel.Show	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.Show()$/;"	f
diffpanel.Toggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.Toggle()$/;"	f
diffpanel.Update	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:diffpanel.Update(seq,targetBufnr,targetid)$/;"	f
diffstyle	C:\exVim\vim74\syntax\2html.vim	/^  let diffstyle =$/;"	v
diffthis	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffthis() abort$/;"	f
dimen	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf dimen; \/* the diagonal size of the label (estimated by layout) *\/$/;"	m	struct:textlabel_t	access:public
dirUp	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def File.dirUp(path)$/;"	F	class:Vjde.MyFile
dircompl	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
directed	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned directed:1;	\/* if edges are asymmetric *\/$/;"	m	struct:Agdesc_s	access:public
directory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    private File directory;$/;"	f	class:ClassPathDir	file:	access:private
disc	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtdisc_t*	disc;	\/* method to manipulate objs		*\/$/;"	m	struct:_dt_s	access:public
disc	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdisc_t disc;		\/* resource discipline functions *\/$/;"	m	struct:Agclos_s	access:public
dismrk	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:dismrk()$/;"	f
display	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *display;$/;"	m	struct:GVJ_s	access:public
displayHelp	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:displayHelp()$/;"	f
dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double *pos, dist;$/;"	m	struct:Agnodeinfo_t	access:public
dist	C:\exVim\graphviz\include\graphviz\types.h	/^	double dist;$/;"	m	struct:Agedgeinfo_t	access:public
distortion	C:\exVim\graphviz\include\graphviz\types.h	/^	double distortion;	\/* distortion factor - as in trapezium *\/$/;"	m	struct:polygon_t	access:public
do	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc.do$/;"	r
doSplines	C:\exVim\graphviz\include\graphviz\pack.h	/^	int doSplines;		\/* use splines in constructing graph shape *\/$/;"	m	struct:__anon32	access:public
do_tests	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:do_tests(...)$/;"	f
do_typedef	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def do_typedef(l,cmd) #{{{3$/;"	f	class:Vjde.SourceReader
doautocmd_user	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
doc_buffer	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	char doc_buffer[DOC_LENGTH];$/;"	v
doc_cmd_line	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	string doc_cmd_line;$/;"	v
doc_rect	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	MRectangle doc_rect;$/;"	v
doc_view	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *doc_view = NULL;$/;"	v
doc_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *doc_window = NULL;$/;"	v
dodigits	C:\exVim\vim74\ftplugin\pdf.vim	/^function! s:dodigits(digits)$/;"	f
dohighlight	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dollar_add	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dolu	C:\exVim\vim74\tutor\tutor.cs	/^  2. Dr¾ klávesu pro pohyb dolu (j), dokud se její funkce nezopakuje.$/;"	m	signature:(j)
doobject	C:\exVim\vim74\ftplugin\pdf.vim	/^function! s:doobject(string)$/;"	f
dosbatch_cmdextversion	C:\exVim\vim74\syntax\dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
dosigns	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:dosigns()$/;"	f
dosurround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotroot	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *dotroot;$/;"	m	struct:Agraphinfo_t	access:public
dotty_note	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<A NAME="dotty_note">Dotty<\/A> has not really changed for many years. Therefore, there are$/;"	a
doxygengroup	C:\exVim\vim74\syntax\doxygen.vim	/^    aug doxygengroup$/;"	a
dpi	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf	dpi;		\/* device resolution device-units-per-inch *\/$/;"	m	struct:GVJ_s	access:public
dpi	C:\exVim\graphviz\include\graphviz\types.h	/^	double dpi;$/;"	m	struct:layout_t	access:public
dpi	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
dprint	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
drawfunc	C:\exVim\graphviz\include\graphviz\xdot.h	/^    drawfunc_t drawfunc;$/;"	m	struct:_xdot_op	access:public
drawfunc_t	C:\exVim\graphviz\include\graphviz\xdot.h	/^typedef void (*drawfunc_t)(xdot_op*, int);$/;"	t
drawing	C:\exVim\graphviz\include\graphviz\types.h	/^	layout_t *drawing;$/;"	m	struct:Agraphinfo_t	access:public
drawing	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="drawing">Drawing Functions<\/A><\/H3>$/;"	a
drop_the_caffeine_and_crack_pipe_dont_make_me_taze_you	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^def drop_the_caffeine_and_crack_pipe_dont_make_me_taze_you():$/;"	f	access:public
ds	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:dstring(expr) abort$/;"	f
dt_count	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int*	dt_count;	\/* counts of chains or levels by size	*\/$/;"	m	struct:_dtstat_s	access:public
dt_max	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_max;		\/* max size of a chain or a level	*\/$/;"	m	struct:_dtstat_s	access:public
dt_meth	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int	dt_meth;	\/* method type				*\/$/;"	m	struct:_dtstat_s	access:public
dt_n	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_n;		\/* number of chains or levels		*\/$/;"	m	struct:_dtstat_s	access:public
dt_size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int	dt_size;	\/* number of elements			*\/$/;"	m	struct:_dtstat_s	access:public
dtappend	C:\exVim\graphviz\include\graphviz\cdt.h	312;"	d
dtattach	C:\exVim\graphviz\include\graphviz\cdt.h	314;"	d
dtcharhash	C:\exVim\graphviz\include\graphviz\cdt.h	320;"	d
dtclear	C:\exVim\graphviz\include\graphviz\cdt.h	316;"	d
dtclose	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dtclose _ARG_((Dt_t*));$/;"	p	signature:(Dt_t*)
dtdelete	C:\exVim\graphviz\include\graphviz\cdt.h	313;"	d
dtdetach	C:\exVim\graphviz\include\graphviz\cdt.h	315;"	d
dtdisc	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dtdisc_t*	dtdisc _ARG_((Dt_t* dt, Dtdisc_t*, int));$/;"	p	signature:(Dt_t* dt, Dtdisc_t*, int)
dtextract	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dtlink_t*	dtextract _ARG_((Dt_t*));$/;"	p	signature:(Dt_t*)
dtfinger	C:\exVim\graphviz\include\graphviz\cdt.h	301;"	d
dtfirst	C:\exVim\graphviz\include\graphviz\cdt.h	303;"	d
dtflatten	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dtlink_t*	dtflatten _ARG_((Dt_t*));$/;"	p	signature:(Dt_t*)
dtfound	C:\exVim\graphviz\include\graphviz\cdt.h	317;"	d
dtinsert	C:\exVim\graphviz\include\graphviz\cdt.h	311;"	d
dtlast	C:\exVim\graphviz\include\graphviz\cdt.h	306;"	d
dtleast	C:\exVim\graphviz\include\graphviz\cdt.h	305;"	d
dtlink	C:\exVim\graphviz\include\graphviz\cdt.h	299;"	d
dtmatch	C:\exVim\graphviz\include\graphviz\cdt.h	310;"	d
dtmethod	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dtmethod_t*	dtmethod _ARG_((Dt_t*, Dtmethod_t*));$/;"	p	signature:(Dt_t*, Dtmethod_t*)
dtmost	C:\exVim\graphviz\include\graphviz\cdt.h	308;"	d
dtnext	C:\exVim\graphviz\include\graphviz\cdt.h	304;"	d
dtobj	C:\exVim\graphviz\include\graphviz\cdt.h	300;"	d
dtopen	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dt_t*		dtopen _ARG_((Dtdisc_t*, Dtmethod_t*));$/;"	p	signature:(Dtdisc_t*, Dtmethod_t*)
dtprev	C:\exVim\graphviz\include\graphviz\cdt.h	307;"	d
dtrenew	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Void_t*		dtrenew _ARG_((Dt_t*, Void_t*));$/;"	p	signature:(Dt_t*, Void_t*)
dtrestore	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dtrestore _ARG_((Dt_t*, Dtlink_t*));$/;"	p	signature:(Dt_t*, Dtlink_t*)
dtsearch	C:\exVim\graphviz\include\graphviz\cdt.h	309;"	d
dtsize	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dtsize _ARG_((Dt_t*));$/;"	p	signature:(Dt_t*)
dtstat	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dtstat _ARG_((Dt_t*, Dtstat_t*, int));$/;"	p	signature:(Dt_t*, Dtstat_t*, int)
dtstrhash	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern unsigned int	dtstrhash _ARG_((unsigned int, Void_t*, int));$/;"	p	signature:(unsigned int, Void_t*, int)
dttreeset	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dttreeset _ARG_((Dt_t*, int, int));$/;"	p	signature:(Dt_t*, int, int)
dtvcount	C:\exVim\graphviz\include\graphviz\cdt.h	296;"	d
dtvhere	C:\exVim\graphviz\include\graphviz\cdt.h	297;"	d
dtview	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern Dt_t*		dtview _ARG_((Dt_t*, Dt_t*));$/;"	p	signature:(Dt_t*, Dt_t*)
dtvnext	C:\exVim\graphviz\include\graphviz\cdt.h	295;"	d
dtwalk	C:\exVim\graphviz\include\graphviz\cdt.h	/^extern int		dtwalk _ARG_((Dt_t*, int(*)(Dt_t*,Void_t*,Void_t*), Void_t*));$/;"	p	signature:(Dt_t*, int(*)(Dt_t*,Void_t*,Void_t*), Void_t*)
duplicate	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static char *duplicate (const char *str)$/;"	f	file:	signature:(const char *str)
dw1	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal dw1$/;"	m
dw2	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal dw2$/;"	m
dyna	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean dyna;           \/* if true, assign compass point dynamically *\/$/;"	m	struct:port	access:public
e	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
e	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agedge_t *e;$/;"	m	struct:Agproto_t	access:public
e	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    edge_t *e;$/;"	m	union:obj_state_s::__anon25	access:public
e	C:\exVim\vim74\macros\less.vim	/^map e <CR>$/;"	m
e_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *e_seq, *e_id;	\/* holders for edge sets *\/$/;"	m	struct:Agraph_s	access:public
e_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *e_seq, *e_id;	\/* holders for edge sets *\/$/;"	m	struct:Agraph_s	access:public
each	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each   $/;"	f	class:Vjde.VjdeProjectTlds
each	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each(n=nil) $/;"	f	class:Vjde.JspDirective
each	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def each$/;"	f	class:Vjde.VjdeTemplateManager
each_action	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def each_action $/;"	f	class:Vjde.Struts2ConfigLoader
each_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def each_attr(tag_name,name=nil) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
each_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_attr(name,n=nil) $/;"	f	class:Vjde.JspDirective
each_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_attr(tag)$/;"	f	class:Vjde.Tld_document
each_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_attr(tld,tag,base=nil)$/;"	f	class:Vjde.Tld_Loader
each_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def each_attr(ename,name=nil) #{{{3$/;"	f	class:Vjde.DTD_Parser
each_attr4uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_attr4uri(uri,t,a=nil) $/;"	f	class:Vjde.Tld_Loader
each_attr_priv	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def each_attr_priv(tag,name="") #{{{3$/;"	f	class:Vjde.VjdeDefLoader
each_child	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def each_child(tag_name,name=nil)$/;"	f	class:Vjde.VjdeDefLoader
each_child	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^                def each_child(tag,name=nil) $/;"	f	class:Vjde.VjdeDefLoader
each_child	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def each_child(pname,name=nil)  #{{{3$/;"	f	class:Vjde.DTD_Parser
each_class	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def each_class(className='')$/;"	f	class:Vjde.CtagsTagList
each_element	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^                def each_element(name=nil) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
each_element	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def each_element(name=nil) #{{{3$/;"	f	class:Vjde.DTD_Parser
each_entity4_element	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def each_entity4_element(ename,name=nil) #{{{3$/;"	f	class:Vjde.DTD_Parser
each_line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def each_line(f) #{{{3$/;"	f	class:Vjde.SourceReader
each_line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def each_line $/;"	f	class:Vjde.VjdeTemplate
each_member	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def each_member(className1, beginning='',full=false)$/;"	f	class:Vjde.CtagsTagList
each_member	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def each_member(className1, beginning='',full=false)$/;"	f	class:Vjde.ReadTags
each_package	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def each_package$/;"	f	class:Vjde.Struts2ConfigLoader
each_para	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def each_para $/;"	f	class:Vjde.VjdeTemplate
each_pkg	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def each_pkg(base,pre='') $/;"	f	class:Vjde.PackageCfu
each_pkg	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def each_pkg(prefix='') $/;"	f	class:Vjde.PackageClass
each_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def each_tag(beginning,full=false)$/;"	f	class:Vjde.ReadTags
each_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def each_tag(name='',firstfile=true)$/;"	f	class:Vjde.CtagsTagList
each_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def each_tag(name=nil) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
each_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_tag$/;"	f	class:Vjde.Tld_document
each_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_tag(tld_doc,base=nil)$/;"	f	class:Vjde.Tld_Loader
each_tag4file	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def each_tag4file(tagFile,seek=0,must='')$/;"	f	class:Vjde.CtagsTagList
each_tag4uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def each_tag4uri(uri,tag=nil) $/;"	f	class:Vjde.Tld_Loader
each_value	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^                def each_value(tag_name,att_name,v="") #{{{3$/;"	f	class:Vjde.VjdeDefLoader
each_value	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^        def each_value(tag_name,attr_name,v="") #{{{3$/;"	f	class:Vjde.DTD_Parser
echo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
echogets	C:\exVim\vim74\tools\ccfilter.c	/^char *echogets(char *s, int echo) {$/;"	f	signature:(char *s, int echo)
echomsg	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
edge	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
edge_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agedge_s edge_t;$/;"	t	typeref:struct:Agedge_s
edge_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char edge_type;$/;"	m	struct:Agedgeinfo_t	access:public
edgeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *edgeattr;$/;"	m	struct:Agdata_t	access:public
eflag	C:\exVim\graphviz\include\graphviz\types.h	/^	int sflag, eflag;$/;"	m	struct:bezier	access:public
elapsed	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:elapsed(nr)$/;"	f
elist	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct elist {$/;"	s
elist	C:\exVim\graphviz\include\graphviz\types.h	/^    } elist;$/;"	t	typeref:struct:elist
elist::list	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t **list;$/;"	m	struct:elist	access:public
elist::size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:elist	access:public
elist_append	C:\exVim\graphviz\include\graphviz\types.h	262;"	d
elist_fastapp	C:\exVim\graphviz\include\graphviz\types.h	261;"	d
ellipse	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*ellipse) (GVJ_t * job, pointf * A, int filled);$/;"	m	struct:gvrender_engine_s	access:public
ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_rect ellipse;       \/* xd_filled_ellipse, xd_unfilled_ellipse *\/$/;"	m	union:_xdot_op::__anon61	access:public
else	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^    else$/;"	r
emacs.keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
emit_state	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	emit_state_t emit_state; $/;"	m	struct:obj_state_s	access:public
emit_state_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } emit_state_t;$/;"	t	typeref:enum:__anon24
emmet#anchorizeURL	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#exists	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lorem#en#expand	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lorem\en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lorem\ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
enable_floatingwindow	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^let enable_floatingwindow=1$/;"	v
encoding	C:\exVim\vim74\keymap\hebrew.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	C:\exVim\vim74\keymap\hebrew.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	C:\exVim\vim74\keymap\hebrew.vim	/^let encoding = &enc$/;"	v
encoding	C:\exVim\vim74\keymap\hebrewp.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	C:\exVim\vim74\keymap\hebrewp.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	C:\exVim\vim74\keymap\hebrewp.vim	/^let encoding = &enc$/;"	v
encoding	C:\exVim\vim74\keymap\persian.vim	/^	let encoding = 'utf-8'$/;"	v
encoding	C:\exVim\vim74\keymap\persian.vim	/^let encoding = &enc$/;"	v
encoding	C:\exVim\vim74\keymap\polish-slash.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	C:\exVim\vim74\keymap\polish-slash.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	C:\exVim\vim74\keymap\polish-slash.vim	/^let encoding = &enc$/;"	v
encoding	C:\exVim\vim74\keymap\serbian.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	C:\exVim\vim74\keymap\serbian.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	C:\exVim\vim74\keymap\serbian.vim	/^let encoding = &enc$/;"	v
encoding	C:\exVim\vim74\keymap\slovak.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	C:\exVim\vim74\keymap\slovak.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	C:\exVim\vim74\keymap\slovak.vim	/^let encoding = &enc$/;"	v
end	C:\exVim\graphviz\include\graphviz\types.h	/^	port start, end;$/;"	m	struct:path	access:public
end	C:\exVim\vim74\vimtutor.bat	/^:end$/;"	l
end_anchor	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_anchor) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_cluster	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_cluster) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_edge	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_edge) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_edges	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_edges) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_graph	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_graph) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_job	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_job) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_label	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_label) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_layer	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_layer) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_node	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_node) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_nodes	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_nodes) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
end_page	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_page) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvloadimage_engine_t *engine;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvdevice_engine_t *engine;$/;"	m	struct:gvplugin_active_device_s	access:public
engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvrender_engine_t *engine;$/;"	m	struct:gvplugin_active_render_s	access:public
engine	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	void *engine;   \/* pointer to the jump table for the plugin *\/$/;"	m	struct:__anon26	access:public
entryMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    private static Map entryMap = new HashMap();$/;"	f	class:ClassPathEntry	file:	access:private
ep	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf sp, ep;$/;"	m	struct:bezier	access:public
epsf	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME=epsf>User-defined Nodes<\/A><\/H2>$/;"	a
eql?	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def eql?(other)$/;"	f	class:Vjde.CtagsTag
err	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprwr err;               \/* write function for stderr *\/$/;"	m	struct:__anon30	access:public
error	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^function! s:error(text, where)$/;"	f
error	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:error(msg) abort$/;"	f
error_number	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		int error_number;$/;"	m	struct:__anon70::__anon71	access:public
errorfn	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^        void (*errorfn) (const char *fmt, ...);$/;"	m	struct:GVCOMMON_s	access:public
escape	C:\exVim\vim74\autoload\gzip.vim	/^fun s:escape(name)$/;"	f
escape	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:escape(str)$/;"	f
escape	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! s:escape(path)"{{{$/;"	f
escape_file_searching	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_regexp_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
escape_special_key	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
esctagscmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
eval_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:eval_snippet(snippet_text) "{{{$/;"	f
eventf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtevent_f	eventf;	\/* to process events			*\/$/;"	m	struct:_dtdisc_s	access:public
ex#buffer#keep_window_bd	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^function ex#buffer#keep_window_bd()$/;"	f
ex#buffer#navigate	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^function ex#buffer#navigate(cmd)$/;"	f
ex#buffer#record	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^function ex#buffer#record()$/;"	f
ex#buffer#to_alternate_edit_buf	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^function ex#buffer#to_alternate_edit_buf() " <<<$/;"	f
ex#compl_by_symbol	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#compl_by_symbol( arg_lead, cmd_line, cursor_pos )$/;"	f
ex#debug	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#debug(msg)$/;"	f
ex#echo_registered_plugins	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#echo_registered_plugins ()$/;"	f
ex#error	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#error(msg)$/;"	f
ex#hint	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#hint(msg)$/;"	f
ex#hl#clear_confirm	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\hl.vim	/^function ex#hl#clear_confirm()$/;"	f
ex#hl#clear_target	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\hl.vim	/^function ex#hl#clear_target()$/;"	f
ex#hl#confirm_line	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\hl.vim	/^function ex#hl#confirm_line(linenr)$/;"	f
ex#hl#target_line	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\hl.vim	/^function ex#hl#target_line(linenr)$/;"	f
ex#is_registered_plugin	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#is_registered_plugin ( bufnr, ... )$/;"	f
ex#keymap#bind	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\keymap.vim	/^function ex#keymap#bind( keymap )$/;"	f
ex#keymap#helptext	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\keymap.vim	/^function ex#keymap#helptext( keymap )$/;"	f
ex#keymap#register	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\keymap.vim	/^function ex#keymap#register( keymap, priority, local, key, action, desc )$/;"	f
ex#os#is	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\os.vim	/^function ex#os#is( name )$/;"	f
ex#os#open	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\os.vim	/^function ex#os#open( path )$/;"	f
ex#path#translate	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\path.vim	/^function ex#path#translate( path, system )$/;"	f
ex#pattern#files	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\pattern.vim	/^function ex#pattern#files(list)$/;"	f
ex#pattern#last_words	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\pattern.vim	/^function ex#pattern#last_words(list)$/;"	f
ex#register_plugin	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#register_plugin ( filetype, options )$/;"	f
ex#restore_lasteditbuffers	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#restore_lasteditbuffers()$/;"	f
ex#save_restore_info	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#save_restore_info()$/;"	f
ex#set_restore_info	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#set_restore_info(path)$/;"	f
ex#set_symbol_path	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#set_symbol_path( path )$/;"	f
ex#short_message	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#short_message( msg )$/;"	f
ex#warning	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^function ex#warning(msg)$/;"	f
ex#window#check_if_autoclose	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#check_if_autoclose( winnr )$/;"	f
ex#window#close	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#close(winnr)$/;"	f
ex#window#debug	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#debug () $/;"	f
ex#window#goto_edit_window	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#goto_edit_window()$/;"	f
ex#window#goto_plugin_window	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#goto_plugin_window()$/;"	f
ex#window#is_plugin_window	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#is_plugin_window( winnr )$/;"	f
ex#window#last_edit_bufnr	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#last_edit_bufnr()$/;"	f
ex#window#new	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#new( bufname, size, pos, nested, callback )$/;"	f
ex#window#open	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#open( bufname, size, pos, nested, focus, callback )$/;"	f
ex#window#record	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#record()$/;"	f
ex#window#resize	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#resize( winnr, pos, new_size )$/;"	f
ex#window#switch_window	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function ex#window#switch_window()$/;"	f
ex_aftercolors	C:\exVim\vimfiles\bundle\ex-aftercolors\plugin\AfterColors.vim	/^augroup ex_aftercolors$/;"	a
ex_easyhl	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    augroup ex_easyhl$/;"	a
ex_project	C:\exVim\vimfiles\bundle\ex-project\ftplugin\exproject.vim	/^augroup ex_project$/;"	a
ex_tags	C:\exVim\vimfiles\bundle\ex-tags\ftplugin\extags.vim	/^augroup ex_tags$/;"	a
ex_utility	C:\exVim\vimfiles\bundle\ex-utility\plugin\exutility.vim	/^augroup ex_utility$/;"	a
ex_vimentry	C:\exVim\vimfiles\bundle\ex-vimentry\plugin\vimentry.vim	/^augroup ex_vimentry$/;"	a
ex_vimentry_buffer	C:\exVim\vimfiles\bundle\ex-vimentry\ftplugin\vimentry.vim	/^augroup ex_vimentry_buffer$/;"	a
exact_ranksep	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean exact_ranksep;$/;"	m	struct:Agraphinfo_t	access:public
exceptionMappings	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public ExceptionMapping[] exceptionMappings() {$/;"	m	class:ActionImpl	access:public	signature:()
excl	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exconfig#apply	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#apply()$/;"	f
exconfig#apply_project_type	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#apply_project_type()$/;"	f
exconfig#edit_cur_vimentry	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#edit_cur_vimentry()$/;"	f
exconfig#gen_sh_update_cscope	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_cscope(path)$/;"	f
exconfig#gen_sh_update_ctags	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_ctags(path)$/;"	f
exconfig#gen_sh_update_files	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_files(path)$/;"	f
exconfig#gen_sh_update_idutils	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_idutils(path)$/;"	f
exconfig#gen_sh_update_inherits	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_inherits(path)$/;"	f
exconfig#gen_sh_update_symbols	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#gen_sh_update_symbols(path)$/;"	f
exconfig#reset	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#reset()$/;"	f
exconfig#update_exvim_files	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^function exconfig#update_exvim_files()$/;"	f
excscope#bind_mappings	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#bind_mappings()$/;"	f
excscope#close_window	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#close_window()$/;"	f
excscope#confirm_select	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#confirm_select(modifier)$/;"	f
excscope#connect	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#connect()$/;"	f
excscope#copy_pickedline	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#copy_pickedline( search_pattern, line_start, line_end, search_method, inverse_search ) $/;"	f
excscope#get_searchresult	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#get_searchresult(search_pattern, search_method)$/;"	f
excscope#go_direct	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#go_direct( search_method )$/;"	f
excscope#goto	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#goto()$/;"	f
excscope#init_buffer	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#init_buffer()$/;"	f
excscope#kill	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#kill()$/;"	f
excscope#open_window	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#open_window()$/;"	f
excscope#parse_function	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#parse_function()$/;"	f
excscope#register_hotkey	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#register_hotkey( priority, local, key, action, desc )$/;"	f
excscope#set_csfile	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#set_csfile(path)$/;"	f
excscope#show_pickedresult	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#show_pickedresult( search_pattern, line_start, line_end, edit_mode, search_method, inverse_search )$/;"	f
excscope#show_quickfixresult	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#show_quickfixresult( search_method, g_method_result_list )$/;"	f
excscope#toggle_help	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#toggle_help()$/;"	f
excscope#toggle_window	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#toggle_window()$/;"	f
excscope#toggle_zoom	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function excscope#toggle_zoom()$/;"	f
exec	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:exec(cmd)$/;"	f
exec_silent	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:exec_silent(cmd)$/;"	f
execextvar	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
exgsearch#bind_mappings	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#bind_mappings()$/;"	f
exgsearch#close_window	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#close_window()$/;"	f
exgsearch#confirm_select	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#confirm_select(modifier)$/;"	f
exgsearch#filter	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#filter( pattern, option, reverse )$/;"	f
exgsearch#init_buffer	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#init_buffer()$/;"	f
exgsearch#open_window	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#open_window()$/;"	f
exgsearch#register_hotkey	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#register_hotkey( priority, local, key, action, desc )$/;"	f
exgsearch#search	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#search( pattern, method )$/;"	f
exgsearch#set_id_file	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#set_id_file( path )$/;"	f
exgsearch#toggle_help	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#toggle_help()$/;"	f
exgsearch#toggle_window	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#toggle_window()$/;"	f
exgsearch#toggle_zoom	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function exgsearch#toggle_zoom()$/;"	f
exhierarchy#bind_mappings	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#bind_mappings()$/;"	f
exhierarchy#close_window	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#close_window()$/;"	f
exhierarchy#init_buffer	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#init_buffer()$/;"	f
exhierarchy#open_window	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#open_window()$/;"	f
exhierarchy#register_hotkey	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#register_hotkey( priority, local, key, action, desc )$/;"	f
exhierarchy#set_dot_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#set_dot_file( path )$/;"	f
exhierarchy#set_img_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#set_img_file( path )$/;"	f
exhierarchy#set_inheirts_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#set_inheirts_file( path )$/;"	f
exhierarchy#toggle_help	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#toggle_help()$/;"	f
exhierarchy#toggle_window	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#toggle_window()$/;"	f
exhierarchy#toggle_zoom	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#toggle_zoom()$/;"	f
exhierarchy#view	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function exhierarchy#view( name, method )$/;"	f
exists	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:exists(name) abort$/;"	f
exists	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:exists(name) abort$/;"	f
exists	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:exists(name) abort$/;"	f
exists_current_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:exists_current_source() "{{{$/;"	f
exit	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^from sys import argv, exit$/;"	i
exit	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\compile.py	/^from sys import argv, exit$/;"	i
exitIfLast	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:exitIfLast()$/;"	f
exit_friendly	C:\exVim\vimfiles\bundle\vjde\src\wspawn.cpp	/^void exit_friendly(void)$/;"	f	signature:(void)
expand_modules	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_path	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:expand_path(path) abort$/;"	f
expand_placeholder	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) "{{{$/;"	f
expand_target_placeholder	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:expand_target_placeholder(line, col) "{{{$/;"	f
expanded	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean expanded;$/;"	m	struct:Agraphinfo_t	access:public
expkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Configure	access:default
expkg	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Simple	access:default
explicit_edgetarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_edgetarget:1;$/;"	m	struct:obj_state_s	access:public
explicit_headtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headtarget:1;$/;"	m	struct:obj_state_s	access:public
explicit_headtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headtooltip:1;$/;"	m	struct:obj_state_s	access:public
explicit_headurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headurl:1;$/;"	m	struct:obj_state_s	access:public
explicit_labeltooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_labeltooltip:1;$/;"	m	struct:obj_state_s	access:public
explicit_tailtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailtarget:1;$/;"	m	struct:obj_state_s	access:public
explicit_tailtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailtooltip:1;$/;"	m	struct:obj_state_s	access:public
explicit_tailurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailurl:1;$/;"	m	struct:obj_state_s	access:public
explicit_tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tooltip:1;$/;"	m	struct:obj_state_s	access:public
expr	C:\exVim\graphviz\bin\exparse.h	/^	struct Exnode_s*expr;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exnode_s	access:public
expriclude	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Configure	access:default
expriclude	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Simple	access:default
exproject#bind_mappings	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#bind_mappings()$/;"	f
exproject#build_tree	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#build_tree()$/;"	f
exproject#close_window	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#close_window()$/;"	f
exproject#confirm_select	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#confirm_select(modifier)$/;"	f
exproject#cursor_jump	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#cursor_jump ( search_pattern, search_direction )$/;"	f
exproject#find_current_edit	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#find_current_edit( focus )$/;"	f
exproject#foldtext	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#foldtext()$/;"	f
exproject#init_buffer	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#init_buffer()$/;"	f
exproject#newfile	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#newfile()$/;"	f
exproject#newfolder	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#newfolder()$/;"	f
exproject#on_save	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#on_save()$/;"	f
exproject#open	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#open(filename)$/;"	f
exproject#open_window	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#open_window()$/;"	f
exproject#refresh_current_folder	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#refresh_current_folder()$/;"	f
exproject#register_hotkey	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#register_hotkey( priority, local, key, action, desc )$/;"	f
exproject#set_file_filters	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#set_file_filters( filters )$/;"	f
exproject#set_file_ignore_patterns	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#set_file_ignore_patterns( patterns )$/;"	f
exproject#set_folder_filter_mode	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#set_folder_filter_mode( mode )$/;"	f
exproject#set_folder_filters	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#set_folder_filters( filters )$/;"	f
exproject#toggle_help	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#toggle_help()$/;"	f
exproject#toggle_window	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#toggle_window()$/;"	f
exproject#toggle_zoom	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function exproject#toggle_zoom()$/;"	f
exprpackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Configure	access:default
exprpackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Simple	access:default
exqfix#bind_mappings	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#bind_mappings()$/;"	f
exqfix#build	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#build(opt)$/;"	f
exqfix#close_window	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#close_window()$/;"	f
exqfix#confirm_select	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#confirm_select(modifier)$/;"	f
exqfix#goto	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#goto(idx)$/;"	f
exqfix#init_buffer	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#init_buffer()$/;"	f
exqfix#open	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#open(filename)$/;"	f
exqfix#open_window	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#open_window()$/;"	f
exqfix#paste	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#paste(reg)$/;"	f
exqfix#register_hotkey	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#register_hotkey( priority, local, key, action, desc )$/;"	f
exqfix#set_compiler	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#set_compiler(compiler)$/;"	f
exqfix#set_qfix_file	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#set_qfix_file(path)$/;"	f
exqfix#toggle_help	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#toggle_help()$/;"	f
exqfix#toggle_window	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#toggle_window()$/;"	f
exqfix#toggle_zoom	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function exqfix#toggle_zoom()$/;"	f
exstype	C:\exVim\graphviz\bin\exparse.h	230;"	d
exsymbol#bind_mappings	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#bind_mappings()$/;"	f
exsymbol#close_window	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#close_window()$/;"	f
exsymbol#confirm_select	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#confirm_select()$/;"	f
exsymbol#filter	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#filter( pattern, reverse )$/;"	f
exsymbol#init_buffer	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#init_buffer()$/;"	f
exsymbol#list	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#list( pattern )$/;"	f
exsymbol#list_all	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#list_all()$/;"	f
exsymbol#open_window	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#open_window()$/;"	f
exsymbol#register_hotkey	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#register_hotkey( priority, local, key, action, desc )$/;"	f
exsymbol#set_file	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#set_file( path )$/;"	f
exsymbol#toggle_help	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#toggle_help()$/;"	f
exsymbol#toggle_window	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#toggle_window()$/;"	f
exsymbol#toggle_zoom	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function exsymbol#toggle_zoom()$/;"	f
extags#bind_mappings	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#bind_mappings()$/;"	f
extags#close_window	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#close_window()$/;"	f
extags#confirm_select	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#confirm_select(modifier)$/;"	f
extags#cursor_moved	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#cursor_moved()$/;"	f
extags#init_buffer	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#init_buffer()$/;"	f
extags#open_window	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#open_window()$/;"	f
extags#register_hotkey	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#register_hotkey( priority, local, key, action, desc )$/;"	f
extags#select	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#select( tag )$/;"	f
extags#toggle_help	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#toggle_help()$/;"	f
extags#toggle_window	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#toggle_window()$/;"	f
extags#toggle_zoom	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function extags#toggle_zoom()$/;"	f
extend	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^function! s:extend(dict, src)$/;"	f
extensionFields	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int extensionFields;$/;"	v	file:
extern	C:\exVim\graphviz\include\graphviz\cdt.h	187;"	d
extern	C:\exVim\graphviz\include\graphviz\cdt.h	190;"	d
extern	C:\exVim\graphviz\include\graphviz\cdt.h	214;"	d
extern	C:\exVim\graphviz\include\graphviz\cdt.h	219;"	d
extern	C:\exVim\graphviz\include\graphviz\cdt.h	249;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	186;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	195;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	249;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	252;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	419;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	423;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	429;"	d
extern	C:\exVim\graphviz\include\graphviz\cgraph.h	459;"	d
extern	C:\exVim\graphviz\include\graphviz\graph.h	131;"	d
extern	C:\exVim\graphviz\include\graphviz\graph.h	134;"	d
extern	C:\exVim\graphviz\include\graphviz\graph.h	141;"	d
extern	C:\exVim\graphviz\include\graphviz\graph.h	229;"	d
extern	C:\exVim\graphviz\include\graphviz\gvc.h	116;"	d
extern	C:\exVim\graphviz\include\graphviz\gvc.h	25;"	d
extern	C:\exVim\graphviz\include\graphviz\gvc.h	27;"	d
extern	C:\exVim\graphviz\include\graphviz\gvc.h	33;"	d
extern	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	26;"	d
extern	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	32;"	d
extern	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	45;"	d
extern	C:\exVim\graphviz\include\graphviz\pack.h	63;"	d
extern	C:\exVim\graphviz\include\graphviz\pack.h	89;"	d
extern	C:\exVim\graphviz\include\graphviz\pathplan.h	27;"	d
extern	C:\exVim\graphviz\include\graphviz\pathplan.h	47;"	d
external_context	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean external_context;	\/* context belongs to caller *\/$/;"	m	struct:GVJ_s	access:public
extokentype	C:\exVim\graphviz\bin\exparse.h	/^   enum extokentype {$/;"	g
extractafter	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:extractbefore(str)$/;"	f
f	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbdisc_t *f;		\/* methods *\/$/;"	m	struct:Agcbstack_s	access:public
f	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FILE *f;$/;"	m	struct:usershape_s	access:public
f	C:\exVim\vim74\macros\less.vim	/^map f <Space>$/;"	m
f	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f)	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f)$/;"	m
f/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
f1	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f1$/;"	m
f:	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f:$/;"	m
f;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f;$/;"	m
f;a	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f;a$/;"	m
fH	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fH$/;"	m
fHa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fHa$/;"	m
f^	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal f^$/;"	m
faa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal faa$/;"	m
factor	C:\exVim\graphviz\include\graphviz\types.h	/^	double factor;$/;"	m	struct:Agedgeinfo_t	access:public
factory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Configure	access:default
factory	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Simple	access:default
fallback_opts	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^fallback_opts() ->$/;"	f
family	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* family;$/;"	m	struct:_PostscriptAlias	access:public
family	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* family;$/;"	m	struct:_PostscriptAlias	access:public
fb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fb$/;"	m
fba	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fba$/;"	m
fd	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fd$/;"	m
features	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvdevice_features_t *features;$/;"	m	struct:gvplugin_active_device_s	access:public
features	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvrender_features_t *features;$/;"	m	struct:gvplugin_active_render_s	access:public
features	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	void *features; \/* pointer to the feature description $/;"	m	struct:__anon26	access:public
fetch_scripts	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
fh	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fh$/;"	m
fha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fha$/;"	m
fhb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fhb$/;"	m
field_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct field_t {$/;"	s
field_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } field_t;$/;"	t	typeref:struct:field_t
field_t::LR	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char LR;	\/* if box list is horizontal (left to right) *\/$/;"	m	struct:field_t	access:public
field_t::b	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf b;			\/* its placement in node's coordinates *\/$/;"	m	struct:field_t	access:public
field_t::fld	C:\exVim\graphviz\include\graphviz\types.h	/^	struct field_t **fld;	\/* n_flds > 0 *\/$/;"	m	struct:field_t	typeref:struct:field_t::field_t	access:public
field_t::id	C:\exVim\graphviz\include\graphviz\types.h	/^	char *id;		\/* user's identifier *\/$/;"	m	struct:field_t	access:public
field_t::lp	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *lp;	\/* n_flds == 0 *\/$/;"	m	struct:field_t	access:public
field_t::n_flds	C:\exVim\graphviz\include\graphviz\types.h	/^	int n_flds;$/;"	m	struct:field_t	access:public
field_t::sides	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char sides;    \/* sides of node exposed to field *\/$/;"	m	struct:field_t	access:public
field_t::size	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf size;		\/* its dimension *\/$/;"	m	struct:field_t	access:public
fields	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } fields;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon66	file:	access:public
fields	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} fields;$/;"	m	struct:__anon75	typeref:struct:__anon75::__anon77	access:public
file	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *file;$/;"	m	struct:__anon75	access:public
file	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} file;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon72	access:public
fileScope	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	short fileScope;$/;"	m	struct:__anon75	access:public
filename	C:\exVim\vim74\indent\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	C:\exVim\vim74\indent\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	C:\exVim\vim74\indent\sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	C:\exVim\vim74\syntax\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	C:\exVim\vim74\syntax\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	C:\exVim\vim74\syntax\sql.vim	/^let filename = 'sqloracle'$/;"	v
filename	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^options.filename = args[1]$/;"	r
filename	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  options.filename = args[1];$/;"	r
filereadable	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filereadable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filetypedetect	C:\exVim\vim74\filetype.vim	/^augroup filetypedetect$/;"	a
filetypeindent	C:\exVim\vim74\indent.vim	/^augroup filetypeindent$/;"	a
filetypeplugin	C:\exVim\vim74\ftplugin.vim	/^augroup filetypeplugin$/;"	a
fill	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	fill_type fill;$/;"	m	struct:obj_state_s	access:public
fill_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FILL_NONE, FILL_SOLID, FILL_LINEAR, FILL_RADIAL } fill_type;$/;"	t	typeref:enum:__anon16
fillcolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
filled	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean filled;$/;"	m	struct:layout_t	access:public
filter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! s:filter(tags)$/;"	f
finalize	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*finalize) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
find	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^        def find(a)$/;"	f	class:Vjde.DTD_Loader
find	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult find (tagFile *const file, tagEntry *const entry,$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
findAndRevealPath	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
findAnnotation	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void findAnnotation()$/;"	m	class:Struts2Configure	access:public	signature:()
findAnnotation	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void findAnnotation(String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String pkg)
findBinary	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult findBinary (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def findClass(name,level=0,imps=[])$/;"	f	class:Vjde.JavaCompletion
findClass4imps	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def findClass4imps(name,impstr,level=0) $/;"	f	class:Vjde.JavaCompletion
findConstructor	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def findConstructor()$/;"	f	class:Vjde.JavaCompletion
findFields	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def findFields(prefix)$/;"	f	class:Vjde.JavaCompletion
findFirstMatchBefore	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult findFirstMatchBefore (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findFirstNonMatchBefore	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void findFirstNonMatchBefore (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findInclues	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
findInclues	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
findIndex	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def findIndex(name) $/;"	f	class:Vjde.VjdeTemplateManager
findInxml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Configure	access:public	signature:()
findInxml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Simple	access:public	signature:()
findMembers	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void findMembers(const char *const k,const char* const v,$/;"	f	file:	signature:(const char *const k,const char* const v, const char *const name, const int options)
findMethods	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def findMethods(prefix)$/;"	f	class:Vjde.JavaCompletion
findMotion	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
findNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult findNext (tagFile *const file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry)
findPackages	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
findPackages	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
findSequential	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult findSequential (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findStruts2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
findStruts2	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
findTag	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void findTag (const char *const name, const int options)$/;"	f	file:	signature:(const char *const name, const int options)
findTag4Kind	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void findTag4Kind(const char *const k,$/;"	f	file:	signature:(const char *const k, const char *const name, const int options)
findType	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static void findType() {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:()
findType	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.TypeFinder	access:public	signature:()
findType	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.UsingFinder	access:public	signature:()
findWeb	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
findWeb	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
findXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Configure	access:public	signature:(String xml)
findXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Simple	access:public	signature:(String xml)
find_action_if	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def find_action_if(url2) $/;"	f	class:Vjde.Struts2ConfigLoader
find_actions	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def find_actions(url)$/;"	f	class:Vjde.Struts2ConfigLoader
find_class	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def find_class(className1) $/;"	f	class:Vjde.ReadTags
find_class	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def find_class(className1)$/;"	f	class:Vjde.CtagsTagList
find_continued_lnum	C:\exVim\vim74\indent\sh.vim	/^function! s:find_continued_lnum(lnum)$/;"	f
find_file	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def find_file(src,url) $/;"	f	class:Vjde.Struts2ConfigLoader
find_index	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def find_tag(name) $/;"	f	class:Vjde.Tld_document
find_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def find_tag(tld,name)$/;"	f	class:Vjde.Tld_Loader
find_tag_if	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def find_tag_if$/;"	f	class:Vjde.Tld_document
find_typedef	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def find_typedef(tags,file,cmd,beginning='') #{{{3$/;"	f	class:Vjde.SourceReader
findcommon	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! s:findcount(str)$/;"	f
findroot	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
first_line	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:first_line(string)$/;"	f
first_time	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean first_time = FALSE;$/;"	v
fit_mode	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boolean	fit_mode,$/;"	m	struct:GVJ_s	access:public
fix_beginfigs	C:\exVim\vim74\ftplugin\mp.vim	/^  function! s:fix_beginfigs()$/;"	f
fixed	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char fixed;	\/* immutable value *\/$/;"	m	struct:Agsym_s	access:public
fixed	C:\exVim\graphviz\include\graphviz\graph.h	/^	unsigned char fixed;$/;"	m	struct:Agsym_t	access:public
fixed	C:\exVim\graphviz\include\graphviz\pack.h	/^	boolean *fixed;		\/* fixed[i] == true implies g[i] should not be moved *\/$/;"	m	struct:__anon32	access:public
fixindent	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int flags;$/;"	m	struct:__anon20	access:public
flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int flags;$/;"	m	struct:__anon21	access:public
flags	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int flags;		\/* emit_graph flags *\/$/;"	m	struct:GVJ_s	access:public
flags	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    int flags;$/;"	m	struct:__anon30	access:public
flags	C:\exVim\graphviz\include\graphviz\pack.h	/^	int flags;       $/;"	m	struct:__anon32	access:public
flags	C:\exVim\graphviz\include\graphviz\textspan.h	/^	unsigned int flags:7;  \/* HTML_UL, HTML_IF, HTML_BF, etc. *\/$/;"	m	struct:__anon33	access:public
flags	C:\exVim\graphviz\include\graphviz\types.h	/^	int flags;		\/* stroke style flags *\/$/;"	m	struct:stroke_t	access:public
flags	C:\exVim\graphviz\include\graphviz\types.h	/^	int flags;$/;"	m	struct:__anon43	access:public
flags	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short flags;$/;"	m	struct:Agraphinfo_t	access:public
flags	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int flags;$/;"	m	struct:__anon62	access:public
flat	C:\exVim\graphviz\include\graphviz\types.h	/^	adjmatrix_t *flat;$/;"	m	struct:rank_t	access:public
flat_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
flat_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
flatlock	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned flatlock:1;	\/* if sets are flattened into lists in cdt *\/$/;"	m	struct:Agdesc_s	access:public
flatten	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flatten	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:flatten(list, ...) abort$/;"	f
fld	C:\exVim\graphviz\include\graphviz\types.h	/^	struct field_t **fld;	\/* n_flds > 0 *\/$/;"	m	struct:field_t	typeref:struct:field_t::field_t	access:public
floating	C:\exVim\graphviz\bin\exparse.h	/^	double		floating;$/;"	m	union:EXSTYPE	access:public
flush	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*flush) (void *chan);	\/* sync *\/$/;"	m	struct:Agiodisc_s	access:public
fm	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fm$/;"	m
fn	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvpruserfn fn;$/;"	m	struct:__anon29	access:public
fnameescape	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnames	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let fnames=Project_GetAllFnames(a:recurse, line('.'), ' ')$/;"	v
fnesc	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
fns	C:\exVim\graphviz\include\graphviz\types.h	/^	shape_functions *fns;$/;"	m	struct:shape_desc	access:public
foa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal foa$/;"	m
focus	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  focus;		\/* viewport focus - graph units *\/$/;"	m	struct:GVJ_s	access:public
foldl	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
font	C:\exVim\graphviz\include\graphviz\textspan.h	/^	textfont_t *font;$/;"	m	struct:__anon34	access:public
font	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_font font;          \/* xd_font *\/$/;"	m	union:_xdot_op::__anon61	access:public
font_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { FONT_REGULAR, FONT_BOLD, FONT_ITALIC } font_type;$/;"	t	typeref:enum:__anon17
fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^      unsigned int fontchar;   \/* xd_fontchar *\/$/;"	m	union:_xdot_op::__anon61	access:public
fontcolor	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
fontname	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char *fontname; $/;"	m	struct:textpara_t	access:public
fontname	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
fontname_kind	C:\exVim\graphviz\include\graphviz\types.h	/^typedef enum {NATIVEFONTS,PSFONTS,SVGFONTS} fontname_kind;$/;"	t	typeref:enum:__anon42
fontnames	C:\exVim\graphviz\include\graphviz\types.h	/^	fontname_kind fontnames;		\/* to override mangling in SVG *\/$/;"	m	struct:Agraphinfo_t	access:public
fonts	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="fonts">Fonts and text-handling functions<\/A><\/H3>$/;"	a
fontsize	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
fontsize	C:\exVim\graphviz\include\graphviz\types.h	/^	double fontsize;$/;"	m	struct:textlabel_t	access:public
foo	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^  foo: function() {$/;"	r
foo	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^foo = {"abc" : 23};$/;"	r
foo	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^foo = 'text in single quotes\\n'$/;"	v
format	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*format) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
format	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:format(...)$/;"	f
format	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    short format;$/;"	m	struct:sTagFile	file:	access:public
format	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		short format;$/;"	m	struct:__anon70::__anon72	access:public
formatline	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:formatul(...)$/;"	f
fortran_free_source	C:\exVim\vim74\syntax\sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	C:\exVim\vim74\syntax\tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	C:\exVim\vim74\syntax\trasys.vim	/^let fortran_free_source=1$/;"	v
fp	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    FILE* fp;$/;"	m	struct:sTagFile	file:	access:public
fprintXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern void fprintXDot (FILE*, xdot*);$/;"	p	signature:(FILE*, xdot*)
frac	C:\exVim\graphviz\include\graphviz\xdot.h	/^    float frac;$/;"	m	struct:__anon47	access:public
free	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*free) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
free	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*free) (void *state, void *ptr);$/;"	m	struct:Agmemdisc_s	access:public
freePath	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    void freePath(Ppolyline_t* p);$/;"	p	signature:(Ppolyline_t* p)
freeXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern void freeXDot (xdot*);$/;"	p	signature:(xdot*)
freeXDotColor	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern void freeXDotColor (xdot_color*);$/;"	p	signature:(xdot_color*)
free_layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	void (*free_layout) (void *layout);   \/* FIXME - this is ugly *\/$/;"	m	struct:textpara_t	access:public
free_layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	void (*free_layout) (void *layout);   \/* FIXME - this is ugly *\/$/;"	m	struct:__anon34	access:public
free_list	C:\exVim\graphviz\include\graphviz\types.h	264;"	d
freef	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtfree_f	freef;	\/* object destructor			*\/$/;"	m	struct:_dtdisc_s	access:public
freefn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*freefn) (node_t *);	\/* frees  shape from node u.shape_info structure *\/$/;"	m	struct:shape_functions	access:public
freefunc	C:\exVim\graphviz\include\graphviz\xdot.h	/^    freefunc_t freefunc;$/;"	m	struct:__anon62	access:public
freefunc_t	C:\exVim\graphviz\include\graphviz\xdot.h	/^typedef void (*freefunc_t)(xdot_op*);$/;"	t
fromulate	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    public static boolean fromulate() throws FoobarException{$/;"	m	class:CalculateStats	access:public	signature:()
frozenset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:frozenset(...) abort$/;"	f
fs	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^fs = require 'fs'$/;"	r
fs	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  fs = require('fs');$/;"	r
fugitive	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_utility$/;"	a
function	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc. function$/;"	r
function	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc.function$/;"	r
function	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^function = 42$/;"	r
function	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^function: 42$/;"	r
function	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:function(name) abort$/;"	f
fxa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fxa$/;"	m
fz	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fz$/;"	m
fza	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal fza$/;"	m
g	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
g	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
g	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    graph_t *g;$/;"	m	union:obj_state_s::__anon25	access:public
g	C:\exVim\vim74\macros\less.vim	/^noremap <script> g gg<SID>L$/;"	m
g%	C:\exVim\vim74\macros\matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	C:\exVim\vim74\macros\matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	C:\exVim\vim74\macros\matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:AutoPairs	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '`':'`'}$/;"	v
g:AutoPairsCenterLine	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsClosedPairs	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^let g:AutoPairsClosedPairs = {}$/;"	v
g:AutoPairsFlyMode	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapSpace	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMultilineClose	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsParens	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsParens = {'(':')', '[':']', '{':'}'}$/;"	v
g:AutoPairsShortcutBackInsert	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:DoxygenToolkit_authorTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_authorTag = "@author "$/;"	v
g:DoxygenToolkit_blockFooter	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_blockFooter = ""$/;"	v
g:DoxygenToolkit_blockHeader	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_blockHeader = ""$/;"	v
g:DoxygenToolkit_blockTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_blockTag = "@name "$/;"	v
g:DoxygenToolkit_briefTag_className	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_className = "no"$/;"	v
g:DoxygenToolkit_briefTag_enumName	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_enumName = "no"$/;"	v
g:DoxygenToolkit_briefTag_funcName	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_funcName = "no"$/;"	v
g:DoxygenToolkit_briefTag_namespaceName	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_namespaceName = "no"$/;"	v
g:DoxygenToolkit_briefTag_post	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_post = ""$/;"	v
g:DoxygenToolkit_briefTag_pre	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_pre = "@brief "$/;"	v
g:DoxygenToolkit_briefTag_structName	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_briefTag_structName = "no"$/;"	v
g:DoxygenToolkit_cinoptions	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_cinoptions = "c1C1"$/;"	v
g:DoxygenToolkit_classTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_classTag = "@class "$/;"	v
g:DoxygenToolkit_commentType	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_commentType = "C"$/;"	v
g:DoxygenToolkit_commentType	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_commentType = "C"$/;"	v
g:DoxygenToolkit_compactDoc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_compactDoc = "no"$/;"	v
g:DoxygenToolkit_compactOneLineDoc	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_compactOneLineDoc = "no"$/;"	v
g:DoxygenToolkit_dateTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_dateTag = "@date "$/;"	v
g:DoxygenToolkit_endCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_endCommentBlock = ""$/;"	v
g:DoxygenToolkit_endCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_endCommentBlock = "*\/"$/;"	v
g:DoxygenToolkit_endCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_endCommentTag = ""$/;"	v
g:DoxygenToolkit_endCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_endCommentTag = "*\/"$/;"	v
g:DoxygenToolkit_fileTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_fileTag = "@file "$/;"	v
g:DoxygenToolkit_ignoreForReturn	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_ignoreForReturn += s:ignoreForReturn$/;"	v
g:DoxygenToolkit_ignoreForReturn	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_ignoreForReturn = s:ignoreForReturn[:]$/;"	v
g:DoxygenToolkit_interCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_interCommentBlock = "\/\/ "$/;"	v
g:DoxygenToolkit_interCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_interCommentBlock = "* "$/;"	v
g:DoxygenToolkit_interCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_interCommentTag = "\/\/\/ "$/;"	v
g:DoxygenToolkit_interCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_interCommentTag = "* "$/;"	v
g:DoxygenToolkit_keepEmptyLineAfterComment	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_keepEmptyLineAfterComment = "no"$/;"	v
g:DoxygenToolkit_licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_licenseTag = s:licenseTag$/;"	v
g:DoxygenToolkit_maxFunctionProtoLines	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_maxFunctionProtoLines = 10$/;"	v
g:DoxygenToolkit_paramTag_post	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_paramTag_post = ""$/;"	v
g:DoxygenToolkit_paramTag_pre	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_paramTag_pre = "@param "$/;"	v
g:DoxygenToolkit_python_autoFunctionReturn	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_python_autoFunctionReturn = "yes"$/;"	v
g:DoxygenToolkit_python_autoRemoveSelfParam	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_python_autoRemoveSelfParam = "yes"$/;"	v
g:DoxygenToolkit_returnTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_returnTag = "@return "$/;"	v
g:DoxygenToolkit_startCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_startCommentBlock = "\/\/ "$/;"	v
g:DoxygenToolkit_startCommentBlock	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_startCommentBlock = "\/* "$/;"	v
g:DoxygenToolkit_startCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^    let g:DoxygenToolkit_startCommentTag = "\/\/\/ "$/;"	v
g:DoxygenToolkit_startCommentTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_startCommentTag = "\/** "$/;"	v
g:DoxygenToolkit_templateParamTag_post	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_templateParamTag_post = ""$/;"	v
g:DoxygenToolkit_templateParamTag_pre	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_templateParamTag_pre = "@tparam "$/;"	v
g:DoxygenToolkit_throwTag_post	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_throwTag_post = ""$/;"	v
g:DoxygenToolkit_throwTag_pre	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_throwTag_pre = "@throw " " @exception is also valid$/;"	v
g:DoxygenToolkit_undocTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_undocTag = "DOX_SKIP_BLOCK"$/;"	v
g:DoxygenToolkit_versionTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^  let g:DoxygenToolkit_versionTag = "@version "$/;"	v
g:EasyMotion_add_search_history	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_inc_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_move_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_show_prompt	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:GetLatestVimScripts_allowautoinstall	C:\exVim\vim74\autoload\getscript.vim	/^ let g:GetLatestVimScripts_allowautoinstall= 1$/;"	v
g:GetLatestVimScripts_mv	C:\exVim\vim74\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "mv"$/;"	v
g:GetLatestVimScripts_mv	C:\exVim\vim74\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "ren"$/;"	v
g:GetLatestVimScripts_options	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options = ""$/;"	v
g:GetLatestVimScripts_options	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= ""$/;"	v
g:GetLatestVimScripts_options	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-q -O"$/;"	v
g:GetLatestVimScripts_options	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-s -O"$/;"	v
g:GetLatestVimScripts_scriptaddr	C:\exVim\vim74\autoload\getscript.vim	/^ let g:GetLatestVimScripts_scriptaddr = 'http:\/\/vim.sourceforge.net\/script.php?script_id='$/;"	v
g:GetLatestVimScripts_wget	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget    = 'echo "GetLatestVimScripts needs wget or curl"'$/;"	v
g:GetLatestVimScripts_wget	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "curl"$/;"	v
g:GetLatestVimScripts_wget	C:\exVim\vim74\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "wget"$/;"	v
g:LargeFile	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^ let g:LargeFile= 20	" in megabytes$/;"	v
g:NERDDelimiterMap	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:SingleCompile_menumode	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^    let g:SingleCompile_menumode = 1$/;"	v
g:SyntasticAutoloclistNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.7.0-80'$/;"	v
g:ada#Comment	C:\exVim\vim74\autoload\ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	C:\exVim\vim74\autoload\ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	C:\exVim\vim74\autoload\ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	C:\exVim\vim74\autoload\ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	C:\exVim\vim74\autoload\ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	C:\exVim\vim74\autoload\ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	C:\exVim\vim74\autoload\ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	C:\exVim\vim74\autoload\ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_default_compiler	C:\exVim\vim74\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	C:\exVim\vim74\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:bmenu_max_pathlen	C:\exVim\vim74\menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:changelog_date_end_entry_search	C:\exVim\vim74\ftplugin\changelog.vim	/^    let g:changelog_date_end_entry_search = '^\\s*$'$/;"	v
g:changelog_date_entry_search	C:\exVim\vim74\ftplugin\changelog.vim	/^    let g:changelog_date_entry_search = '^\\s*%d\\_s*%u'$/;"	v
g:changelog_dateformat	C:\exVim\vim74\ftplugin\changelog.vim	/^      let g:changelog_dateformat = "%Y-%m-%d"$/;"	v
g:changelog_dateformat	C:\exVim\vim74\ftplugin\changelog.vim	/^      let g:changelog_dateformat = g:changelog_timeformat$/;"	v
g:changelog_new_date_format	C:\exVim\vim74\ftplugin\changelog.vim	/^    let g:changelog_new_date_format = "%d  %u\\n\\n\\t* %p%c\\n\\n"$/;"	v
g:changelog_new_entry_format	C:\exVim\vim74\ftplugin\changelog.vim	/^    let g:changelog_new_entry_format = "\\t* %p%c"$/;"	v
g:clever_f_use_migemo	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:clojure_align_multiline_strings	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	C:\exVim\vim74\indent\clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn'$/;"	v
g:colors_name	C:\exVim\vim74\colors\blue.vim	/^let g:colors_name = "blue"$/;"	v
g:colors_name	C:\exVim\vim74\colors\delek.vim	/^let g:colors_name = "delek"$/;"	v
g:colors_name	C:\exVim\vim74\colors\desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	C:\exVim\vim74\colors\elflord.vim	/^let g:colors_name = "elflord"$/;"	v
g:colors_name	C:\exVim\vim74\colors\koehler.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	C:\exVim\vim74\colors\murphy.vim	/^let g:colors_name = "murphy"$/;"	v
g:colors_name	C:\exVim\vim74\colors\pablo.vim	/^let g:colors_name = "pablo"$/;"	v
g:colors_name	C:\exVim\vim74\colors\ron.vim	/^let g:colors_name = "ron"$/;"	v
g:colors_name	C:\exVim\vim74\colors\torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	C:\exVim\vim74\colors\zellner.vim	/^let g:colors_name = "zellner"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\guardian.vim	/^let g:colors_name = "Guardian"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\molokaiyo.vim	/^let g:colors_name="molokai"                                                             $/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\monokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let g:colors_name="two2tango"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let g:colors_name = "Tomorrow-Night-Eighties"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\peaksea.vim	/^let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let g:colors_name="two2tango"$/;"	v
g:colors_name	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:context_include	C:\exVim\vim74\syntax\context.vim	/^  let g:context_include = ['mp', 'javascript', 'xml']$/;"	v
g:ctags_command	C:\exVim\vim74\menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	C:\exVim\vim74\menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:cucumber_languages	C:\exVim\vim74\syntax\cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:debchangelog_listbugs_severities	C:\exVim\vim74\ftplugin\debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishlist'$/;"	v
g:decada	C:\exVim\vim74\compiler\decada.vim	/^   let g:decada = decada#New ()$/;"	v
g:did_changelog_ftplugin	C:\exVim\vim74\ftplugin\debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	C:\exVim\vim74\ftplugin\cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ocaml_switch	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	C:\exVim\vim74\ftplugin\ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:doxygen_end_punctuation	C:\exVim\vim74\syntax\doxygen.vim	/^      let g:doxygen_end_punctuation='[.]'$/;"	v
g:emmet_curl_command	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:erlang_folding	C:\exVim\vim74\ftplugin\erlang.vim	/^	let g:erlang_folding = 0$/;"	v
g:erlang_indent_searchpair_timeout	C:\exVim\vim74\indent\erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_keywordprg	C:\exVim\vim74\ftplugin\erlang.vim	/^	let g:erlang_keywordprg = 'erl -man'$/;"	v
g:erlang_unexpected_token_indent	C:\exVim\vim74\indent\erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	C:\exVim\vim74\ftplugin\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	C:\exVim\vim74\syntax\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:ex_comment_lable_keyword	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^    let g:ex_comment_lable_keyword = '$/;"	v
g:ex_cscope_enable_help	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^    let g:ex_cscope_enable_help = 1$/;"	v
g:ex_cscope_ignore_case	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^    let g:ex_cscope_ignore_case = 1$/;"	v
g:ex_cscope_winpos	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^    let g:ex_cscope_winpos = 'bottom'$/;"	v
g:ex_cscope_winsize	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^    let g:ex_cscope_winsize = 20$/;"	v
g:ex_cscope_winsize_zoom	C:\exVim\vimfiles\bundle\ex-cscope\plugin\excscope.vim	/^    let g:ex_cscope_winsize_zoom = 40$/;"	v
g:ex_easyhl_auto_cursorhl	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^    let g:ex_easyhl_auto_cursorhl = 0$/;"	v
g:ex_gsearch_enable_help	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_enable_help = 1$/;"	v
g:ex_gsearch_enable_sort	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_enable_sort = 1$/;"	v
g:ex_gsearch_ignore_case	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_ignore_case = 1$/;"	v
g:ex_gsearch_sort_lines_threshold	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_sort_lines_threshold = 100$/;"	v
g:ex_gsearch_winpos	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_winpos = 'bottom'$/;"	v
g:ex_gsearch_winsize	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_winsize = 20$/;"	v
g:ex_gsearch_winsize_zoom	C:\exVim\vimfiles\bundle\ex-gsearch\plugin\exgsearch.vim	/^    let g:ex_gsearch_winsize_zoom = 40$/;"	v
g:ex_hierarchy_enable_help	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_enable_help = 1$/;"	v
g:ex_hierarchy_enable_sort	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_enable_sort = 1$/;"	v
g:ex_hierarchy_ignore_case	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_ignore_case = 1$/;"	v
g:ex_hierarchy_sort_lines_threshold	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_sort_lines_threshold = 100$/;"	v
g:ex_hierarchy_winpos	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_winpos = 'bottom'$/;"	v
g:ex_hierarchy_winsize	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_winsize = 20$/;"	v
g:ex_hierarchy_winsize_zoom	C:\exVim\vimfiles\bundle\ex-hierarchy\plugin\exhierarchy.vim	/^    let g:ex_hierarchy_winsize_zoom = 40$/;"	v
g:ex_lang_filter	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^    let g:ex_lang_filter = {$/;"	v
g:ex_project_enable_help	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^    let g:ex_project_enable_help = 1$/;"	v
g:ex_project_file	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^    let g:ex_project_file = ".\/files.exproject"$/;"	v
g:ex_project_types	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^    let g:ex_project_types = {$/;"	v
g:ex_project_winpos	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^    let g:ex_project_winpos = 'left'$/;"	v
g:ex_project_winsize	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^    let g:ex_project_winsize = 30$/;"	v
g:ex_project_winsize_zoom	C:\exVim\vimfiles\bundle\ex-project\plugin\exproject.vim	/^    let g:ex_project_winsize_zoom = 60$/;"	v
g:ex_qfix_enable_help	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^    let g:ex_qfix_enable_help = 1$/;"	v
g:ex_qfix_winpos	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^    let g:ex_qfix_winpos = 'bottom'$/;"	v
g:ex_qfix_winsize	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^    let g:ex_qfix_winsize = 10$/;"	v
g:ex_qfix_winsize_zoom	C:\exVim\vimfiles\bundle\ex-qfix\plugin\exqfix.vim	/^    let g:ex_qfix_winsize_zoom = 20$/;"	v
g:ex_symbol_enable_help	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^    let g:ex_symbol_enable_help = 1$/;"	v
g:ex_symbol_select_cmd	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^    let g:ex_symbol_select_cmd = 'ts'$/;"	v
g:ex_symbol_winpos	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^    let g:ex_symbol_winpos = 'right'$/;"	v
g:ex_symbol_winsize	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^    let g:ex_symbol_winsize = 30$/;"	v
g:ex_symbol_winsize_zoom	C:\exVim\vimfiles\bundle\ex-symbol\plugin\exsymbol.vim	/^    let g:ex_symbol_winsize_zoom = 60$/;"	v
g:ex_tags_enable_help	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^    let g:ex_tags_enable_help = 1$/;"	v
g:ex_tags_ignore_case	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^    let g:ex_tags_ignore_case = 1$/;"	v
g:ex_tags_winpos	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^    let g:ex_tags_winpos = 'bottom'$/;"	v
g:ex_tags_winsize	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^    let g:ex_tags_winsize = 20$/;"	v
g:ex_tags_winsize_zoom	C:\exVim\vimfiles\bundle\ex-tags\plugin\extags.vim	/^    let g:ex_tags_winsize_zoom = 40$/;"	v
g:ex_todo_keyword	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^    let g:ex_todo_keyword = '$/;"	v
g:ex_tools_path	C:\exVim\vimfiles\bundle\ex-config\plugin\config.vim	/^    let g:ex_tools_path = '~\/.vim\/tools\/'$/;"	v
g:ex_vim_entered	C:\exVim\vimfiles\bundle\ex-vimentry\plugin\vimentry.vim	/^let g:ex_vim_entered = 0$/;"	v
g:floatingwindows	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^	let g:floatingwindows="'__Todo_List__',1,24,1;'.vimproject',1,24,1;'.prj',1,24,1;"$/;"	v
g:ft_ignore_pat	C:\exVim\vim74\filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	C:\exVim\vim74\ftplugin\sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	C:\exVim\vim74\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	C:\exVim\vim74\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	C:\exVim\vim74\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	C:\exVim\vim74\ftplugin\sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:fugitive_browse_handlers	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:getscript_cygwin	C:\exVim\vim74\autoload\getscript.vim	/^   let g:getscript_cygwin= 0$/;"	v
g:getscript_cygwin	C:\exVim\vim74\autoload\getscript.vim	/^   let g:getscript_cygwin= 1$/;"	v
g:getscript_cygwin	C:\exVim\vim74\autoload\getscript.vim	/^  let g:getscript_cygwin= 0$/;"	v
g:gnat	C:\exVim\vim74\compiler\gnat.vim	/^   let g:gnat = gnat#New ()$/;"	v
g:go_highlight_array_whitespace_error	C:\exVim\vim74\syntax\go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_chan_whitespace_error	C:\exVim\vim74\syntax\go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	C:\exVim\vim74\syntax\go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_space_tab_error	C:\exVim\vim74\syntax\go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_trailing_whitespace_error	C:\exVim\vim74\syntax\go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:haml_self_closing_tags	C:\exVim\vim74\indent\haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:iab_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let g:iab_previewer = VjdePreviewWindow_New()$/;"	v
g:iab_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let g:iab_previewer.name='iab_previewer'$/;"	v
g:iab_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let g:iab_previewer.onSelect='VjdePreviewIabSelect'$/;"	v
g:iab_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let g:iab_previewer.previewLinesFun=''$/;"	v
g:indentLine_bufNameExclude	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:,'indentLine_bufNameExclude',[])$/;"	v
g:indentLine_char	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_char = get(g:,'indentLine_char',(&encoding ==# "utf-8" && &term isnot# "linux" ? 'Â¦' : '|'))$/;"	v
g:indentLine_enabled	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_enabled = get(g:,'indentLine_enabled',1)$/;"	v
g:indentLine_faster	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_faster = get(g:,'indentLine_faster',0)$/;"	v
g:indentLine_fileType	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_fileType = get(g:,'indentLine_fileType',[])$/;"	v
g:indentLine_fileTypeExclude	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:,'indentLine_fileTypeExclude',[])$/;"	v
g:indentLine_first_char	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_first_char = get(g:,'indentLine_first_char',(&encoding ==# "utf-8" && &term isnot# "linux"  ? 'Â¦' : '|'))$/;"	v
g:indentLine_indentLevel	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_indentLevel = get(g:,'indentLine_indentLevel',10)$/;"	v
g:indentLine_leadingSpaceChar	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:,'indentLine_leadingSpaceChar',(&encoding ==# "utf-8" && &term isnot# "linux" ? 'Ë°' : '.'))$/;"	v
g:indentLine_leadingSpaceEnabled	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:,'indentLine_leadingSpaceEnabled',0)$/;"	v
g:indentLine_loaded	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_maxLines = get(g:,'indentLine_maxLines',3000)$/;"	v
g:indentLine_setColors	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_setColors = get(g:,'indentLine_setColors',1)$/;"	v
g:indentLine_showFirstIndentLevel	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:,'indentLine_showFirstIndentLevel',0)$/;"	v
g:indent_guides_autocmds_enabled	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^let g:indent_guides_autocmds_enabled         = 0$/;"	v
g:indent_guides_color_hex_guibg_pattern	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^let g:indent_guides_color_hex_guibg_pattern  = 'guibg=\\zs' . g:indent_guides_color_hex_pattern . '\\ze'$/;"	v
g:indent_guides_color_hex_pattern	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^let g:indent_guides_color_hex_pattern        = '#[0-9A-Fa-f]\\{6\\}'$/;"	v
g:indent_guides_color_name_guibg_pattern	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^let g:indent_guides_color_name_guibg_pattern = "guibg='\\\\?\\\\zs[0-9A-Za-z ]\\\\+\\\\ze'\\\\?"$/;"	v
g:indent_guides_exclude_filetypes	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^  let g:indent_guides_exclude_filetypes = ['help']$/;"	v
g:is_bash	C:\exVim\vim74\syntax\sh.vim	/^  let g:is_bash= 1$/;"	v
g:is_kornshell	C:\exVim\vim74\syntax\sh.vim	/^   let g:is_kornshell= g:is_posix$/;"	v
g:is_kornshell	C:\exVim\vim74\syntax\sh.vim	/^  let g:is_kornshell = 1$/;"	v
g:is_posix	C:\exVim\vim74\syntax\sh.vim	/^  let g:is_posix = 1$/;"	v
g:j_indent_definitions	C:\exVim\vim74\indent\j.vim	/^  let g:j_indent_definitions = 0$/;"	v
g:javascript_conceal	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^  let g:javascript_conceal = 0$/;"	v
g:less_html_style_tags	C:\exVim\vimfiles\bundle\vim-less\after\syntax\html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:liquid_default_subtype	C:\exVim\vim74\ftplugin\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	C:\exVim\vim74\syntax\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	C:\exVim\vim74\syntax\liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_2html_plugin	C:\exVim\vim74\plugin\tohtml.vim	/^let g:loaded_2html_plugin = 'vim7.4_v1'$/;"	v
g:loaded_LargeFile	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^let g:loaded_LargeFile = "v5"$/;"	v
g:loaded_SingleCompile	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^let g:loaded_SingleCompile = 1$/;"	v
g:loaded_aftercolors	C:\exVim\vimfiles\bundle\ex-aftercolors\plugin\AfterColors.vim	/^let g:loaded_aftercolors = 1$/;"	v
g:loaded_better_whitespace_plugin	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^let g:loaded_better_whitespace_plugin = 1$/;"	v
g:loaded_ctrlp	C:\exVim\vimfiles\bundle\ctrlp.vim\plugin\ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_emmet_vim	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_getscript	C:\exVim\vim74\autoload\getscript.vim	/^let g:loaded_getscript= "v36"$/;"	v
g:loaded_getscriptPlugin	C:\exVim\vim74\plugin\getscriptPlugin.vim	/^let g:loaded_getscriptPlugin = "v36"$/;"	v
g:loaded_indent_guides	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^let g:loaded_indent_guides = 1$/;"	v
g:loaded_matchparen	C:\exVim\vim74\plugin\matchparen.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_neocomplete	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^let g:loaded_neocomplete = 1$/;"	v
g:loaded_neocomplete_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\buffer.vim	/^let g:loaded_neocomplete_buffer = 1$/;"	v
g:loaded_neocomplete_dictionary	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\dictionary.vim	/^let g:loaded_neocomplete_dictionary = 1$/;"	v
g:loaded_neocomplete_tag	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\tag.vim	/^let g:loaded_neocomplete_tag = 1$/;"	v
g:loaded_neosnippet	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_nerdtree_autoload	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_netrw	C:\exVim\vim74\autoload\netrw.vim	/^let g:loaded_netrw = "v152"$/;"	v
g:loaded_netrwFileHandlers	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^let g:loaded_netrwFileHandlers= "v11b"$/;"	v
g:loaded_netrwPlugin	C:\exVim\vim74\plugin\netrwPlugin.vim	/^let g:loaded_netrwPlugin = "v152"$/;"	v
g:loaded_netrwSettings	C:\exVim\vim74\autoload\netrwSettings.vim	/^let g:loaded_netrwSettings = "v14"$/;"	v
g:loaded_searchcompl	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^    let g:loaded_searchcompl = 1$/;"	v
g:loaded_searchcompl	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^let g:loaded_searchcompl = 1$/;"	v
g:loaded_sql_completion	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let g:loaded_sql_completion = 150$/;"	v
g:loaded_surround	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\actionscript\mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ada\gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ansible\ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\apiblueprint\drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\applescript\osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asciidoc\asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bemhtml\bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bro\bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cabal\cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\chef\foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\co\coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cobol\cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coq\coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cs\mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cucumber\cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cuda\nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\d\dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dart\dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\docbk\igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\docbk\xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dockerfile\dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dustjs\swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\elixir\elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\eruby\ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\glsl\cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\handlebars\handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haxe\haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\hss\hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\jade\jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lex\flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\limbo\limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lisp\clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\llvm\llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\markdown\mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\matlab\mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\mercury\mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nasm\nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nix\nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nroff\igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nroff\mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\po\msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\pod\podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\qml\qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rmd\lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rnc\rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_stylelint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\stylelint.vim	/^let g:loaded_syntastic_scss_stylelint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sml\smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\spec\rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sql\sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\stylus\stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tcl\nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\texinfo\makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\twig\twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xquery\basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xslt\xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yacc\bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamllint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamllint.vim	/^let g:loaded_syntastic_yaml_yamllint_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\z80\z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zpt\zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zsh\zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_syntax_completion	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let g:loaded_syntax_completion = 130$/;"	v
g:loaded_tar	C:\exVim\vim74\autoload\tar.vim	/^let g:loaded_tar= "v29"$/;"	v
g:loaded_tarPlugin	C:\exVim\vim74\plugin\tarPlugin.vim	/^let g:loaded_tarPlugin = "v29"$/;"	v
g:loaded_togglebg	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_undotree	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let g:loaded_undotree = 0$/;"	v
g:loaded_undotree	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_vimball	C:\exVim\vim74\autoload\vimball.vim	/^let g:loaded_vimball = "v35"$/;"	v
g:loaded_vimballPlugin	C:\exVim\vim74\plugin\vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v35"$/;"	v
g:loaded_visincr	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let g:loaded_visincr = "v20"$/;"	v
g:loaded_visincrPlugin	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let g:loaded_visincrPlugin = "v20"$/;"	v
g:loaded_zip	C:\exVim\vim74\autoload\zip.vim	/^let g:loaded_zip= "v27"$/;"	v
g:loaded_zipPlugin	C:\exVim\vim74\plugin\zipPlugin.vim	/^let g:loaded_zipPlugin = "v27"$/;"	v
g:markdown_fenced_languages	C:\exVim\vim74\syntax\markdown.vim	/^  let g:markdown_fenced_languages = []$/;"	v
g:matchparen_insert_timeout	C:\exVim\vim74\plugin\matchparen.vim	/^  let g:matchparen_insert_timeout = 60$/;"	v
g:matchparen_timeout	C:\exVim\vim74\plugin\matchparen.vim	/^  let g:matchparen_timeout = 300$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_choices = " &Unikso \\n &Dos \\n &Mak \\n &Rezigni "$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Peru "$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annuler "$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n¥­¥ã¥ó¥»¥ë(&C)"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nã­ã£ã³ã»ã«(&C)"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nLZ(&C)"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nï&ÔÍÅÎÁ"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nÐ&ÑÐ¼ÐµÐ½Ð°"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&PrekliÄi"$/;"	v
g:menutrans_fileformat_choices	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Há»§y bá»"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccioneu el format per escriure el fitxer."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce øádkù"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce ÅÃ¡dkÅ¯"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce øádkù"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce radku"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_fileformat_dialog = "Wählen Sie ein Datei-Format aus"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Elektu la formaton de la skribonta dosiero."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccione el formato para escribir el archivo"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_dialog = "Anaa tiedoston kirjoitusmuoto."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_dialog = "Choisissez le format dans lequel écrire le fichier."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Válaszd ki a fájl formátumát"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_fileformat_dialog = "VÃ¡laszd ki a fÃ¡jl formÃ¡tumÃ¡t"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_fileformat_dialog = "Scegli formato con cui scrivere il file"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_dialog = "¥Õ¥¡¥¤¥ë½ÐÎÏ¤ÎºÝ¤Î²þ¹Ôµ­¹æ¤Î·Á¼°¤òÁª¤ó¤Ç¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ãã¡ã¤ã«åºåã®éã®æ¹è¡è¨å·ã®å½¢å¼ãé¸ãã§ãã ãã."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_dialog = "t@CoÍÌÛÌüsLÌ`®ðIñÅ­¾³¢."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_fileformat_dialog = "Selecteer formaat voor het schrijven van het bestand"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_fileformat_dialog = "Velg filformat som filen skal lagres med"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w ktÃ³rym ten plik ma byÄ zapisany"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_dialog = "÷ÙÂÅÒÉÔÅ ÆÏÒÍÁÔ ÆÁÊÌÁ."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_dialog = "ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ°Ð¹Ð»Ð°."$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_dialog = "¸×ÐÑÕàØâÕ Òàáâã ÔÐâÞâÕÚÕ"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ÐÐ·Ð°Ð±ÐµÑÐ¸ÑÐµ Ð²ÑÑÑÑ Ð´Ð°ÑÐ¾ÑÐµÐºÐµ"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let g:menutrans_fileformat_dialog = "Välj filformat som filen ska sparas med"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_fileformat_dialog = "Âèáåð³òü ôîðìàò ôàéëó"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_fileformat_dialog = "÷ÉÂÅÒ¦ÔØ ÆÏÒÍÁÔ ÆÁÊÌÕ"$/;"	v
g:menutrans_fileformat_dialog	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_dialog = "HÃ£y chá»n Äá»nh dáº¡ng táº­p tin."$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduïu el terme sobre el qual necessiteu ajuda.\\n\\nUseu el prefix i_ per ordres d'entrada (p.ex.: i_CTRL-X)\\nUseu el prefix c_ per ordres de la línia d'ordres (p.ex.: c_<Del>)\\nUseu el prefix ' per noms d'opcions (p.ex.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_help_dialog = "Zadejte hledaný pøíkaz nebo slovo:\\n\\n\\tPøidejte i_ pro pøíkazy vkládacího re¾imu (napø. i_CTRL-X)\\n\\tPøidejte c_ pro pøíkazy pøíkazové øádky (napø. c_<Del>)\\n\\tPøidejte ' pro jméno volby (napø. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_help_dialog = "Zadejte hledanÃ½ pÅÃ­kaz nebo slovo:\\n\\n\\tPÅidejte i_ pro pÅÃ­kazy vklÃ¡dacÃ­ho reÅ¾imu (napÅ. i_CTRL-X)\\n\\tPÅidejte c_ pro pÅÃ­kazy pÅÃ­kazovÃ© ÅÃ¡dky (napÅ. c_<Del>)\\n\\tPÅidejte ' pro jmÃ©no volby (napÅ. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_help_dialog = "Zadejte hledaný pøíkaz nebo slovo:\\n\\n\\tPøidejte i_ pro pøíkazy vkládacího reimu (napø. i_CTRL-X)\\n\\tPøidejte c_ pro pøíkazy pøíkazové øádky (napø. c_<Del>)\\n\\tPøidejte ' pro jméno volby (napø. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_help_dialog = "Zadejte hledany prikaz nebo slovo:\\n\\n\\tPridejte i_ pro prikazy vkladaciho rezimu (napr. i_CTRL-X)\\n\\tPridejte c_ pro prikazy prikazove radky (napr. c_<Del>)\\n\\tPridejte ' pro jmeno volby (napr. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_help_dialog = "Geben Sie einen Befehl oder ein Wort ein, für das Sie Hilfe benötigen:\\n\\nVerwenden Sie i_ für Eingabe ('input') Befehle (z.B.: i_CTRL-X)\\nVerwenden Sie c_ für Befehls-Zeilen ('command-line') Befehle (z.B.: c_<Del>)\\nVerwenden Sie ' für Options-Namen (z.B.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_help_dialog = "Tajpu komandon aÅ­ serÄendan vorton en la helparo.\\n\\nAldonu i_ por la komandoj de la enmeta reÄimo (ekz: i_CTRL-X)\\nAldonu c_ por redakto de la komanda linio (ekz: c_<Del>)\\nÄirkaÅ­i la opciojn per apostrofoj (ekz: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduzca un nombre de comando o palabra para obtener ayuda;\\n\\nAnteponga i_ para comandos de entrada (e.g.: i_CTRL-X)\\nAnteponga c_ para comandos de la línea de comandos (e.g.: c_<Del>)\\nAnteponga ` para un nombre de opción (e.g.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_help_dialog = "Anna komento tai sana, jota haetaan ohjeesta.\\n\\nAloita i_:llä syöttötilan komentoja varten (esim. i_CTRL-X)\\nAloita c_:llä komentoriviä varten (esim. c_<Del>)\\nKirjoita asetukset puolilainausmerkkeijin (esim. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_help_dialog = "Entrez une commande ou un mot à rechercher dans l'aide.\\n\\nAjoutez i_ pour les commandes du mode Insertion (ex: i_CTRL-X)\\nAjoutez c_ pour l'édition de la ligne de commande (ex: c_<Del>)\\nEntourez les options avec des apostrophes (ex: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_help_dialog = "Batti un comando o una parola per cercare aiuto:\\n\\nPremetti i_ per comandi in modo Input (ad.es.: i_CTRL-X)\\nPremetti c_ per comandi che editano la linea-comandi (ad.es.: c_<Del>)\\nPremetti ' per un nome di opzione (ad.es.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_help_dialog = "¥Ø¥ë¥×¤ò¸¡º÷¤·¤¿¤¤¥³¥Þ¥ó¥É¤â¤·¤¯¤ÏÃ±¸ì¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n\\nÁÞÆþ¥â¡¼¥É¤Î¥³¥Þ¥ó¥É¤Ë¤Ï i_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: i_CTRL-X)\\n¥³¥Þ¥ó¥É¥é¥¤¥óÊÔ½¸¥³¥Þ¥ó¥É¤Ë¤Ï c_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: c_<Del>)\\n¥ª¥×¥·¥ç¥ó¤ÎÌ¾Á°¤Ë¤Ï ' ¤òÉÕ²Ã¤·¤Þ¤¹. (Îã: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_help_dialog = "ãã«ããæ¤ç´¢ãããã³ãã³ããããã¯åèªãå¥åãã¦ãã ãã:\\n\\næ¿å¥ã¢ã¼ãã®ã³ãã³ãã«ã¯ i_ ãåé ­ã«ä»å ãã¾ã. (ä¾: i_CTRL-X)\\nã³ãã³ãã©ã¤ã³ç·¨éã³ãã³ãã«ã¯ c_ ãåé ­ã«ä»å ãã¾ã. (ä¾: c_<Del>)\\nãªãã·ã§ã³ã®ååã«ã¯ ' ãä»å ãã¾ã. (ä¾: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_help_dialog = "wvðõµ½¢R}hàµ­ÍPêðüÍµÄ­¾³¢:\\n\\n}ü[hÌR}hÉÍ i_ ðæªÉtÁµÜ·. (á: i_CTRL-X)\\nR}hCÒWR}hÉÍ c_ ðæªÉtÁµÜ·. (á: c_<Del>)\\nIvVÌ¼OÉÍ ' ðtÁµÜ·. (á: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_help_dialog = "Skriv en kommando eller ord du vil ha hjelp om:\\n\\nLegg til i_ i begynnelsen for inndatametoder (f.eks.: i_CTRL-X)\\nLegg til c_ i begynnelsen for kommandoer som redigerer kommandolinjen (f.eks.: c_<Del>)\\nLegg til ' i begynnelsen for et valgnavn (f.eks.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_help_dialog = "÷×ÅÄÉÔÅ ËÏÍÁÎÄÕ ÉÌÉ ÓÌÏ×Ï ÄÌÑ ÐÏÉÓËÁ:\\n\\näÏÂÁ×ØÔÅ i_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ÒÅÖÉÍÁ ÷ÓÔÁ×ËÉ (ÎÁÐÒÉÍÅÒ, i_CTRL-X)\\näÏÂÁ×ØÔÅ c_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ïÂÙÞÎÏÇÏ ÒÅÖÉÍÁ (ÎÁÐÒÉÍÅÒ, Ó_<Del>)\\näÏÂÁ×ØÔÅ ' ÄÌÑ ÐÏÉÓËÁ ÓÐÒÁ×ËÉ ÐÏ ÏÐÃÉÉ (ÎÁÐÒÉÍÅÒ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_help_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð¸Ð»Ð¸ ÑÐ»Ð¾Ð²Ð¾ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ°:\\n\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ i_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÑÐµÐ¶Ð¸Ð¼Ð° ÐÑÑÐ°Ð²ÐºÐ¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, i_CTRL-X)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ c_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÐÐ±ÑÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, Ñ_<Del>)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ ' Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ¿ÑÐ°Ð²ÐºÐ¸ Ð¿Ð¾ Ð¾Ð¿ÑÐ¸Ð¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero ¾elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero Å¾elite pomoÄ:\\n\\nUporabite predpono i_ za ukaze v naÄinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_help_dialog = "HÃ£y nháº­p cÃ¢u lá»nh hoáº·c tá»« khÃ³a tÃ¬m kiáº¿m:\\n\\nThÃªm i_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» Nháº­p Input (VÃ­ dá»¥, i_CTRL-X)\\nThÃªm c_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» soáº¡n tháº£o dÃ²ng lá»nh (VÃ­ dá»¥, Ñ_<Del>)\\nThÃªm ' Äá» tÃ¬m kiáº¿m trá»£ giÃºp cho má»t tÃ¹y chá»n (vÃ­ dá»¥, 'shiftwidth')"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_no_file = "[Cap fitxer]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_no_file = "[®ádný soubor]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_no_file = "[Å½Ã¡dnÃ½ soubor]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_no_file = "[ádný soubor]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_no_file = "[Zadny soubor]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_no_file = "[Keine Datei]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_no_file = "[Neniu dosiero]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_no_file = "[Sin archivo]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_no_file = "[Ei tiedostoja]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_no_file = "[Aucun fichier]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_no_file = "[Senza nome]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_no_file = "[ÌµÂê]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_no_file = "[ç¡é¡]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_no_file = "[³è]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_no_file = "[Uten navn]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduïu les ubicacions on cercar fitxers.\\nSepareu els noms dels directoris amb una coma."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledávání souborù. Jednotlivé cesty oddìlte èárkou"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledÃ¡vÃ¡nÃ­ souborÅ¯. JednotlivÃ© cesty oddÄlte ÄÃ¡rkou"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledávání souborù. Jednotlivé cesty oddìlte èárkou"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledavani souboru. Jednotlive cesty oddelte carkou"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_path_dialog = "Geben Sie Such-Pfade für Dateien ein.\\nTrennen Sie die Verzeichnis-Namen durch Kommata."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_path_dialog = "Tajpu la vojon de serÄo de dosieroj.\\nDisigu la dosierujojn per komoj."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduzca la ruta de búsqueda para los archivos.\\nSepare los nombres de los directorios con una coma."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_path_dialog = "Anna tiedostojen hakupolku.\\nErota hakemistot pilkuin."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_path_dialog = "Entrez le chemin de recherche des fichiers.\\nSéparez les répertoires par des virgules."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Írd be a keresett fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_path_dialog = "Ãrd be a keresett fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_path_dialog = "Batti percorso di ricerca per i file.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_path_dialog = "¥Õ¥¡¥¤¥ë¤Î¸¡º÷¥Ñ¥¹¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_path_dialog = "ãã¡ã¤ã«ã®æ¤ç´¢ãã¹ãå¥åãã¦ãã ãã:\\nãã£ã¬ã¯ããªåã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_path_dialog = "t@CÌõpXðüÍµÄ­¾³¢:\\nfBNg¼ÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_path_dialog = "Typ het zoekpad voor bestanden.\\nGebruik commas tussen de padnamen."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_path_dialog = "Skriv søkesti for filer.\\nSkill katalognavn med komma."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Wprowad¼ ¶cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_path_dialog = "WprowadÅº ÅcieÅ¼kÄ poszukiwania plikÃ³w.\\nProszÄ rozdzielaÄ nazwy katalogÃ³w przecinkiem."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let g:menutrans_path_dialog = "Wprowad cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_path_dialog = "õËÁÖÉÔÅ ÐÕÔØ ÄÌÑ ÐÏÉÓËÁ ÆÁÊÌÏ×.\\néÍÅÎÁ ËÁÔÁÌÏÇÏ× ÒÁÚÄÅÌÑÀÔÓÑ ÚÁÐÑÔÙÍÉ."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_path_dialog = "Ð£ÐºÐ°Ð¶Ð¸ÑÐµ Ð¿ÑÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ°Ð¹Ð»Ð¾Ð².\\nÐÐ¼ÐµÐ½Ð° ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ð¾Ð² ÑÐ°Ð·Ð´ÐµÐ»ÑÑÑÑÑ Ð·Ð°Ð¿ÑÑÑÐ¼Ð¸."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loÄite z vejico."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_path_dialog = "ÃÝÕáØâÕ ßãâ ßàÕâàÐÓÕ ×Ð ÔÐâÞâÕÚÕ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ ÔØàÕÚâÞàØøãÜÐ."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_path_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¿ÑÑ Ð¿ÑÐµÑÑÐ°Ð³Ðµ Ð·Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð° Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸ÑÑÐ¼Ð°."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let g:menutrans_path_dialog = "Skriv in sökväg för filer.\\nSeparera katalognamn med komma"$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_path_dialog = "Âêàæ³òü øëÿõ ïîøóêó ôàéë³â\\nÐîçä³ëÿéòå íàçâè äèðåêòîð³é êîìàìè."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_path_dialog = "÷ËÁÖ¦ÔØ ÛÌÑÈ ÐÏÛÕËÕ ÆÁÊÌ¦×\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ÄÉÒÅËÔÏÒ¦Ê ËÏÍÁÍÉ."$/;"	v
g:menutrans_path_dialog	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_path_dialog = "HÃ£y chá» ra ÄÆ°á»ng dáº«n Äá» tÃ¬m kiáº¿m táº­p tin.\\nTÃªn cá»§a thÆ° má»¥c phÃ¢n cÃ¡ch nhau bá»i dáº¥u pháº©y."$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_set_lang_to =				'õÓÔÁÎÏ×ÉÔØ ÑÚÙË'$/;"	v
g:menutrans_set_lang_to	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_set_lang_to =				'Ð£ÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ ÑÐ·ÑÐº'$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduïu els noms dels fitxers d'etiquetes.\\nSepareu els noms amb una coma."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Zadejte jména souborù s tagy. Jména oddìlte èárkami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_tags_dialog = "Zadejte jmÃ©na souborÅ¯ s tagy. JmÃ©na oddÄlte ÄÃ¡rkami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_tags_dialog = "Zadejte jména souborù s tagy. Jména oddìlte èárkami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_tags_dialog = "Zadejte jmena souboru s tagy. Jmena oddelte carkami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_tags_dialog = "Geben Sie die Namen der 'tag'-Dateien ein.\\nTrennen Sie die Namen durch Kommata."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_tags_dialog = "Tajpu la nomojn de dosieroj de etikedoj.\\nDisigu la nomojn per komoj."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduzca los nombres de los archivos de tags.\\nSepare los nombres con una coma."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_tags_dialog = "Anna tägitiedostojen nimet.\\nErota tidostot pilkuin."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_tags_dialog = "Entrez les noms des fichiers d'étiquettes.\\nSéparez les noms par des virgules."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Írd be a tag fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_tags_dialog = "Ãrd be a tag fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_tags_dialog = "Batti nome dei file di tag.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_tags_dialog = "¥¿¥°¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\nÌ¾Á°¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_tags_dialog = "ã¿ã°ãã¡ã¤ã«ã®ååãå¥åãã¦ãã ãã:\\nååã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_tags_dialog = "^Ot@CÌ¼OðüÍµÄ­¾³¢:\\n¼OÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_tags_dialog = "Typ namen van tag bestanden.\\nGebruik commas tussen de namen."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_tags_dialog = "Skriv navn på tagfiler.\\nSkill navnene med komma."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plikÃ³w tagÃ³w.\\nProszÄ rozdzielaÄ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_tags_dialog = "÷×ÅÄÉÔÅ ÉÍÅÎÁ ÆÁÊÌÏ× ÍÅÔÏË (ÞÅÒÅÚ ÚÁÐÑÔÕÀ).\\n"$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_tags_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° ÑÐ°Ð¹Ð»Ð¾Ð² Ð¼ÐµÑÐ¾Ðº (ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ).\\n"$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaÄkami ('tag').\\nImana loÄite z vejicami."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_tags_dialog = "ÃÝÕáØâÕ ØÜÕÝÐ ÔÐâÞâÕÚÐ áÐ Þ×ÝÐÚÐÜÐ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_tags_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐ° ÑÐ° Ð¾Ð·Ð½Ð°ÐºÐ°Ð¼Ð°\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð°."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let g:menutrans_tags_dialog = "Skriv in namn på taggfiler.\\nSeparera namn med komma."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_tags_dialog = "Âêàæ³òü íàçâè ôàéë³â ïîì³òîê\\nÐîçä³ëÿéòå íàçâè êîìàìè."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_tags_dialog = "÷ËÁÖ¦ÔØ ÎÁÚ×É ÆÁÊÌ¦× ÐÏÍ¦ÔÏË\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ËÏÍÁÍÉ."$/;"	v
g:menutrans_tags_dialog	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_tags_dialog = "Nháº­p tÃªn táº­p tin tháº» ghi (phÃ¢n cÃ¡ch bá»i dáº¥u pháº©y).\\n"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduïu la nova amplada del text (0 per infinit): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Zadejte délku øádku (0 pro zakázání formátování):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Zadejte dÃ©lku ÅÃ¡dku (0 pro zakÃ¡zÃ¡nÃ­ formÃ¡tovÃ¡nÃ­):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let g:menutrans_textwidth_dialog = "Zadejte délku øádku (0 pro zakázání formátování):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let g:menutrans_textwidth_dialog = "Zadejte delku radku (0 pro zakazani formatovani):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let g:menutrans_textwidth_dialog = "Geben Sie eine neue Text-Breite ein (oder 0, um die Formatierung abzuschalten)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Tajpu la novan larÄon de teksto\\n(0 por malÅalti formatigon)."$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduzca el nuevo ancho del texto (0 para desactivar el quiebre de línea): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_textwidth_dialog = "Anna uusi tekstin leveys\\n(0 poistaa käytöstä)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_textwidth_dialog = "Entrez la nouvelle largeur du texte\\n(0 pour désactiver le formattage)."$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Írd be a szöveg szélességét (0 = formázás kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ãrd be a szÃ¶veg szÃ©lessÃ©gÃ©t (0 = formÃ¡zÃ¡s kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let g:menutrans_textwidth_dialog = "Batti nuova lunghezza linea (0 per inibire la formattazione): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_textwidth_dialog = "¥Æ¥­¥¹¥È¤ÎÉý('textwidth')¤òÀßÄê¤·¤Æ¤¯¤À¤µ¤¤ (0¤ÇÀ°·Á¤òÌµ¸ú²½):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_textwidth_dialog = "ãã­ã¹ãã®å¹('textwidth')ãè¨­å®ãã¦ãã ãã (0ã§æ´å½¢ãç¡å¹å):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let g:menutrans_textwidth_dialog = "eLXgÌ('textwidth')ðÝèµÄ­¾³¢ (0Å®`ð³ø»):"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_textwidth_dialog = "Typ de nieuwe tekst breedte (0 om formatteren uit the schakelen): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^	let g:menutrans_textwidth_dialog = "Velg ny tekstbredde (0 for å forhindre formatering): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Wprowad¼ now± szeroko¶æ tekstu (0 wy³±cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_textwidth_dialog = "WprowadÅº nowÄ szerokoÅÄ tekstu (0 wyÅÄcza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let g:menutrans_textwidth_dialog = "Wprowad now¹ szerokoæ tekstu (0 wy³¹cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_pt_br.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_textwidth_dialog = "÷×ÅÄÉÔÅ ÛÉÒÉÎÕ ÔÅËÓÔÁ ÄÌÑ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ.\\näÌÑ ÏÔÍÅÎÙ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ ××ÅÄÉÔÅ 0."$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let g:menutrans_textwidth_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° Ð´Ð»Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ.\\nÐÐ»Ñ Ð¾ÑÐ¼ÐµÐ½Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð²Ð²ÐµÐ´Ð¸ÑÐµ 0."$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo ¹irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo Å¡irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu sirinu teksta (0 sprecava prelom)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu ¹irinu teksta (0 spreèava prelom)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_textwidth_dialog = "ÃÝÕáØâÕ ÝÞÒã èØàØÝã âÕÚáâÐ (0 áßàÕçÐÒÐ ßàÕÛÞÜ)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð¾Ð²Ñ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° (0 ÑÐ¿ÑÐµÑÐ°Ð²Ð° Ð¿ÑÐµÐ»Ð¾Ð¼)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let g:menutrans_textwidth_dialog = "Välj ny textbredd (0 för att förhindra formatering): "$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_textwidth_dialog = "Âêàæ³òü íîâó øèðèíó òåêñòó (0 äëÿ â³äì³íè ôîìàòóâàííÿ)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_textwidth_dialog = "÷ËÁÖ¦ÔØ ÎÏ×Õ ÛÉÒÉÎÕ ÔÅËÓÔÕ (0 ÄÌÑ ×¦ÄÍ¦ÎÉ ÆÏÍÁÔÕ×ÁÎÎÑ)"$/;"	v
g:menutrans_textwidth_dialog	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let g:menutrans_textwidth_dialog = "HÃ£y nháº­p chiá»u rá»ng vÄn báº£n má»i.\\nNháº­p 0 Äá» há»§y bá»."$/;"	v
g:neocomplete#auto_completion_start_length	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#auto_completion_start_length =$/;"	v
g:neocomplete#cursor_hold_i_time	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#cursor_hold_i_time =$/;"	v
g:neocomplete#delimiter_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#delimiter_patterns =$/;"	v
g:neocomplete#disable_auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#disable_auto_complete =$/;"	v
g:neocomplete#enable_auto_close_preview	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview =$/;"	v
g:neocomplete#enable_auto_delimiter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter =$/;"	v
g:neocomplete#enable_auto_select	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_auto_select =$/;"	v
g:neocomplete#enable_camel_case	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_camel_case =$/;"	v
g:neocomplete#enable_cursor_hold_i	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_cursor_hold_i =$/;"	v
g:neocomplete#enable_debug	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^let g:neocomplete#enable_debug =$/;"	v
g:neocomplete#enable_fuzzy_completion	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion =$/;"	v
g:neocomplete#enable_fuzzy_completion	C:\exVim\vimfiles\javascript.vim	/^let g:neocomplete#enable_fuzzy_completion=0$/;"	v
g:neocomplete#enable_ignore_case	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_ignore_case =$/;"	v
g:neocomplete#enable_multibyte_completion	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_multibyte_completion =$/;"	v
g:neocomplete#enable_refresh_always	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_refresh_always =$/;"	v
g:neocomplete#enable_smart_case	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#enable_smart_case =$/;"	v
g:neocomplete#fallback_mappings	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#fallback_mappings =$/;"	v
g:neocomplete#force_omni_input_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns =$/;"	v
g:neocomplete#ignore_source_files	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#ignore_source_files =$/;"	v
g:neocomplete#keyword_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#keyword_patterns =$/;"	v
g:neocomplete#lock_buffer_name_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#lock_iminsert	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#lock_iminsert =$/;"	v
g:neocomplete#manual_completion_start_length	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#manual_completion_start_length =$/;"	v
g:neocomplete#max_keyword_width	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#max_keyword_width =$/;"	v
g:neocomplete#max_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#max_list =$/;"	v
g:neocomplete#min_keyword_length	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#min_keyword_length =$/;"	v
g:neocomplete#release_cache_time	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#release_cache_time =$/;"	v
g:neocomplete#skip_auto_completion_time	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time =$/;"	v
g:neocomplete#sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#sources =$/;"	v
g:neocomplete#sources#buffer#cache_limit_size	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^let g:neocomplete#sources#buffer#cache_limit_size =$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#buffer#max_keyword_width	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^let g:neocomplete#sources#buffer#max_keyword_width =$/;"	v
g:neocomplete#sources#dictionary#dictionaries	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^let g:neocomplete#sources#dictionary#dictionaries =$/;"	v
g:neocomplete#sources#member#input_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^let g:neocomplete#sources#member#input_patterns =$/;"	v
g:neocomplete#sources#member#prefix_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^let g:neocomplete#sources#member#prefix_patterns =$/;"	v
g:neocomplete#sources#omni#functions	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^let g:neocomplete#sources#omni#functions =$/;"	v
g:neocomplete#sources#omni#input_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^let g:neocomplete#sources#omni#input_patterns =$/;"	v
g:neocomplete#tags_filter_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#tags_filter_patterns =$/;"	v
g:neocomplete#text_mode_filetypes	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let g:neocomplete#text_mode_filetypes =$/;"	v
g:netrw_cursor	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_cursor= g:netrw_cursorline$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\tar.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\tar.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\tar.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	C:\exVim\vim74\autoload\vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_dav_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "cadaver"$/;"	v
g:netrw_dav_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "curl"$/;"	v
g:netrw_dav_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_dav_cmd   = ""$/;"	v
g:netrw_fetch_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= ""$/;"	v
g:netrw_fetch_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= "fetch -o"$/;"	v
g:netrw_ftp_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_cmd	= "ftp"$/;"	v
g:netrw_ftp_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "dir"$/;"	v
g:netrw_ftp_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "ls -lF"$/;"	v
g:netrw_ftp_options	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_ftp_options= "-i -n"$/;"	v
g:netrw_ftp_sizelist_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "dir"$/;"	v
g:netrw_ftp_sizelist_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "ls -slF"$/;"	v
g:netrw_ftp_timelist_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "dir"$/;"	v
g:netrw_ftp_timelist_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "ls -tlF"$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd	= ""$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "curl"$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "fetch"$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "wget"$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd = "elinks"$/;"	v
g:netrw_http_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_http_cmd = "links"$/;"	v
g:netrw_ignorenetrc	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_ignorenetrc	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 1$/;"	v
g:netrw_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_list_cmd= ""$/;"	v
g:netrw_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME:"$/;"	v
g:netrw_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa"$/;"	v
g:netrw_list_cmd	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_list_cmd= g:netrw_list_cmd." -l"$/;"	v
g:netrw_liststyle	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_liststyle= s:THINLIST$/;"	v
g:netrw_localcmdshell	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_localcmdshell= ""$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localcopycmd= expand("$COMSPEC")." \/c copy"$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_localcopycmd= g:netrw_local_copycmd$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\tar.vim	/^    let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\tar.vim	/^    let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\tar.vim	/^   let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	C:\exVim\vim74\autoload\tar.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localmkdir	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localmkdir= expand("$COMSPEC")." \/c mkdir"$/;"	v
g:netrw_localmkdir	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_localmkdir= g:netrw_local_mkdir$/;"	v
g:netrw_localmovecmd	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localmovecmd= expand("$COMSPEC")." \/c move"$/;"	v
g:netrw_localmovecmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_localmovecmd= ""$/;"	v
g:netrw_localmovecmd	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_localmovecmd= g:netrw_local_movecmd$/;"	v
g:netrw_localrmdir	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_localrmdir= expand("$COMSPEC")." \/c rmdir"$/;"	v
g:netrw_localrmdir	C:\exVim\vim74\autoload\netrw.vim	/^ let g:netrw_localrmdir= g:netrw_local_rmdir$/;"	v
g:netrw_scp_cmd	C:\exVim\vim74\autoload\netrw.vim	/^   let g:netrw_scp_cmd ="pscp -i C:\\\\private.ppk"$/;"	v
g:netrw_sort_sequence	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:netrw_sort_sequence	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\<core\\%(\\.\\d\\+\\)\\=\\>,\\.h$,\\.c$,\\.cpp$,\\~\\=\\*$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:netrw_xstrlen	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_xstrlen= 0$/;"	v
g:netrw_xstrlen	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_xstrlen= 1$/;"	v
g:netrw_xstrlen	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_xstrlen= g:Align_xstrlen$/;"	v
g:netrw_xstrlen	C:\exVim\vim74\autoload\netrw.vim	/^  let g:netrw_xstrlen= g:drawit_xstrlen$/;"	v
g:omni_sql_default_compl_type	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_sql_default_compl_type = 'table'$/;"	v
g:omni_sql_ignorecase	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_sql_ignorecase = &ignorecase$/;"	v
g:omni_sql_include_owner	C:\exVim\vim74\autoload\sqlcomplete.vim	/^            let g:omni_sql_include_owner = 1$/;"	v
g:omni_sql_include_owner	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_sql_include_owner = 0$/;"	v
g:omni_sql_precache_syntax_groups	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_sql_precache_syntax_groups = [$/;"	v
g:omni_sql_use_tbl_alias	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_sql_use_tbl_alias = 'a'$/;"	v
g:omni_syntax_group_exclude_lifelines	C:\exVim\vim74\syntax\lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_group_exclude_sql	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_syntax_group_exclude_sql = ''$/;"	v
g:omni_syntax_group_include_sql	C:\exVim\vim74\autoload\sqlcomplete.vim	/^    let g:omni_syntax_group_include_sql = ''$/;"	v
g:omni_syntax_ignorecase	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_minimum_length	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_use_iskeyword	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:omni_syntax_use_iskeyword_numeric	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword_numeric = 1$/;"	v
g:omni_syntax_use_single_byte	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_use_single_byte = 1$/;"	v
g:pdv_cfg_Author	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Author = "Tobias Schlitt <toby@php.net>"$/;"	v
g:pdv_cfg_BOL	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_BOL = "norm! o"$/;"	v
g:pdv_cfg_Comment1	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Comment1 = " * "$/;"	v
g:pdv_cfg_CommentHead	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_CommentHead = "\/**"$/;"	v
g:pdv_cfg_CommentSingle	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_CommentSingle = "\/\/"$/;"	v
g:pdv_cfg_CommentTail	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_CommentTail = " *\/"$/;"	v
g:pdv_cfg_Commentn	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Commentn = " * "$/;"	v
g:pdv_cfg_Copyright	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Copyright = "1997-2005 The PHP Group"$/;"	v
g:pdv_cfg_EOL	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_EOL = ""$/;"	v
g:pdv_cfg_License	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_License = "PHP Version 3.0 {@link http:\/\/www.php.net\/license\/3_0.txt}"$/;"	v
g:pdv_cfg_Package	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Package = ""$/;"	v
g:pdv_cfg_ReturnVal	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_ReturnVal = "void"$/;"	v
g:pdv_cfg_Type	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Type = "mixed"$/;"	v
g:pdv_cfg_Uses	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Uses = 1$/;"	v
g:pdv_cfg_Version	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_Version = "$id$"$/;"	v
g:pdv_cfg_paste	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_paste = 1$/;"	v
g:pdv_cfg_php4always	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_php4always = 1$/;"	v
g:pdv_cfg_php4guess	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_php4guess = 1$/;"	v
g:pdv_cfg_php4guessval	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_cfg_php4guessval = "protected"$/;"	v
g:pdv_re_abstract	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_abstract = '\\(abstract\\)'$/;"	v
g:pdv_re_array	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_array  = "^array *(.*"$/;"	v
g:pdv_re_attribute	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_attribute = '^\\s*\\(\\(private\\|public\\|protected\\|var\\|static\\)\\+\\)\\s*\\$\\([^ ;=]\\+\\)[ =]*\\(.*\\);\\?$'$/;"	v
g:pdv_re_bool	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_bool = "\\(true\\|false\\)"$/;"	v
g:pdv_re_class	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_class = '^\\s*\\([a-zA-Z]*\\)\\s*\\(interface\\|class\\)\\s*\\([^ ]\\+\\)\\s*\\(extends\\)\\?\\s*\\([a-zA-Z0-9]*\\)\\?\\s*\\(implements*\\)\\? *\\([a-zA-Z0-9_ ,]*\\)\\?.*$'$/;"	v
g:pdv_re_comment	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_comment = ' *\\*\/ *'$/;"	v
g:pdv_re_final	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_final = '\\(final\\)'$/;"	v
g:pdv_re_float	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_float  = '^[0-9.]\\+'$/;"	v
g:pdv_re_func	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_func = '^\\s*\\([a-zA-Z ]*\\)function\\s\\+\\([^ (]\\+\\)\\s*(\\s*\\(.*\\)\\s*)\\s*[{;]\\?$'$/;"	v
g:pdv_re_indent	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_indent = '^\\s*'$/;"	v
g:pdv_re_int	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_int    = '^[0-9]\\+$'$/;"	v
g:pdv_re_param	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_param = ' *\\([^ &]*\\) *&\\?\\$\\([A-Za-z_][A-Za-z0-9_]*\\) *=\\? *\\(.*\\)\\?$'$/;"	v
g:pdv_re_scope	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_scope = '\\(private\\|protected\\|public\\)'$/;"	v
g:pdv_re_static	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_static = '\\(static\\)'$/;"	v
g:pdv_re_string	C:\exVim\vimfiles\bundle\PDV--phpDocumentor-for-Vim\plugin\php-doc.vim	/^let g:pdv_re_string = "['\\"].*"$/;"	v
g:phpcomplete_cache_taglists	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_cache_taglists = 1$/;"	v
g:phpcomplete_complete_for_unknown_classes	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_complete_for_unknown_classes = 0$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_parse_docblock_comments	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_parse_docblock_comments = 0$/;"	v
g:phpcomplete_relax_static_constraint	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_relax_static_constraint = 0$/;"	v
g:phpcomplete_search_tags_for_variables	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let g:phpcomplete_search_tags_for_variables = 0$/;"	v
g:proj_running	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        let g:proj_running = bufnr(bufname.'\\>')$/;"	v
g:pydoc_executable	C:\exVim\vim74\ftplugin\python.vim	/^        let g:pydoc_executable = 0$/;"	v
g:pydoc_executable	C:\exVim\vim74\ftplugin\python.vim	/^        let g:pydoc_executable = 1$/;"	v
g:r_indent_align_args	C:\exVim\vim74\indent\r.vim	/^    let g:r_indent_align_args = 1$/;"	v
g:r_indent_comment_column	C:\exVim\vim74\indent\r.vim	/^    let g:r_indent_comment_column = 40$/;"	v
g:r_indent_ess_comments	C:\exVim\vim74\indent\r.vim	/^    let g:r_indent_ess_comments = 0$/;"	v
g:r_indent_ess_compatible	C:\exVim\vim74\indent\r.vim	/^    let g:r_indent_ess_compatible = 0$/;"	v
g:rst_syntax_code_list	C:\exVim\vim74\syntax\rst.vim	/^    let g:rst_syntax_code_list = ['vim', 'java', 'cpp', 'lisp', 'php',$/;"	v
g:ruby_default_path	C:\exVim\vim74\ftplugin\ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	C:\exVim\vim74\ftplugin\ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_version_paths	C:\exVim\vim74\ftplugin\ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	C:\exVim\vim74\ftplugin\ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	C:\exVim\vim74\autoload\rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	C:\exVim\vim74\autoload\rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	C:\exVim\vim74\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	C:\exVim\vim74\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	C:\exVim\vim74\autoload\rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:sh_fold_enabled	C:\exVim\vim74\syntax\sh.vim	/^ let g:sh_fold_enabled= 0$/;"	v
g:spell_clean_limit	C:\exVim\vim74\spell\cleanadd.vim	/^  let g:spell_clean_limit = 1$/;"	v
g:spellfile_URL	C:\exVim\vim74\autoload\spellfile.vim	/^    let g:spellfile_URL = 'ftp:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:spellfile_URL	C:\exVim\vim74\autoload\spellfile.vim	/^    let g:spellfile_URL = 'http:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:syntastic_	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ada\gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_drafter_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\apiblueprint\drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_checkers	C:\exVim\vimfiles\asmscript.vim	/^let g:syntastic_asm_checkers = [ 'masm' ]$/;"	v
g:syntastic_asm_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_avrgcc_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_clang_check_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cobol\cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\d\dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_generic	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\markdown\mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_lintr_cache	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_svtools_styles	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_sass_check_partials	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verapp_config_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\verapp.vim	/^    let g:syntastic_verapp_config_file = '.syntastic_verapp_config'$/;"	v
g:syntastic_verilog_compiler_options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tabular_default_format	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tar_browseoptions	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_browseoptions= "Ptf"$/;"	v
g:tar_cmd	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_cmd= "tar"$/;"	v
g:tar_copycmd	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_copycmd= g:netrw_localcopycmd$/;"	v
g:tar_extractcmd	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_extractcmd= "tar -xf"$/;"	v
g:tar_readoptions	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_readoptions= "OPxf"$/;"	v
g:tar_shq	C:\exVim\vim74\autoload\tar.vim	/^   let g:tar_shq= "'"$/;"	v
g:tar_shq	C:\exVim\vim74\autoload\tar.vim	/^   let g:tar_shq= '"'$/;"	v
g:tar_shq	C:\exVim\vim74\autoload\tar.vim	/^  let g:tar_shq= "'"$/;"	v
g:tar_shq	C:\exVim\vim74\autoload\tar.vim	/^  let g:tar_shq= &shq$/;"	v
g:tar_writeoptions	C:\exVim\vim74\autoload\tar.vim	/^ let g:tar_writeoptions= "uf"$/;"	v
g:tex_comment_nospell	C:\exVim\vim74\syntax\tex.vim	/^ let g:tex_comment_nospell= 1$/;"	v
g:tex_fold_enabled	C:\exVim\vim74\syntax\tex.vim	/^ let g:tex_fold_enabled= 0$/;"	v
g:tex_indent_and	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_indent_and = 1$/;"	v
g:tex_indent_brace	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_indent_paretheses	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_indent_paretheses = 1$/;"	v
g:tex_itemize_env	C:\exVim\vim74\indent\tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	C:\exVim\vim74\indent\tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item' $/;"	v
g:tex_items	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	C:\exVim\vim74\indent\tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
g:tex_noindent_env	C:\exVim\vim74\indent\tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:tex_subscripts	C:\exVim\vim74\syntax\tex.vim	/^ let g:tex_subscripts= "[0-9aehijklmnoprstuvx,+-\/().]"$/;"	v
g:tex_superscripts	C:\exVim\vim74\syntax\tex.vim	/^ let g:tex_superscripts= "[0-9a-zA-W.,:;+-<>\/()=]"$/;"	v
g:tohtml#charset_to_encoding	C:\exVim\vim74\autoload\tohtml.vim	/^let g:tohtml#charset_to_encoding = {$/;"	v
g:tohtml#encoding_to_charset	C:\exVim\vim74\autoload\tohtml.vim	/^let g:tohtml#encoding_to_charset = {$/;"	v
g:undotree_DiffAutoOpen	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffCommand	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_DiffCommand = "diff"$/;"	v
g:undotree_DiffpanelHeight	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_DiffpanelHeight = 10$/;"	v
g:undotree_HighlightChangedText	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_HighlightChangedText = 1$/;"	v
g:undotree_HighlightSyntaxAdd	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_HighlightSyntaxAdd = "DiffAdd"$/;"	v
g:undotree_HighlightSyntaxChange	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_HighlightSyntaxChange = "DiffChange"$/;"	v
g:undotree_RelativeTimestamp	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_RelativeTimestamp = 1$/;"	v
g:undotree_SetFocusWhenToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_SetFocusWhenToggle = 0$/;"	v
g:undotree_SplitWidth	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_SplitWidth = 30$/;"	v
g:undotree_TreeNodeShape	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_TreeNodeShape = '*'$/;"	v
g:undotree_WindowLayout	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let g:undotree_WindowLayout = 1$/;"	v
g:user_emmet_leader_key	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:vhdl_indent_genportmap	C:\exVim\vim74\indent\vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	C:\exVim\vim74\indent\vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vimball_mkdir	C:\exVim\vim74\autoload\vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	C:\exVim\vim74\autoload\vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	C:\exVim\vim74\autoload\vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimsyn_embed	C:\exVim\vim74\syntax\vim.vim	/^ let g:vimsyn_embed= "lmpPr"$/;"	v
g:vimsyn_maxlines	C:\exVim\vim74\syntax\vim.vim	/^ let g:vimsyn_maxlines= g:vim_maxlines$/;"	v
g:vimsyn_minlines	C:\exVim\vim74\syntax\vim.vim	/^ let g:vimsyn_minlines= g:vim_minlines$/;"	v
g:vimsyn_noerror	C:\exVim\vim74\syntax\vim.vim	/^ let g:vimsyn_noerror= g:vimsyntax_noerror$/;"	v
g:visincr_datedivset	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^ let g:visincr_datedivset= '[-.\/_:~,+*^]\\='$/;"	v
g:visincr_leaddate	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^ let g:visincr_leaddate = '0'$/;"	v
g:vjde_auto_mark	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_auto_mark=1$/;"	v
g:vjde_autoload_taglib	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_autoload_taglib=1$/;"	v
g:vjde_cfu_downcase	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_cfu_downcase="0"$/;"	v
g:vjde_cfu_java_dot	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_cfu_java_dot = 0$/;"	v
g:vjde_cfu_java_para	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_cfu_java_para = 0$/;"	v
g:vjde_completion	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let g:vjde_completion=1 "{{{1$/;"	v
g:vjde_completion_key	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^		let g:vjde_completion_key='<c-l>'$/;"	v
g:vjde_completion_key	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^		let g:vjde_completion_key='<c-space>'$/;"	v
g:vjde_cpp_exts	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^	let g:vjde_cpp_exts='cpp;c;cxx;h;hpp;hh'$/;"	v
g:vjde_cpp_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let g:vjde_cpp_previewer.docLineFun='VjdeGetCppDocLine'$/;"	v
g:vjde_cpp_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let g:vjde_cpp_previewer.name = 'g:vjde_cpp_previewer'$/;"	v
g:vjde_cpp_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let g:vjde_cpp_previewer.onSelect='VjdeInsertWord'$/;"	v
g:vjde_cpp_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let g:vjde_cpp_previewer.previewLinesFun='GetCTAGSCompletionLines'$/;"	v
g:vjde_cpp_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let g:vjde_cpp_previewer= VjdePreviewWindow_New()$/;"	v
g:vjde_cs_cfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let g:vjde_cs_cfu={}$/;"	v
g:vjde_cs_cfu	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let g:vjde_cs_cfu={}$/;"	v
g:vjde_cs_cmd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^	let g:vjde_cs_cmd='mono.exe '.g:vjde_install_path.'\/vjde\/CSParser.exe'$/;"	v
g:vjde_cs_cmd	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^	let g:vjde_cs_cmd='mono.exe '.g:vjde_install_path.'\/vjde\/CSParser.exe'$/;"	v
g:vjde_cs_find	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^	let g:vjde_cs_find=g:vjde_install_path.'\\vjde\\TypeFinder.exe'$/;"	v
g:vjde_cs_find	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^	let g:vjde_cs_find=g:vjde_install_path.'\\vjde\\TypeFinder.exe'$/;"	v
g:vjde_cs_libs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^	let g:vjde_cs_libs=''$/;"	v
g:vjde_cs_libs	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^	let g:vjde_cs_libs=''$/;"	v
g:vjde_cs_using	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^	let g:vjde_cs_using=g:vjde_install_path.'\\vjde\\UsingFinder.exe'$/;"	v
g:vjde_cs_using	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^	let g:vjde_cs_using=g:vjde_install_path.'\\vjde\\UsingFinder.exe'$/;"	v
g:vjde_ctags_exts	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^		let g:vjde_ctags_exts=''$/;"	v
g:vjde_ctags_ruby	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^		let g:vjde_ctags_ruby = has('ruby')$/;"	v
g:vjde_doc_delay	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_doc_delay= 2000 $/;"	v
g:vjde_doc_gui_height	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_doc_gui_height= 170 $/;"	v
g:vjde_doc_gui_width	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_doc_gui_width = 350$/;"	v
g:vjde_gtk_doc_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^		let g:vjde_gtk_doc_path='\/usr\/share\/gtk-doc\/html'$/;"	v
g:vjde_gtk_doc_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^		let g:vjde_gtk_doc_path='d:\/gtk\/share\/gtk-doc\/html'$/;"	v
g:vjde_iab_key	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^	let g:vjde_iab_key='<a-.>'$/;"	v
g:vjde_iab_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let g:vjde_iab_loaded = 1$/;"	v
g:vjde_iab_old	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^	let g:vjde_iab_old=0$/;"	v
g:vjde_iab_refs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^	let g:vjde_iab_refs={}$/;"	v
g:vjde_iab_refs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^	let g:vjde_iab_refs['cpp']=[ 'c' ]$/;"	v
g:vjde_iab_refs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^	let g:vjde_iab_refs['jsp']=[ 'java', 'html' ]$/;"	v
g:vjde_install_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_install_path=expand('`cygpath -wp '.g:vjde_install_path.'`')$/;"	v
g:vjde_install_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let g:vjde_install_path=expand('<sfile>:p:h')$/;"	v
g:vjde_java_cfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^let g:vjde_java_cfu={}$/;"	v
g:vjde_java_command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^            let g:vjde_java_command='javaw'$/;"	v
g:vjde_java_command	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^    let g:vjde_java_command='java'$/;"	v
g:vjde_java_exception	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_java_exception = '\\(unreported exception \\)\\([^ \\t;]*\\);'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =':'.s:java_home. '\/jre\/lib\/rt.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =':'.s:java_home.'Classes\/classes.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =':'.s:java_home.'\/Classes\/classes.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =':'.s:java_home.'jre\/lib\/rt.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =';'.s:java_home. '\/jre\/lib\/rt.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^		    let g:vjde_java_rt =';'.s:java_home.'jre\/lib\/rt.jar'$/;"	v
g:vjde_java_rt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^let g:vjde_java_rt=';'$/;"	v
g:vjde_java_symbol	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_java_symbol= 'cannot find symbol\\nsymbol\\s*: class \\([^ \\t;\\s]*\\)\\n'$/;"	v
g:vjde_java_utils	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^let g:vjde_java_utils=1  "{{{1$/;"	v
g:vjde_javadoc_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^let g:vjde_javadoc_loaded=1$/;"	v
g:vjde_javadoc_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_javadoc_path ='.'$/;"	v
g:vjde_jsp_exts	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_jsp_exts=''$/;"	v
g:vjde_lib_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_lib_path = ''$/;"	v
g:vjde_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let g:vjde_loaded = 1$/;"	v
g:vjde_max_deeps	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^		let g:vjde_max_deeps=2$/;"	v
g:vjde_max_tags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^		let g:vjde_max_tags=100$/;"	v
g:vjde_out_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_out_path = "."$/;"	v
g:vjde_path_spt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_path_spt=';'$/;"	v
g:vjde_path_spt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let g:vjde_path_spt=':'$/;"	v
g:vjde_preview_gui	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^                let g:vjde_preview_gui=0$/;"	v
g:vjde_preview_gui	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_preview_gui = 0$/;"	v
g:vjde_preview_gui_height	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_preview_gui_height= 170 $/;"	v
g:vjde_preview_gui_width	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^	let g:vjde_preview_gui_width = 350$/;"	v
g:vjde_preview_lib	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_preview_lib = g:vjde_install_path.'\/vjde\/preview.dll'$/;"	v
g:vjde_preview_lib	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_preview_lib = g:vjde_install_path.'\/vjde\/preview4gtk.so'$/;"	v
g:vjde_preview_lib	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let g:vjde_preview_lib = ''$/;"	v
g:vjde_preview_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^let g:vjde_preview_loaded=1$/;"	v
g:vjde_readtags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^				let g:vjde_readtags=g:vjde_install_path.'\/vjde\/readtags'$/;"	v
g:vjde_readtags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^				let g:vjde_readtags=g:vjde_install_path.'\/vjde\/readtags.exe'$/;"	v
g:vjde_ruby_include	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^	let g:vjde_ruby_include=''$/;"	v
g:vjde_ruby_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let g:vjde_ruby_previewer.docLineFun=''$/;"	v
g:vjde_ruby_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let g:vjde_ruby_previewer.name = 'g:vjde_ruby_previewer'$/;"	v
g:vjde_ruby_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let g:vjde_ruby_previewer.onSelect='VjdeInsertWord'$/;"	v
g:vjde_ruby_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let g:vjde_ruby_previewer.previewLinesFun='GetRubyCompletionLines'$/;"	v
g:vjde_ruby_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let g:vjde_ruby_previewer= VjdePreviewWindow_New()$/;"	v
g:vjde_show_paras	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_show_paras = 0$/;"	v
g:vjde_show_preview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_preview.vim	/^    let g:vjde_show_preview=1$/;"	v
g:vjde_src_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_src_path=""$/;"	v
g:vjde_tab_cfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_tab_cfu=0$/;"	v
g:vjde_tag_loader	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let g:vjde_tag_loader={}$/;"	v
g:vjde_tag_loader_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let g:vjde_tag_loader_loaded=1$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri={}$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsf\/core']='jsf_c'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsf\/html']='jsf_h'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsp\/jstl\/core']='stl_c'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsp\/jstl\/fmt']='stl_fmt'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsp\/jstl\/sql']='stl_sql'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/java.sun.com\/jsp\/jstl\/xml']='stl_x'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/myfaces.apache.org\/tobago\/component']='tc'$/;"	v
g:vjde_taglib_uri	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_taglib_uri['http:\/\/myfaces.apache.org\/tobago\/extension']='tx'$/;"	v
g:vjde_template_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^let g:vjde_template_loaded = 1$/;"	v
g:vjde_test_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_test_path=""$/;"	v
g:vjde_use_project	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_use_project = 0$/;"	v
g:vjde_use_window	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:vjde_use_window=1$/;"	v
g:vjde_utils_setup	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^	let g:vjde_utils_setup=1$/;"	v
g:vjde_web_app	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_web_app=""$/;"	v
g:vjde_window_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^let g:vjde_window_loaded = 1$/;"	v
g:vjde_window_svr_cmd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^		let g:vjde_window_svr_cmd='!start gvim --servername VJDEWINDOW '$/;"	v
g:vjde_window_svr_cmd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_window.vim	/^		let g:vjde_window_svr_cmd=''$/;"	v
g:vjde_xml_advance	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^    let g:vjde_xml_advance=0$/;"	v
g:wspawn_available	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^	let g:wspawn_available = executable('wspawn.exe')$/;"	v
g:wspawn_available	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let g:wspawn_available=1$/;"	v
g:xmldata_html32	C:\exVim\vim74\autoload\xml\html32.vim	/^let g:xmldata_html32 = {$/;"	v
g:xmldata_html401s	C:\exVim\vim74\autoload\xml\html401s.vim	/^let g:xmldata_html401s = {$/;"	v
g:xmldata_html401t	C:\exVim\vim74\autoload\xml\html401f.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html401t	C:\exVim\vim74\autoload\xml\html401t.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html40s	C:\exVim\vim74\autoload\xml\html40s.vim	/^let g:xmldata_html40s = {$/;"	v
g:xmldata_html40t	C:\exVim\vim74\autoload\xml\html40f.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html40t	C:\exVim\vim74\autoload\xml\html40t.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_jsf_c	C:\exVim\vimfiles\bundle\vjde\autoload\xml\jsf_c.vim	/^let g:xmldata_jsf_c= {$/;"	v
g:xmldata_jsf_h	C:\exVim\vimfiles\bundle\vjde\autoload\xml\jsf_h.vim	/^let g:xmldata_jsf_h= {$/;"	v
g:xmldata_stl_c	C:\exVim\vimfiles\bundle\vjde\autoload\xml\stl_c.vim	/^let g:xmldata_stl_c= {$/;"	v
g:xmldata_stl_fmt	C:\exVim\vimfiles\bundle\vjde\autoload\xml\stl_fmt.vim	/^let g:xmldata_stl_fmt= {$/;"	v
g:xmldata_stl_sql	C:\exVim\vimfiles\bundle\vjde\autoload\xml\stl_sql.vim	/^let g:xmldata_stl_sql= {$/;"	v
g:xmldata_stl_x	C:\exVim\vimfiles\bundle\vjde\autoload\xml\stl_x.vim	/^let g:xmldata_stl_x= {$/;"	v
g:xmldata_tc	C:\exVim\vimfiles\bundle\vjde\autoload\xml\tc.vim	/^let g:xmldata_tc= {$/;"	v
g:xmldata_tx	C:\exVim\vimfiles\bundle\vjde\autoload\xml\tx.vim	/^let g:xmldata_tx= {$/;"	v
g:xmldata_xhtml10f	C:\exVim\vim74\autoload\xml\xhtml10f.vim	/^let g:xmldata_xhtml10f = {$/;"	v
g:xmldata_xhtml10s	C:\exVim\vim74\autoload\xml\xhtml10s.vim	/^let g:xmldata_xhtml10s = {$/;"	v
g:xmldata_xhtml10t	C:\exVim\vim74\autoload\xml\xhtml10t.vim	/^let g:xmldata_xhtml10t = {$/;"	v
g:xmldata_xhtml11	C:\exVim\vim74\autoload\xml\xhtml11.vim	/^let g:xmldata_xhtml11 = {$/;"	v
g:xmldata_xsd	C:\exVim\vim74\autoload\xml\xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xmldata_xsl	C:\exVim\vim74\autoload\xml\xsl.vim	/^let g:xmldata_xsl = {$/;"	v
g:zipPlugin_ext	C:\exVim\vim74\plugin\zipPlugin.vim	/^ let g:zipPlugin_ext= '*.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,*.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,*.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.xlam,*.xlsx,*.xlsm,*.xlsb,*.xltx,*.xltm,*.xlam,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx'$/;"	v
g:zip_shq	C:\exVim\vim74\autoload\zip.vim	/^  let g:zip_shq= "'"$/;"	v
g:zip_shq	C:\exVim\vim74\autoload\zip.vim	/^  let g:zip_shq= &shq$/;"	v
g:zip_shq	C:\exVim\vim74\autoload\zip.vim	/^  let g:zip_shq= '"'$/;"	v
g:zip_unzipcmd	C:\exVim\vim74\autoload\zip.vim	/^ let g:zip_unzipcmd= "unzip"$/;"	v
g:zip_zipcmd	C:\exVim\vim74\autoload\zip.vim	/^ let g:zip_zipcmd= "zip"$/;"	v
g<C-]>	C:\exVim\vim74\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	C:\exVim\vim74\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<C-]>	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g<LeftMouse>	<C-RightMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 g<LeftMouse>	<C-RightMouse>$/;"	m
g<RightMouse>	<C-LeftMouse>	C:\exVim\vim74\macros\swapmous.vim	/^noremap	 g<RightMouse>	<C-LeftMouse>$/;"	m
g]	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g_dict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *g_dict;		\/* subgraphs - descendants *\/$/;"	m	struct:Agraph_s	access:public
gather_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^    def gather_candidates(self, context):$/;"	m	class:Source	access:public
gather_poses	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
gather_visible_matched_poses	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
gd2format	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gd2format"><H3>About the .gd2 image file format<\/H3><\/A>$/;"	a
gdAntiAliased	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdAntiAliased">gdAntiAliased<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdBrushed	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdBrushed">gdBrushed<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdDashSize	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdDashSize">gdDashSize<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdFTStringExtra	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFTStringExtra">gdFTStringExtra<\/a> <strong>(TYPE)<\/strong>$/;"	a
gdFTStringExtraPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFTStringExtraPtr">gdFTStringExtraPtr<\/a> <strong>(TYPE)<\/strong>$/;"	a
gdFTUseFontConfig	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFTUseFontConfig">int gdFTUseFontConfig(int flag)<\/a>$/;"	a
gdFont	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFont">gdFont<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdFontCacheSetup	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontCacheSetup">$/;"	a
gdFontCacheShutdown	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontCacheShutdown">$/;"	a
gdFontGetGiant	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontGetGiant">$/;"	a
gdFontGetLarge	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontGetLarge">$/;"	a
gdFontGetMediumBold	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontGetMediumBold">$/;"	a
gdFontGetSmall	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontGetSmall">$/;"	a
gdFontGetTiny	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontGetTiny">$/;"	a
gdFontPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFontPtr">gdFontPtr<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdFree	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdFree">gdFree(void *ptr)<\/A> <strong>(FUNCTION)<\/strong>$/;"	a
gdImage	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImage"><code>gdImage<\/code><strong>(TYPE)<\/strong><\/A>$/;"	a
gdImageAlphaBlending	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageAlphaBlending">void gdImageAlphaBlending(gdImagePtr im, int blending)<\/A>$/;"	a
gdImageArc	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageArc">void gdImageArc(gdImagePtr im, int cx, int cy, int w, int h, int s, int e, int color)<\/A>$/;"	a
gdImageBlue	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageBlue">$/;"	a
gdImageBoundsSafe	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageBoundsSafe">$/;"	a
gdImageChar	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageChar">$/;"	a
gdImageCharUp	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCharUp">$/;"	a
gdImageColorAllocate	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorAllocate">$/;"	a
gdImageColorAllocateAlpha	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorAllocateAlpha">$/;"	a
gdImageColorClosest	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorClosest">$/;"	a
gdImageColorClosestAlpha	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorClosestAlpha">$/;"	a
gdImageColorClosestHWB	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorClosestHWB">$/;"	a
gdImageColorDeallocate	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorDeallocate">$/;"	a
gdImageColorExact	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorExact">$/;"	a
gdImageColorResolve	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorResolve">$/;"	a
gdImageColorResolveAlpha	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorResolveAlpha">$/;"	a
gdImageColorTransparent	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorTransparent">$/;"	a
gdImageColorsTotal	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageColorsTotal">$/;"	a
gdImageCompare	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCompare">int gdImageCompare(gdImagePtr im1, gdImagePtr im2)$/;"	a
gdImageCopy	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopy">void gdImageCopy(gdImagePtr dst, gdImagePtr src, int dstX, int dstY, int srcX, int srcY, int w, int h)$/;"	a
gdImageCopyMerge	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopyMerge">void gdImageCopyMerge(gdImagePtr dst, gdImagePtr src, int dstX, int dstY, int srcX, int srcY, int w, int h, int pct)$/;"	a
gdImageCopyMergeGray	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopyMergeGray">void gdImageCopyMergeGray(gdImagePtr dst, gdImagePtr src, int dstX, int dstY, int srcX, int srcY, int$/;"	a
gdImageCopyResampled	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopyResampled">void gdImageCopyResampled(gdImagePtr dst, gdImagePtr src, int dstX, int dstY, int srcX, int srcY, int destW, int destH, int srcW, int srcH)$/;"	a
gdImageCopyResized	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopyResized">void gdImageCopyResized(gdImagePtr dst, gdImagePtr src, int dstX, int dstY, int srcX, int srcY, int destW, int destH, int srcW, int srcH)$/;"	a
gdImageCopyRotated	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCopyRotated">void gdImageCopyRotated(gdImagePtr dst, gdImagePtr src, double dstX, double dstY, int srcX, int srcY, int srcW, int srcH, int angle)$/;"	a
gdImageCreate	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreate">gdImageCreate(sx, sy)<\/A>$/;"	a
gdImageCreateFromGd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromGd">gdImageCreateFromGd(FILE *in)<\/A>$/;"	a
gdImageCreateFromGd2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromGd2">gdImageCreateFromGd2(FILE *in)<\/A>$/;"	a
gdImageCreateFromGd2Ctx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromGd2Ctx">gdImageCreateFromGd2Ctx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromGd2Part	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromGd2Part">gdImageCreateFromGd2Part(FILE *in, int srcX, int srcY, int w, int h)<\/A>$/;"	a
gdImageCreateFromGd2PartCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromGd2PartCtx">gdImageCreateFromGd2PartCtx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromGd2PartPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<br><A NAME="gdImageCreateFromGd2PartPtr">gdImageCreateFromGd2PartPtr(int size, void *data, int srcX, int srcY, int w, int h)<\/A>$/;"	a
gdImageCreateFromGd2Ptr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<br><A NAME="gdImageCreateFromGd2Ptr">gdImageCreateFromGd2Ptr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromGdCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromGdCtx">gdImageCreateFromGdCtx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromGdPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<br><DT><A NAME="gdImageCreateFromGdPtr">gdImageCreateFromGdPtr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromGif	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromGif">gdImageCreateFromGif(FILE *in)<\/A>$/;"	a
gdImageCreateFromGifCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromGifCtx">gdImageCreateFromGifCtx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromGifPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromGifPtr">gdImageCreateFromGifPtr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromJpeg	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromJpeg">gdImageCreateFromJpeg(FILE *in)<\/A>$/;"	a
gdImageCreateFromJpegCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageCreateFromJpegCtx">gdImageCreateFromJpegCtx(gdIOCtx *in)<\/A>$/;"	a
gdImageCreateFromJpegPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageCreateFromJpegPtr">gdImageCreateFromJpegPtr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromPng	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromPng">gdImageCreateFromPng(FILE *in)<\/A>$/;"	a
gdImageCreateFromPngCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromPngCtx">gdImageCreateFromPngCtx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromPngPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromPngPtr">gdImageCreateFromPngPtr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromPngSource	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromPngSource">gdImageCreateFromPngSource(gdSourcePtr in)<\/A>$/;"	a
gdImageCreateFromWBMP	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromWBMP">gdImageCreateFromWBMP(FILE *in)<\/A>$/;"	a
gdImageCreateFromWBMPCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromWBMPCtx">gdImageCreateFromWBMPCtx(<a href=#gdioctx>gdIOCtx<\/a> *in)<\/A>$/;"	a
gdImageCreateFromWBMPPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageCreateFromWBMPPtr">gdImageCreateFromWBMPPtr(int size, void *data)<\/A>$/;"	a
gdImageCreateFromXbm	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromXbm">gdImageCreateFromXbm(FILE *in)<\/A>$/;"	a
gdImageCreateFromXpm	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateFromXpm">gdImageCreateFromXpm(char *filename)<\/A>$/;"	a
gdImageCreatePaletteFromTrueColor	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageCreatePaletteFromTrueColor">$/;"	a
gdImageCreateTrueColor	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageCreateTrueColor">gdImageCreateTrueColor(sx, sy)<\/A>$/;"	a
gdImageDashedLine	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageDashedLine">gdImageDashedLine<\/A>. New$/;"	a
gdImageDashedLine	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageDashedLine">void gdImageDashedLine(gdImagePtr im, int x1, int y1, int x2, int y2, int color)<\/A>$/;"	a
gdImageDestroy	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageDestroy">gdImageDestroy(gdImagePtr im)<\/A> <STRONG>(FUNCTION)<\/STRONG>$/;"	a
gdImageFill	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFill">void gdImageFill(gdImagePtr im, int x, int y, int color)$/;"	a
gdImageFillToBorder	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFillToBorder">void gdImageFillToBorder(gdImagePtr im, int x, int y, int border, int color)$/;"	a
gdImageFilledArc	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFilledArc">void gdImageFilledArc(gdImagePtr im, int cx, int cy, int w, int h, int s, int e, int color, int style)<\/A>$/;"	a
gdImageFilledEllipse	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFilledEllipse">void gdImageFilledEllipse(gdImagePtr im, int cx, int cy, int w, int h, int color)<\/A>$/;"	a
gdImageFilledPolygon	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFilledPolygon">void gdImageFilledPolygon(gdImagePtr im, gdPointPtr points, int pointsTotal, int color)<\/A>$/;"	a
gdImageFilledRectangle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageFilledRectangle">void gdImageFilledRectangle(gdImagePtr im, int x1, int y1, int x2, int y2, int color)<\/A>$/;"	a
gdImageGd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGd">$/;"	a
gdImageGd2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGd2">$/;"	a
gdImageGd2Ctx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageGd2Ctx">$/;"	a
gdImageGd2Ptr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGd2Ptr">$/;"	a
gdImageGdPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGdPtr">$/;"	a
gdImageGetClip	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGetClip">$/;"	a
gdImageGetInterlaced	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGetInterlaced">$/;"	a
gdImageGetPixel	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGetPixel">int gdImageGetPixel(gdImagePtr im, int x, int y)<\/A>$/;"	a
gdImageGetTransparent	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGetTransparent">$/;"	a
gdImageGif	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGif">$/;"	a
gdImageGifAnimAdd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimAdd">$/;"	a
gdImageGifAnimAddCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageGifAnimAddCtx">$/;"	a
gdImageGifAnimAddPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimAddPtr">$/;"	a
gdImageGifAnimBegin	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimBegin">$/;"	a
gdImageGifAnimBeginCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageGifAnimBeginCtx">$/;"	a
gdImageGifAnimBeginPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimBeginPtr">$/;"	a
gdImageGifAnimEnd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimEnd">$/;"	a
gdImageGifAnimEndCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageGifAnimEndCtx">$/;"	a
gdImageGifAnimEndPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifAnimEndPtr">$/;"	a
gdImageGifCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageGifCtx">$/;"	a
gdImageGifPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGifPtr">$/;"	a
gdImageGreen	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageGreen">$/;"	a
gdImageInterlace	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageInterlace">gdImageInterlace(gdImagePtr im, int interlace)<\/A> <strong>(FUNCTION)<\/strong>$/;"	a
gdImageJpeg	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageJpeg">$/;"	a
gdImageJpegCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<a name="gdImageJpegCtx">void gdImageJpegCtx(gdImagePtr im, gdIOCtx *out, int quality)<\/A>$/;"	a
gdImageJpegPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageJpegPtr">$/;"	a
gdImageLine	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImageLine">gdImageLine<\/A> function$/;"	a
gdImageLine	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageLine">void gdImageLine(gdImagePtr im, int x1, int y1, int x2, int y2, int color)<\/A>$/;"	a
gdImageOpenPolygon	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageOpenPolygon">void gdImageOpenPolygon(gdImagePtr im, gdPointPtr points, int pointsTotal, int color)<\/A>$/;"	a
gdImagePaletteCopy	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePaletteCopy">void gdImagePaletteCopy(gdImagePtr dst, gdImagePtr src)$/;"	a
gdImagePng	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePng">$/;"	a
gdImagePngCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImagePngCtx">$/;"	a
gdImagePngCtxEx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdImagePngCtxEx">$/;"	a
gdImagePngEx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePngEx">$/;"	a
gdImagePngPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePngPtr">$/;"	a
gdImagePngPtrEx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePngPtrEx">$/;"	a
gdImagePngToSink	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePngToSink">gdImagePngToSink(gdImagePtr im, gdSinkPtr out)<\/A>$/;"	a
gdImagePolygon	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePolygon">void gdImagePolygon(gdImagePtr im, gdPointPtr points, int pointsTotal, int color)<\/A>$/;"	a
gdImagePtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImagePtr">gdImagePtr<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdImageRectangle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageRectangle">void gdImageRectangle(gdImagePtr im, int x1, int y1, int x2, int y2, int color)<\/A>$/;"	a
gdImageRed	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageRed">$/;"	a
gdImageSX	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSX">$/;"	a
gdImageSY	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSY">$/;"	a
gdImageSaveAlpha	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSaveAlpha">$/;"	a
gdImageSetAntiAliased	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetAntiAliased">void gdImageSetAntiAliased(gdImagePtr im, int c)<\/A>$/;"	a
gdImageSetAntiAliasedDontBlend	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetAntiAliasedDontBlend">void gdImageSetAntiAliasedDontBlend(gdImagePtr im, int c)<\/A>$/;"	a
gdImageSetBrush	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetBrush">void gdImageSetBrush(gdImagePtr im, gdImagePtr brush)<\/A>$/;"	a
gdImageSetClip	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetClip">$/;"	a
gdImageSetPixel	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetPixel">void gdImageSetPixel(gdImagePtr im, int x, int y, int color)<\/A> <STRONG>(FUNCTION)<\/STRONG>$/;"	a
gdImageSetStyle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetStyle">void gdImageSetStyle(gdImagePtr im, int *style, int styleLength)<\/A>$/;"	a
gdImageSetStyle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^programs should use <A NAME="gdImageSetStyle">$/;"	a
gdImageSetThickness	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetThickness">void gdImageSetThickness(gdImagePtr im, int thickness)<\/A> <STRONG>(FUNCTION)<\/STRONG>$/;"	a
gdImageSetTile	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSetTile">void gdImageSetTile(gdImagePtr im, gdImagePtr tile)<\/A>$/;"	a
gdImageSharpen	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSharpen">void gdImageSharpen(gdImagePtr im, int pct)<\/a>$/;"	a
gdImageSquareToCircle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageSquareToCircle">void gdImageSquareToCircle(gdImagePtr im, int radius)<\/a>$/;"	a
gdImageString	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageString">$/;"	a
gdImageString16	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageString16">$/;"	a
gdImageStringFT	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringFT">$/;"	a
gdImageStringFTCircle	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringFTCircle">$/;"	a
gdImageStringFTEx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringFTEx">$/;"	a
gdImageStringTTF	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringTTF">$/;"	a
gdImageStringUp	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringUp">$/;"	a
gdImageStringUp16	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageStringUp16">$/;"	a
gdImageTrueColor	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageTrueColor">$/;"	a
gdImageTrueColorToPalette	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageTrueColorToPalette">$/;"	a
gdImageWBMP	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageWBMP">$/;"	a
gdImageWBMPCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<BR><A NAME="gdImageWBMPCtx">gdImageWBMPCtx(<a href=#gdioctx>gdIOCtx<\/a> *out)<\/A>$/;"	a
gdImageWBMPPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdImageWBMPPtr">$/;"	a
gdIoCtx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdIoCtx">gdIOCtx<\/a> <strong>(TYPE)<\/strong>$/;"	a
gdMaxColors	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdMaxColors"><code>gdMaxColors<\/code><strong>(CONSTANT)<\/strong>$/;"	a
gdPoint	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdPoint">gdPoint<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdPointPtr	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdPointPtr">gdPointPtr<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdSink	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdSink">gdSink<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdSource	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdSource">gdSource<\/A> <strong>(TYPE)<\/strong>$/;"	a
gdStyled	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdStyled">gdStyled<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdStyled	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^with the special "color" <A NAME="gdStyled">$/;"	a
gdStyledBrushed	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdStyledBrushed">gdStyledBrushed<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdStyledBrushed	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^gdStyled<\/A> or <A NAME="gdStyledBrushed">gdStyledBrushed<\/A>.$/;"	a
gdTiled	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdTiled">gdTiled<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdTransparent	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdTransparent">gdTransparent<\/A> <strong>(CONSTANT)<\/strong>$/;"	a
gdTrueColorAlpha	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<DT><A NAME="gdTrueColorAlpha">$/;"	a
gdb_minlines	C:\exVim\vim74\syntax\gdb.vim	/^  let gdb_minlines = 10$/;"	v
gdformat	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdformat"><H3>About the additional .gd image file format<\/H3><\/A>$/;"	a
gdioctx	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdioctx"><H3>About the gdIOCtx structure<\/H3><\/A>$/;"	a
gdother	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="gdother"><H3>What if I want to use another programming$/;"	a
gdzie	C:\exVim\vim74\tutor\tutor.pl	/^  gdzie:$/;"	l
gecos_name	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:gecos_name(login)$/;"	f
genModule	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static Boolean genModule(Module m) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Module m)
genType	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^        private static void genType(Type t ) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Type t )
generateIndex	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def Vjde.generateIndex(fileName,len=1)$/;"	F	class:Vjde
generate_suffix_groups	C:\exVim\vim74\syntax\hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
get	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules.vim	/^function! s:get(name)$/;"	f
get	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:get(name, ...)$/;"	f
getArgs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        def Vjde.getArgs(name,level,imps) #{{{2$/;"	F	class:Vjde
getAsList	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public List getAsList(Object key) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key)
getAuthor	C:\exVim\vim74\ftplugin\debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
getClass	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        def Vjde.getClass(jar,path,name,level=0,imps=[]) #{{{2$/;"	F	class:Vjde
getClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static Class getClass(DynamicClassLoader dcl,String path,String name,String[] imports) {$/;"	m	class:Completion	file:	access:private	signature:(DynamicClassLoader dcl,String path,String name,String[] imports)
getClass4Name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getClass4Name(String name) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String name)
getClass4imps	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^	def Vjde.getClass4imps(jar,path,name,impstr,level1) #{{{2$/;"	F	class:Vjde
getClassDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public String getClassDoc(String className) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void getClassInfo(String className,$/;"	m	class:ClassInfo	access:public	signature:(String className, String[]imports,String path)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void getClassInfo(String className,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className,String path)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className) {$/;"	m	class:Completion	access:public	signature:(String path,String className)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className, int level) {$/;"	m	class:Completion	access:public	signature:(String path,String className, int level)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports,int level)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports)
getClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports,int level) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports,int level)
getClassNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    List getClassNames(String unqualifiedName)$/;"	m	class:ClassPathEntry	access:default	signature:(String unqualifiedName)
getClassNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getClassNames(String pkg_path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String pkg_path)
getCtags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^		def Vjde.getCtags(tagsVar,cmd='')$/;"	F	class:Vjde
getField	C:\exVim\vim74\ftplugin\debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
getInheritedInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^ private static void getInheritedInnerClasses(Class c, StringBuffer sb)  {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static void getInnerClasses(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getMemberDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public String getMemberDoc(String className,String member) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member)
getMemberInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static void getMemberInfo(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getMemberTipDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^    public String getMemberTipDoc(String className,String member,int paramPos) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member,int paramPos)
getPack	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int getPack(Agraph_t *, int not_def, int dflt);$/;"	p	signature:(Agraph_t *, int not_def, int dflt)
getPackInfo	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern pack_mode getPackInfo(Agraph_t * g, pack_mode dflt, int dfltMargin, pack_info*);$/;"	p	signature:(Agraph_t * g, pack_mode dflt, int dfltMargin, pack_info*)
getPackMode	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern pack_mode getPackMode(Agraph_t * g, pack_mode dflt);$/;"	p	signature:(Agraph_t * g, pack_mode dflt)
getPackModeInfo	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern pack_mode getPackModeInfo(Agraph_t * g, pack_mode dflt, pack_info*);$/;"	p	signature:(Agraph_t * g, pack_mode dflt, pack_info*)
getPackageNames	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public String[] getPackageNames() {$/;"	m	class:DynamicClassLoader	access:public	signature:()
getPromptMessage	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
getTagFiles	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def Vjde.getTagFiles(tagsVar)$/;"	F	class:Vjde
getTagFromCtag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def CtagsTag.getTagFromCtag(ctag_line, knownTags)$/;"	F	class:Vjde.CtagsTag
getTags	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String getTags(String old) {$/;"	m	class:Document	file:	access:private	signature:(String old)
getTemplate	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def getTemplate(index_name)$/;"	f	class:Vjde.VjdeTemplateManager
getUniqueID	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:getUniqueID()$/;"	f
get_256color	C:\exVim\vim74\syntax\dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f
get_action_url	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def get_action_url(fp,websrc,str)$/;"	f	class:Vjde.Struts2ConfigLoader
get_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_children_recursively	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function s:get_children_recursively(parsed_pattern, inherits_list, file_list)$/;"	f
get_cmdline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
get_cmdline_cword	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
get_complete_pos	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_convert_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_case.vim	/^function! s:get_convert_candidates(candidates)$/;"	f
get_current_origin_url	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_desktop_rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_desktop_rectangle(MRectangle &rect) $/;"	f	signature:(MRectangle &rect)
get_desktop_rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_desktop_rectangle(MRectangle &rect) ;$/;"	p	file:	signature:(MRectangle &rect)
get_escaped_group_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
get_format	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def get_format(imported_module, mod_attr, use_prefix):$/;"	f	access:public
get_glob_files	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_hi_str	C:\exVim\vim74\syntax\dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f
get_hit_enter_max_length	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_inherits	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function s:get_inherits( name, method )$/;"	f
get_keyword_pos	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:get_keyword_pos(cur_text) "{{{$/;"	f
get_last_selected	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_status	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^function! s:get_last_status() abort$/;"	f
get_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! s:get_list() "{{{$/;"	f
get_list	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! s:get_list() "{{{$/;"	f
get_list	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! s:get_list() "{{{$/;"	f
get_loction_line	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^		def Vjde.get_loction_line(fun,file1) #{{{2$/;"	F	class:Vjde
get_member_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:get_member_list(context, cur_text, var_name) "{{{$/;"	f
get_member_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_next_match_result	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^function s:get_next_match_result( jump, forward )$/;"	f
get_omni_funcs	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_parent_recursively	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function s:get_parent_recursively(parsed_pattern, inherits_list, file_list)$/;"	f
get_pattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^		def get_pattern(name)$/;"	f	class:Vjde.CppDocReader
get_prelude	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prelude	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_process	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! s:get_process() "{{{$/;"	f
get_process	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! s:get_process() "{{{$/;"	f
get_python_version	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def get_python_version():$/;"	f	access:public
get_root	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_select_tag	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	string get_select_tag()$/;"	f	signature:()
get_select_val	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_select_val()$/;"	f	signature:()
get_select_val	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_select_val();$/;"	p	file:	signature:()
get_selected_text	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_short_name	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	string get_short_name(string name) $/;"	f	signature:(string name)
get_short_tag	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	string get_short_tag(string tag)$/;"	f	signature:(string tag)
get_skip	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def get_skip(tagFile,beginning) $/;"	f	class:Vjde.CtagsTagList
get_skip2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def get_skip2(tagFile,beginning,seek)$/;"	f	class:Vjde.CtagsTagList
get_snippet_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) "{{{$/;"	f
get_snippet_files	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! s:get_snippet_files(path, filetype) abort "{{{$/;"	f
get_snippets_files	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! s:get_snippets_files(path, filetype) abort "{{{$/;"	f
get_sources_filetypes	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! s:get_sources_filetypes(filetype) "{{{$/;"	f
get_sources_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:get_sources_list(context) "{{{$/;"	f
get_sources_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:get_sources_list(context) "{{{$/;"	f
get_string	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! s:get_string() "{{{$/;"	f
get_string	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! s:get_string() "{{{$/;"	f
get_submodules	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def get_submodules(module_name, submodules):$/;"	f	access:public
get_tag	C:\exVim\vim74\indent\html.vim	/^func! s:get_tag(tagname)$/;"	f
get_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def get_tag(ls) #{{{3$/;"	f	class:Vjde.SourceReader
get_type	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def CtagsTagList.get_type(line2,name) $/;"	F	class:Vjde.CtagsTagList
get_type	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^    def ReadTags.get_type(line2,name) $/;"	F	class:Vjde.ReadTags
get_vim_caret_pos	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_vim_caret_pos(int &x1,int &y1,$/;"	f	signature:(int &x1,int &y1, const int line,const int col, const int width1 , const int height1, const int width2 , const int height2)
get_vim_caret_pos	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_vim_caret_pos(int &x1,int &y1,$/;"	p	file:	signature:(int &x1,int &y1, const int line,const int col, const int width1 , const int height1, const int width2 , const int height2)
get_vim_text_area_rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect) $/;"	f	signature:(MRectangle &rect)
get_vim_text_area_rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect)$/;"	f	signature:(MRectangle &rect)
get_vim_text_area_rectangle	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect);$/;"	p	file:	signature:(MRectangle &rect)
get_window_rect	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void get_window_rect(GdkWindow* window , MRectangle &rect)$/;"	f	signature:(GdkWindow* window , MRectangle &rect)
get_yesno	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def get_yesno(msg="[Y\/n]?"):$/;"	f	access:public
getbookmarks	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getchar	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Input.vim	/^function! s:getchar(...)$/;"	f
getchar	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getenv	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
getfilename	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getfilename	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getfoldlevel	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:getfoldlevel(linenr)$/;"	f
getgd	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="getgd"><H3>How do I get gd?<\/H3><\/A>$/;"	a
gethistdata	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getname	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:getname( linenr )$/;"	f
getnewmix	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getopt	C:\exVim\graphviz\bin\getopt.h	/^    extern int getopt(int, char *const *, const char *);$/;"	p	signature:(int, char *const *, const char *)
getparent	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getpath	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:getpath( linenr )$/;"	f
getregs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:getregs()$/;"	f
gets_f	C:\exVim\graphviz\include\graphviz\graph.h	/^    typedef char *(*gets_f) (char *ubuf, int n, FILE * fp);$/;"	t
getscript#GetLatestVimScripts	C:\exVim\vim74\autoload\getscript.vim	/^fun! getscript#GetLatestVimScripts()$/;"	f
gettime	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:gettime(time)$/;"	f
getundo	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:getundo()$/;"	f
gf	C:\exVim\vim74\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
gg	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! gg$/;"	m
gg0	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! gg0$/;"	m
ghi	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-ops.coffee	/^abc.def.ghi$/;"	r
gi	C:\exVim\vimfiles\cppscript.vim	/^nmap gi :call search("#include","b")<cr>$/;"	m
gid_t	C:\exVim\graphviz\bin\config.h	478;"	d
gitdiffcached	C:\exVim\vim74\ftplugin\gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
github_url	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glbpath	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
globattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *globattr;$/;"	m	struct:Agdata_t	access:public
globdirs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
globpath	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
gm	C:\exVim\vimfiles\cppscript.vim	/^nmap gm :call search("int main")<cr>k$/;"	m
gm	C:\exVim\vimfiles\cscript.vim	/^nmap gm :call search("int main")<cr>k$/;"	m
gnat#Find	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Find () dict					     " {{{1$/;"	f
gnat#Get_Command	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Get_Command (Command) dict			     " {{{1$/;"	f
gnat#Insert_Tags_Header	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Insert_Tags_Header ()				  " {{{1$/;"	f
gnat#Make	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Make () dict					     " {{{1$/;"	f
gnat#New	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#New ()						     " {{{1$/;"	f
gnat#Pretty	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Pretty () dict					     " {{{1$/;"	f
gnat#Set_Project_File	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Set_Project_File (...) dict			     " {{{1$/;"	f
gnat#Set_Session	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Set_Session (...) dict				     " {{{1$/;"	f
gnat#Tags	C:\exVim\vim74\autoload\gnat.vim	/^function gnat#Tags () dict					     " {{{1$/;"	f
got_x_error	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static int	got_x_error = FALSE;$/;"	v	file:
gotoFirstLogicalTag	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void gotoFirstLogicalTag (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
grad_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_color grad_color;   \/* xd_grad_fill_color, xd_grad_pen_color *\/$/;"	m	union:_xdot_op::__anon61	access:public
gradient_angle	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int gradient_angle;$/;"	m	struct:obj_state_s	access:public
gradient_frac	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	float gradient_frac;$/;"	m	struct:obj_state_s	access:public
graph	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
graph	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraph_t *graph;$/;"	m	struct:Agnode_t	access:public
graph_index	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int graph_index;$/;"	m	struct:GVJ_s	access:public
graph_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agraph_s graph_t;$/;"	t	typeref:struct:Agraph_s
grey_colour	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_level	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_number	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_number(x)$/;"	f
groovy_minlines	C:\exVim\vim74\syntax\groovy.vim	/^  let groovy_minlines = 10$/;"	v
group_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:group_list()$/;"	f
growFields	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult growFields (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
growString	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int growString (vstring *s)$/;"	f	file:	signature:(vstring *s)
gsub	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gtk_fun_path	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^		def gtk_fun_path(fun) #{{{3$/;"	f	class:Vjde.CppDocReader
gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Edge state for GUI ops *\/$/;"	m	struct:Agedgeinfo_t	access:public
gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Graph state for GUI ops *\/$/;"	m	struct:Agraphinfo_t	access:public
gui_state	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char gui_state; \/* Node state for GUI ops *\/$/;"	m	struct:Agnodeinfo_t	access:public
gvAddLibrary	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern void gvAddLibrary(GVC_t *gvc, gvplugin_library_t *lib);$/;"	p	signature:(GVC_t *gvc, gvplugin_library_t *lib)
gvContext	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern GVC_t *gvContext(void);$/;"	p	signature:(void)
gvContextPlugins	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern GVC_t *gvContextPlugins(const lt_symlist_t *builtins, int demand_loading);$/;"	p	signature:(const lt_symlist_t *builtins, int demand_loading)
gvFinalize	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern void gvFinalize(GVC_t *gvc);$/;"	p	signature:(GVC_t *gvc)
gvFreeContext	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvFreeContext(GVC_t *gvc);$/;"	p	signature:(GVC_t *gvc)
gvFreeLayout	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvFreeLayout(GVC_t *gvc, graph_t *g);$/;"	p	signature:(GVC_t *gvc, graph_t *g)
gvFreeRenderData	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern void gvFreeRenderData (char* data);$/;"	p	signature:(char* data)
gvLayout	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvLayout(GVC_t *gvc, graph_t *g, const char *engine);$/;"	p	signature:(GVC_t *gvc, graph_t *g, const char *engine)
gvLayoutJobs	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvLayoutJobs(GVC_t *gvc, graph_t *g);$/;"	p	signature:(GVC_t *gvc, graph_t *g)
gvNEWcontext	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern GVC_t *gvNEWcontext(const lt_symlist_t *builtins, int demand_loading);$/;"	p	signature:(const lt_symlist_t *builtins, int demand_loading)
gvNextInputGraph	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern graph_t *gvNextInputGraph(GVC_t *gvc);$/;"	p	signature:(GVC_t *gvc)
gvParseArgs	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvParseArgs(GVC_t *gvc, int argc, char **argv);$/;"	p	signature:(GVC_t *gvc, int argc, char **argv)
gvPluginList	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern char** gvPluginList (GVC_t *gvc, char* kind, int* sz, char*);$/;"	p	signature:(GVC_t *gvc, char* kind, int* sz, char*)
gvPluginsGraph	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern graph_t *gvPluginsGraph(GVC_t *gvc);$/;"	p	signature:(GVC_t *gvc)
gvRender	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvRender(GVC_t *gvc, graph_t *g, const char *format, FILE *out);$/;"	p	signature:(GVC_t *gvc, graph_t *g, const char *format, FILE *out)
gvRenderContext	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvRenderContext(GVC_t *gvc, graph_t *g, const char *format, void *context);$/;"	p	signature:(GVC_t *gvc, graph_t *g, const char *format, void *context)
gvRenderData	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvRenderData(GVC_t *gvc, graph_t *g, const char *format, char **result, unsigned int *length);$/;"	p	signature:(GVC_t *gvc, graph_t *g, const char *format, char **result, unsigned int *length)
gvRenderFilename	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvRenderFilename(GVC_t *gvc, graph_t *g, const char *format, const char *filename);$/;"	p	signature:(GVC_t *gvc, graph_t *g, const char *format, const char *filename)
gvRenderJobs	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern int gvRenderJobs(GVC_t *gvc, graph_t *g);$/;"	p	signature:(GVC_t *gvc, graph_t *g)
gvToggle	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern void gvToggle(int);$/;"	p	signature:(int)
gv_argvlist_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gv_argvlist_s {$/;"	s
gv_argvlist_s::alloc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int alloc;$/;"	m	struct:gv_argvlist_s	access:public
gv_argvlist_s::argc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int argc;$/;"	m	struct:gv_argvlist_s	access:public
gv_argvlist_s::argv	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **argv;$/;"	m	struct:gv_argvlist_s	access:public
gv_argvlist_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gv_argvlist_t;$/;"	t	typeref:struct:gv_argvlist_s
gvattr_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { GVATTR_STRING, GVATTR_BOOL, GVATTR_COLOR } gvattr_t;$/;"	t	typeref:enum:__anon19
gvc	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVC_t *gvc;		\/* parent gvc *\/$/;"	m	struct:GVJ_s	access:public
gvc	C:\exVim\graphviz\include\graphviz\types.h	/^	GVC_t *gvc;	\/* context for "globals" over multiple graphs *\/$/;"	m	struct:Agraphinfo_t	access:public
gvcBuildDate	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern char *gvcBuildDate(GVC_t*);$/;"	p	signature:(GVC_t*)
gvcInfo	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern char **gvcInfo(GVC_t*);$/;"	p	signature:(GVC_t*)
gvcVersion	C:\exVim\graphviz\include\graphviz\gvc.h	/^extern char *gvcVersion(GVC_t*);$/;"	p	signature:(GVC_t*)
gvcolor_t	C:\exVim\graphviz\include\graphviz\color.h	/^} gvcolor_t;$/;"	t	typeref:struct:color_s
gvconfig_plugin_install_from_library	C:\exVim\graphviz\include\graphviz\gvconfig.h	/^extern void gvconfig_plugin_install_from_library(GVC_t * gvc, char *path, gvplugin_library_t *library);$/;"	p	signature:(GVC_t * gvc, char *path, gvplugin_library_t *library)
gvdevice_callbacks_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvdevice_callbacks_s {$/;"	s
gvdevice_callbacks_s::button_press	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*button_press) (GVJ_t * job, int button, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::button_release	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*button_release) (GVJ_t * job, int button, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::del	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*del) (GVJ_t * job);  \/* can't use "delete" 'cos C++ stole it *\/$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::layout	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*layout) (GVJ_t * job, const char *layout);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::modify	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*modify) (GVJ_t * job, const char *name, const char *value);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::motion	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*motion) (GVJ_t * job, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::read	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*read) (GVJ_t * job, const char *filename, const char *layout);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::refresh	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void (*refresh) (GVJ_t * job);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_s::render	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*render) (GVJ_t * job, const char *format, const char *filename);$/;"	m	struct:gvdevice_callbacks_s	access:public
gvdevice_callbacks_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvdevice_callbacks_t;$/;"	t	typeref:struct:gvdevice_callbacks_s
gvdevice_engine_s	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^    struct gvdevice_engine_s {$/;"	s
gvdevice_engine_s::finalize	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*finalize) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
gvdevice_engine_s::format	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*format) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
gvdevice_engine_s::initialize	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*initialize) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
gvdevice_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvdevice_engine_s gvdevice_engine_t;$/;"	t	typeref:struct:gvdevice_engine_s
gvdevice_features_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvdevice_features_t;$/;"	t	typeref:struct:__anon21
gvevent_key_binding_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvevent_key_binding_s {$/;"	s
gvevent_key_binding_s::callback	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvevent_key_callback_t callback;$/;"	m	struct:gvevent_key_binding_s	access:public
gvevent_key_binding_s::keystring	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *keystring;$/;"	m	struct:gvevent_key_binding_s	access:public
gvevent_key_binding_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvevent_key_binding_t;$/;"	t	typeref:struct:gvevent_key_binding_s
gvevent_key_callback_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef int (*gvevent_key_callback_t) (GVJ_t * job);$/;"	t
gvformatter_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvformatter_engine_s gvformatter_engine_t;$/;"	t	typeref:struct:gvformatter_engine_s
gvlayout_engine_s	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	/^    struct gvlayout_engine_s {$/;"	s
gvlayout_engine_s::cleanup	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	/^	void (*cleanup) (graph_t * g);$/;"	m	struct:gvlayout_engine_s	access:public
gvlayout_engine_s::layout	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	/^	void (*layout) (graph_t * g);$/;"	m	struct:gvlayout_engine_s	access:public
gvlayout_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvlayout_engine_s gvlayout_engine_t;$/;"	t	typeref:struct:gvlayout_engine_s
gvlayout_features_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } gvlayout_features_t;$/;"	t	typeref:struct:__anon43
gvloadimage_engine_s	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	/^    struct gvloadimage_engine_s {$/;"	s
gvloadimage_engine_s::loadimage	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	/^	void (*loadimage) (GVJ_t *job, usershape_t *us, boxf b, boolean filled);$/;"	m	struct:gvloadimage_engine_s	access:public
gvloadimage_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvloadimage_engine_s gvloadimage_engine_t;$/;"	t	typeref:struct:gvloadimage_engine_s
gvplugin_active_device_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvplugin_active_device_s {$/;"	s
gvplugin_active_device_s::engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvdevice_engine_t *engine;$/;"	m	struct:gvplugin_active_device_s	access:public
gvplugin_active_device_s::features	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvdevice_features_t *features;$/;"	m	struct:gvplugin_active_device_s	access:public
gvplugin_active_device_s::id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int id;$/;"	m	struct:gvplugin_active_device_s	access:public
gvplugin_active_device_s::type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        const char *type;$/;"	m	struct:gvplugin_active_device_s	access:public
gvplugin_active_device_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvplugin_active_device_t;$/;"	t	typeref:struct:gvplugin_active_device_s
gvplugin_active_loadimage_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvplugin_active_loadimage_t {$/;"	s
gvplugin_active_loadimage_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvplugin_active_loadimage_t;$/;"	t	typeref:struct:gvplugin_active_loadimage_t
gvplugin_active_loadimage_t::engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvloadimage_engine_t *engine;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
gvplugin_active_loadimage_t::id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int id;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
gvplugin_active_loadimage_t::type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *type;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
gvplugin_active_render_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvplugin_active_render_s {$/;"	s
gvplugin_active_render_s::engine	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvrender_engine_t *engine;$/;"	m	struct:gvplugin_active_render_s	access:public
gvplugin_active_render_s::features	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        gvrender_features_t *features;$/;"	m	struct:gvplugin_active_render_s	access:public
gvplugin_active_render_s::id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int id;$/;"	m	struct:gvplugin_active_render_s	access:public
gvplugin_active_render_s::type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        const char *type;$/;"	m	struct:gvplugin_active_render_s	access:public
gvplugin_active_render_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvplugin_active_render_t;$/;"	t	typeref:struct:gvplugin_active_render_s
gvplugin_api_t	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^    } gvplugin_api_t;$/;"	t	typeref:struct:__anon27
gvplugin_available_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    typedef struct gvplugin_available_s gvplugin_available_t;$/;"	t	typeref:struct:gvplugin_available_s
gvplugin_installed_t	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^    } gvplugin_installed_t;$/;"	t	typeref:struct:__anon26
gvplugin_library_t	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^    } gvplugin_library_t;$/;"	t	typeref:struct:__anon28
gvpr	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    extern int gvpr (int argc, char *argv[], gvpropts* opts);$/;"	p	signature:(int argc, char *argv[], gvpropts* opts)
gvprbinding	C:\exVim\graphviz\include\graphviz\gvpr.h	/^} gvprbinding;$/;"	t	typeref:struct:__anon29
gvpropts	C:\exVim\graphviz\include\graphviz\gvpr.h	/^} gvpropts;$/;"	t	typeref:struct:__anon30
gvpruserfn	C:\exVim\graphviz\include\graphviz\gvpr.h	/^typedef int (*gvpruserfn) (char *);$/;"	t
gvprwr	C:\exVim\graphviz\include\graphviz\gvpr.h	/^typedef ssize_t (*gvprwr) (void*, const char *buf, size_t nbyte, void*);$/;"	t
gvrender_engine_s	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^    struct gvrender_engine_s {$/;"	s
gvrender_engine_s::begin_anchor	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_anchor) (GVJ_t * job,$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_cluster	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_cluster) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_edge	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_edge) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_edges	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_edges) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_graph	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_graph) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_job	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_job) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_label	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_label) (GVJ_t * job, label_type type);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_layer	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_layer) (GVJ_t * job, char *layername,$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_node	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_node) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_nodes	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_nodes) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::begin_page	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*begin_page) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::beziercurve	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*beziercurve) (GVJ_t * job, pointf * A, int n,$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::comment	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*comment) (GVJ_t * job, char *comment);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::ellipse	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*ellipse) (GVJ_t * job, pointf * A, int filled);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_anchor	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_anchor) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_cluster	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_cluster) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_edge	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_edge) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_edges	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_edges) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_graph	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_graph) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_job	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_job) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_label	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_label) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_layer	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_layer) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_node	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_node) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_nodes	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_nodes) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::end_page	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*end_page) (GVJ_t * job);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::library_shape	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*library_shape) (GVJ_t * job, char *name, pointf * A, int n, int filled);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::polygon	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*polygon) (GVJ_t * job, pointf * A, int n, int filled);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::polyline	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*polyline) (GVJ_t * job, pointf * A, int n);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::resolve_color	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*resolve_color) (GVJ_t * job, gvcolor_t * color);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_s::textspan	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*textspan) (GVJ_t * job, pointf p, textspan_t * span);$/;"	m	struct:gvrender_engine_s	access:public
gvrender_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvrender_engine_s gvrender_engine_t;$/;"	t	typeref:struct:gvrender_engine_s
gvrender_features_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    } gvrender_features_t;$/;"	t	typeref:struct:__anon20
gvtextlayout_engine_s	C:\exVim\graphviz\include\graphviz\gvplugin_textlayout.h	/^    struct gvtextlayout_engine_s {$/;"	s
gvtextlayout_engine_s::textlayout	C:\exVim\graphviz\include\graphviz\gvplugin_textlayout.h	/^	boolean (*textlayout) (textspan_t *span, char** fontpath);$/;"	m	struct:gvtextlayout_engine_s	access:public
gvtextlayout_engine_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct gvtextlayout_engine_s gvtextlayout_engine_t;$/;"	t	typeref:struct:gvtextlayout_engine_s
gvusershape_file_access	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	/^extern boolean gvusershape_file_access(usershape_t *us);$/;"	p	signature:(usershape_t *us)
gvusershape_file_release	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	/^extern void gvusershape_file_release(usershape_t *us);$/;"	p	signature:(usershape_t *us)
gx	C:\exVim\vim74\plugin\netrwPlugin.vim	/^  nmap <unique> gx <Plug>NetrwBrowseX$/;"	m
gzip	C:\exVim\vim74\plugin\gzip.vim	/^augroup gzip$/;"	a
gzip#appre	C:\exVim\vim74\autoload\gzip.vim	/^fun gzip#appre(cmd)$/;"	f
gzip#read	C:\exVim\vim74\autoload\gzip.vim	/^fun gzip#read(cmd)$/;"	f
gzip#write	C:\exVim\vim74\autoload\gzip.vim	/^fun gzip#write(cmd)$/;"	f
h	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t h;			\/* common data header *\/$/;"	m	struct:Agattr_s	access:public
h	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t h;			\/* installed in list of graph recs *\/$/;"	m	struct:Agdatadict_s	access:public
h	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
h	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
h	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
h	C:\exVim\vim74\macros\less.vim	/^noremap h :call <SID>Help()<CR>$/;"	m
h	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal! h$/;"	m
h:undir_note	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<A NAME=h:undir_note><STRONG>Note:<\/STRONG><\/A> Some attributes, such as$/;"	a
h:uses	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^In the <A NAME=h:uses><STRONG>Used By<\/STRONG><\/A> field, the$/;"	a
handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agedge_t	access:public
handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agnode_t	access:public
handle	C:\exVim\graphviz\include\graphviz\graph.h	/^	int handle:24;$/;"	m	struct:Agraph_t	access:public
handleAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAction(Action action,Class c)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c)
handleAction	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAction(Action action,Class c,String m)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c,String m)
handleAnnotations	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c)
handleAnnotations	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c,Method m) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c,Method m)
handleEmpty	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
handleLeftClick	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handleXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
handleXml	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
handlerClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void handlerClass(String p, String name) {$/;"	m	class:Struts2Configure	access:public	signature:(String p, String name)
has	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:has(list, value) abort$/;"	f
has	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:has(list, value) abort$/;"	f
has	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:has(list, value) abort$/;"	f
hasMember	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void hasMember(String className, String memberName,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className, String memberName,String path)
has_attrs	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned has_attrs:1;	\/* if string attr tables should be initialized *\/$/;"	m	struct:Agdesc_s	access:public
has_been_rendered	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		has_been_rendered;$/;"	m	struct:GVJ_s	access:public
has_cmpnd	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned has_cmpnd:1;	\/* if may contain collapsed nodes *\/$/;"	m	struct:Agdesc_s	access:public
has_common_items	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_doc	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_flat_edges	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_flat_edges;$/;"	m	struct:Agraphinfo_t	access:public
has_grown	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		has_grown,$/;"	m	struct:GVJ_s	access:public
has_gtk	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	_DL_EXPORT int has_gtk(char *str) $/;"	f	signature:(char *str)
has_images	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_images;$/;"	m	struct:Agraphinfo_t	access:public
has_index	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_labels	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char has_labels;$/;"	m	struct:Agraphinfo_t	access:public
has_patch	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
has_port	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean  has_port;$/;"	m	struct:Agnodeinfo_t	access:public
has_sinkrank	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_sinkrank;$/;"	m	struct:Agraphinfo_t	access:public
has_sourcerank	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean has_sourcerank;$/;"	m	struct:Agraphinfo_t	access:public
has_vimproc	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
hash	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:hash(str) abort$/;"	f
hash	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:hash(str) abort$/;"	f
hash	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def hash$/;"	f	class:Vjde.CtagsTag
hashf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dthash_f	hashf;	\/* to compute hash value of an object	*\/$/;"	m	struct:_dtdisc_s	access:public
hdc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^HDC hdc;$/;"	v
hdr	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtlink_t	hdr;	\/* header		*\/$/;"	m	struct:_dthold_s	access:public
hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agedgeinfo_t	access:public
hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agnodeinfo_t	access:public
hdr	C:\exVim\graphviz\include\graphviz\types.h	/^	Agrec_t hdr;$/;"	m	struct:Agraphinfo_t	access:public
head	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *head, *tail;$/;"	m	struct:Agedge_t	access:public
head	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
head_label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
head_port	C:\exVim\graphviz\include\graphviz\types.h	/^	port tail_port, head_port;$/;"	m	struct:Agedgeinfo_t	access:public
head_z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
headendurl_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int headendurl_map_n;           \/* head end intersection with node *\/$/;"	m	struct:obj_state_s	access:public
headendurl_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *headendurl_map_p;$/;"	m	struct:obj_state_s	access:public
headlabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headlabel; $/;"	m	struct:obj_state_s	access:public
headntail	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:headntail(str)$/;"	f
headtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headtarget; $/;"	m	struct:obj_state_s	access:public
headtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headtooltip; $/;"	m	struct:obj_state_s	access:public
headurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headurl; $/;"	m	struct:obj_state_s	access:public
heapindex	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
height	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        unsigned int height;    \/* device height - device units *\/$/;"	m	struct:GVJ_s	access:public
height	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
height	C:\exVim\graphviz\include\graphviz\types.h	/^	double width, height;  \/* inches *\/$/;"	m	struct:Agnodeinfo_t	access:public
height	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int height;$/;"	m	struct:_Rectangle	file:	access:public
help	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        cnoremap <buffer> help let g:proj_doinghelp = 1<CR>:help$/;"	m
helptags	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:helptags(rtp) abort$/;"	f
here	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtlink_t*	here;	\/* finger to last search element	*\/$/;"	m	struct:_dtdata_s	access:public
hex	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^  var hex = 0xFF;$/;"	r
hh	C:\exVim\graphviz\include\graphviz\cdt.h	/^	} hh;$/;"	m	struct:_dtdata_s	typeref:union:_dtdata_s::__anon2	access:public
highlight	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_types	C:\exVim\vim74\syntax\spup.vim	/^    let highlight_types = 1$/;"	v
highlighttest	C:\exVim\vim74\syntax\hitest.vim	/^aug highlighttest$/;"	a
hl	C:\exVim\graphviz\include\graphviz\cdt.h	/^	} hl;$/;"	m	struct:_dtlink_s	typeref:union:_dtlink_s::__anon1	access:public
hl_cancel	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:hl_cancel(match_nr)$/;"	f
hl_cword	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:hl_cword(match_nr)$/;"	f
hl_range	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:hl_range(match_nr) range$/;"	f
hl_text	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:hl_text(match_nr, args)$/;"	f
home	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let home=s:GetHome(info, '')$/;"	v
hops	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
hostname	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:hostname()$/;"	f
hs_highlight_boolean	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
hsvrgbacolor_t	C:\exVim\graphviz\include\graphviz\color.h	/^typedef struct hsvrgbacolor_t {$/;"	s
hsvrgbacolor_t	C:\exVim\graphviz\include\graphviz\color.h	/^} hsvrgbacolor_t;$/;"	t	typeref:struct:hsvrgbacolor_t
hsvrgbacolor_t::a	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::b	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::g	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::h	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::name	C:\exVim\graphviz\include\graphviz\color.h	/^    char *name;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::r	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::s	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
hsvrgbacolor_t::v	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
ht	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
ht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* below and above extremal ranks *\/$/;"	m	struct:Agraphinfo_t	access:public
ht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* height below\/above centerline    *\/$/;"	m	struct:rank_t	access:public
ht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* below and above extremal ranks *\/$/;"	m	struct:Agraphinfo_t	access:public
ht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* height below\/above centerline    *\/$/;"	m	struct:rank_t	access:public
html	C:\exVim\graphviz\include\graphviz\types.h	/^	    htmllabel_t *html;$/;"	m	union:textlabel_t::__anon38	access:public
html	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean html; \/* true if html label *\/$/;"	m	struct:textlabel_t	access:public
html	C:\exVim\graphviz\share\graphviz\doc\html\info\lang.html	/^<LI> an <A NAME=html>HTML string<\/A> (&lt;...&gt;).$/;"	a
html	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME=html>HTML-Like Labels<\/A><\/H2>$/;"	a
html_no_rendering	C:\exVim\vim74\syntax\spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	C:\exVim\vim74\autoload\htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	C:\exVim\vim74\autoload\htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	C:\exVim\vim74\autoload\htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadData	C:\exVim\vim74\autoload\htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
htmllabel_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct htmllabel_t htmllabel_t;$/;"	t	typeref:struct:htmllabel_t
http	C:\exVim\vim74\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/viedyt.htm$/;"	l
http	C:\exVim\vim74\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/vilek.htm$/;"	l
hwndText	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^HWND hwndText; \/\/ Vim ÊäÈë´°¿Ú$/;"	v
hwndText	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^HWND hwndText; \/\/ Vim ÊäÈë´°¿Ú$/;"	v
i	C:\exVim\vim74\syntax\xpm.vim	/^   let i = i + 1$/;"	v
i	C:\exVim\vim74\syntax\xpm.vim	/^let i      = 1$/;"	v
i	C:\exVim\vim74\syntax\xpm2.vim	/^    let i = i + 1$/;"	v
i	C:\exVim\vim74\syntax\xpm2.vim	/^  let i      = 1$/;"	v
iLineCount	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int iLineCount;$/;"	v
iLineCount	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int iLineCount;$/;"	v
iM	C:\exVim\vim74\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iMaxHeight	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int iMaxHeight;$/;"	v
iMaxHeight	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int iMaxHeight;$/;"	v
iMaxWidth	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int iMaxWidth;$/;"	v
iMaxWidth	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int iMaxWidth;$/;"	v
iabs	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^	def VjdeTemplateManager.iabs$/;"	F	class:Vjde.VjdeTemplateManager
icon_minlines	C:\exVim\vim74\syntax\icon.vim	/^  let icon_minlines = 15$/;"	v
iconv	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
id	C:\exVim\graphviz\bin\exparse.h	/^	struct Exid_s*	id;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exid_s	access:public
id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agiddisc_t *id;$/;"	m	struct:Agdisc_s	access:public
id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int id;			\/* its index in attr[] *\/$/;"	m	struct:Agsym_s	access:public
id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned long id;		\/* client  ID *\/$/;"	m	struct:Agtag_s	access:public
id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *id;$/;"	m	struct:Agdstate_s	access:public
id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int id;$/;"	m	struct:Agedge_t	access:public
id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int id;$/;"	m	struct:Agnode_t	access:public
id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *id;$/;"	m	struct:obj_state_s	access:public
id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int id;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int id;$/;"	m	struct:gvplugin_active_device_s	access:public
id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int id;$/;"	m	struct:gvplugin_active_render_s	access:public
id	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	int id;         \/* an id that is only unique within a package $/;"	m	struct:__anon26	access:public
id	C:\exVim\graphviz\include\graphviz\types.h	/^	char *id;		\/* user's identifier *\/$/;"	m	struct:field_t	access:public
id	C:\exVim\graphviz\include\graphviz\types.h	/^	char* id;$/;"	m	struct:layout_t	access:public
id	C:\exVim\graphviz\include\graphviz\types.h	/^	int id, heapindex, hops;$/;"	m	struct:Agnodeinfo_t	access:public
id_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t id_link;		\/* main graph only *\/$/;"	m	struct:Agedge_s	access:public
id_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t id_link;$/;"	m	struct:Agsubnode_s	access:public
idle_handler	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	guint idle_handler = 0;$/;"	v
idregister	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void (*idregister) (void *state, int objtype, void *obj);$/;"	m	struct:Agiddisc_s	access:public
ifilter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ignore()$/;"	f
ignoreSwap	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean ignoreSwap;                     \/* Test for swapped edges if false *\/$/;"	m	struct:__anon37	access:public
ignorecase	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    short ignorecase;$/;"	m	struct:sTagFile::__anon65	file:	access:public
im	C:\exVim\vim74\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
image	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_image image;        \/* xd_image *\/$/;"	m	union:_xdot_op::__anon61	access:public
imagedata	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *imagedata;	\/* location of imagedata *\/$/;"	m	struct:GVJ_s	access:public
imagescale_t	C:\exVim\graphviz\include\graphviz\usershape.h	/^    } imagescale_t;$/;"	t	typeref:enum:__anon45
imagetype_t	C:\exVim\graphviz\include\graphviz\usershape.h	/^    } imagetype_t;$/;"	t	typeref:enum:__anon44
import	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:import(name, ...) abort$/;"	f
import	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:import(name, ...) abort$/;"	f
import	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:import(name, ...) abort$/;"	f
in	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agedge_t out, in;$/;"	m	struct:Agedgepair_s	access:public
in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
in_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_id, *out_id;	\/* by node\/ID for random access *\/$/;"	m	struct:Agsubnode_s	access:public
in_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_seq, *out_seq;	\/* by node\/sequence for serial access *\/$/;"	m	struct:Agsubnode_s	access:public
inc_highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
include_syntax	C:\exVim\vim74\syntax\context.vim	/^function! s:include_syntax(name, group)$/;"	f
increase	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:increase(...)$/;"	f
indentLine	C:\exVim\vimfiles\bundle\indentLine\after\plugin\indentLine.vim	/^augroup indentLine$/;"	a
indent_current_line	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:indent_current_line() abort "{{{$/;"	f
indent_guides	C:\exVim\vimfiles\bundle\vim-indent-guides\plugin\indent_guides.vim	/^augroup indent_guides$/;"	a
indent_guides#basic_highlight_colors	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#basic_highlight_colors()$/;"	f
indent_guides#calculate_guide_size	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#calculate_guide_size()$/;"	f
indent_guides#capture_highlight	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#capture_highlight(group_name)$/;"	f
indent_guides#clear_matches	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#clear_matches()$/;"	f
indent_guides#define_default_highlights	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#define_default_highlights()$/;"	f
indent_guides#disable	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#disable()$/;"	f
indent_guides#enable	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#enable()$/;"	f
indent_guides#exclude_filetype	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#exclude_filetype()$/;"	f
indent_guides#gui_highlight_colors	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#gui_highlight_colors()$/;"	f
indent_guides#highlight_colors	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#highlight_colors()$/;"	f
indent_guides#indent_highlight_pattern	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#indent_highlight_pattern(indent_pattern, column_start, indent_size)$/;"	f
indent_guides#init_matches	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#init_matches()$/;"	f
indent_guides#init_script_vars	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#init_script_vars()$/;"	f
indent_guides#lighten_or_darken_color	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#lighten_or_darken_color(color)$/;"	f
indent_guides#process_autocmds	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#process_autocmds()$/;"	f
indent_guides#toggle	C:\exVim\vimfiles\bundle\vim-indent-guides\autoload\indent_guides.vim	/^function! indent_guides#toggle()$/;"	f
indent_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:indent_snippet(begin, end) "{{{$/;"	f
indent_to_innermost_parentheses	C:\exVim\vim74\indent\dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
indent_value	C:\exVim\vim74\indent\sh.vim	/^function! s:indent_value(option)$/;"	f
index	C:\exVim\graphviz\include\graphviz\color.h	/^	int index;$/;"	m	union:color_s::__anon7	access:public
index	C:\exVim\graphviz\include\graphviz\graph.h	/^	int index;$/;"	m	struct:Agsym_t	access:public
index	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="index">Alphabetical quick index<\/A><\/H3>$/;"	a
index	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
indexOfOnly	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	static boolean indexOfOnly(String whole,String test)$/;"	m	class:SourceDocReader	access:default	signature:(String whole,String test)
inedges	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
info	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	char **info;$/;"	m	struct:GVCOMMON_s	access:public
info	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^                let info=s:RecursivelyConstructDirectives(line('.'))$/;"	v
information	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^_DL_EXPORT int information(char *str)$/;"	f	signature:(char *str)
information_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^int information_window(int x, int y, int width,int height,char *str)$/;"	f	signature:(int x, int y, int width,int height,char *str)
informing	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="informing"><H3>Please tell us you're using gd!<\/H3>$/;"	a
ingraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    Agraph_t** ingraphs;      \/* NULL-terminated array of input graphs *\/$/;"	m	struct:__anon30	access:public
init	C:\exVim\vimfiles\bundle\Vundle.vim\test\files\test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initVariable	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_buffer	C:\exVim\vimfiles\bundle\ex-vimentry\ftplugin\vimentry.vim	/^function! s:init_buffer()$/;"	f
init_hl_vars	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:init_hl_vars()$/;"	f
init_list_store	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void init_list_store()$/;"	f	signature:()
init_list_store	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void init_list_store();$/;"	p	file:	signature:()
init_vimentry	C:\exVim\vimfiles\bundle\ex-vimentry\ftplugin\vimentry.vim	/^function! s:init_vimentry()$/;"	f
init_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void init_window(int x,int y,int width,int height)$/;"	f	signature:(int x,int y,int width,int height)
init_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void init_window(int x,int y,int width,int height);$/;"	p	file:	signature:(int x,int y,int width,int height)
initfn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*initfn) (node_t *);	\/* initializes shape from node u.shape_info structure *\/$/;"	m	struct:shape_functions	access:public
initialize	C:\exVim\graphviz\include\graphviz\gvplugin_device.h	/^	void (*initialize) (GVJ_t * firstjob);$/;"	m	struct:gvdevice_engine_s	access:public
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\genvimdata.rb	/^    def initialize(ns,file)$/;"	f	class:Generator
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\tld2xmldata.rb	/^    def initialize(ns,file)$/;"	f	class:Generator
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def initialize(jar,path="\\"\\"")$/;"	f	class:Vjde.JavaCompletion
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def initialize(jar,path='')$/;"	f	class:Vjde.PackageCfu
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def initialize(jar,path='')$/;"	f	class:Vjde.PackageClass
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def initialize(name,lib="",src="",show=false)$/;"	f	class:Vjde.VjdeProject
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def initialize  ( arr)$/;"	f	class:Vjde.JavaMethod
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def initialize ( arr ) $/;"	f	class:Vjde.JavaConstructor
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def initialize ( arr ) $/;"	f	class:Vjde.JavaField
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def initialize (arr)$/;"	f	class:Vjde.JavaClass
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^		def initialize(f)$/;"	f	class:Vjde.CppDocReader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^				def initialize$/;"	f	class:Vjde.SourceReader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def initialize(tagsVar)$/;"	f	class:Vjde.CtagsTagList
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def initialize(tagsVar,cmd,exttp='')$/;"	f	class:Vjde.ReadTags
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def initialize(name, file, kind, line, scope, inherits, className, access,ns,cmd)$/;"	f	class:Vjde.CtagsTag
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def initialize() #{{{3$/;"	f	class:Vjde.VjdeDefLoader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def initialize(name)$/;"	f	class:Vjde.AttributeElement
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def initialize(name)$/;"	f	class:Vjde.TagElement
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def initialize(name,values=[])$/;"	f	class:Vjde.TypeElement
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^        def initialize$/;"	f	class:Vjde.JavadocReader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def initialize(webapp)$/;"	f	class:Vjde.Struts2ConfigLoader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def initialize$/;"	f	class:Vjde.JspDirective
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def initialize$/;"	f	class:Vjde.VjdeProjectTlds
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def initialize() $/;"	f	class:Vjde.Tld_Loader
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def initialize(d,u=nil)$/;"	f	class:Vjde.Tld_document
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def initialize(f=nil)$/;"	f	class:Vjde.VjdeTemplateManager
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def initialize(n,m)$/;"	f	class:Vjde.VjdeTemplate
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def initialize (name,vs=[])$/;"	f	class:Vjde.DTD_Entity
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def initialize$/;"	f	class:Vjde.DTD_Parser
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def initialize(n,children=[])$/;"	f	class:Vjde.DTD_Element
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def initialize(name,vt=nil,pt="#IMPLIED")$/;"	f	class:Vjde.DTD_Attribute
initialize	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^        def initialize$/;"	f	class:Vjde.DTD_Loader
initialize	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagFile *initialize (const char *const filePath, tagFileInfo *const info)$/;"	f	file:	signature:(const char *const filePath, tagFileInfo *const info)
initialize_cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\init.vim	/^function! s:initialize_cache() "{{{$/;"	f
initialize_options	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! s:initialize_options(options) "{{{$/;"	f
initialize_others	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\init.vim	/^function! s:initialize_others() "{{{$/;"	f
initialize_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:initialize_source(srcname, filetype) "{{{$/;"	f
initialize_tags	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialized	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    short initialized;$/;"	m	struct:sTagFile	file:	access:public
inleaf	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *inleaf, *outleaf;$/;"	m	struct:Agnodeinfo_t	access:public
innerClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer innerClassInfo(Class ic) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class ic)
input	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
input	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int input YY_PROTO(( void ));$/;"	p	file:	signature:( void )
input_filename	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *input_filename;$/;"	m	struct:GVJ_s	access:public
input_helper	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_label	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *input_label = NULL;$/;"	v
input_safe	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:inputtarget()$/;"	f
ins	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjfn_t ins;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
insert	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insertcache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:insertstr()$/;"	f
inside_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef union inside_t {$/;"	u
inside_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } inside_t;$/;"	t	typeref:union:inside_t
inside_t::__anon35::p	C:\exVim\graphviz\include\graphviz\types.h	/^	    pointf* p;$/;"	m	struct:inside_t::__anon35	access:public
inside_t::__anon35::r	C:\exVim\graphviz\include\graphviz\types.h	/^	    double* r;$/;"	m	struct:inside_t::__anon35	access:public
inside_t::__anon36::bp	C:\exVim\graphviz\include\graphviz\types.h	/^	    boxf*    bp;$/;"	m	struct:inside_t::__anon36	access:public
inside_t::__anon36::n	C:\exVim\graphviz\include\graphviz\types.h	/^	    node_t* n;$/;"	m	struct:inside_t::__anon36	access:public
inside_t::a	C:\exVim\graphviz\include\graphviz\types.h	/^	} a;$/;"	m	union:inside_t	typeref:struct:inside_t::__anon35	access:public
inside_t::s	C:\exVim\graphviz\include\graphviz\types.h	/^	} s;$/;"	m	union:inside_t	typeref:struct:inside_t::__anon36	access:public
insidefn	C:\exVim\graphviz\include\graphviz\types.h	/^	 boolean(*insidefn) (inside_t * inside_context, pointf);	\/* clips incident gvc->e spline on shape of gvc->n *\/$/;"	m	struct:shape_functions	access:public
install_plugin	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
installed	C:\exVim\graphviz\include\graphviz\types.h	/^	char installed;$/;"	m	struct:Agraphinfo_t	access:public
instanceForEntry	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    static ClassPathEntry instanceForEntry(File resource)$/;"	m	class:ClassPathEntry	access:default	signature:(File resource)
instaweb_url	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
integer	C:\exVim\graphviz\bin\exparse.h	/^	Sflong_t	integer;$/;"	m	union:EXSTYPE	access:public
interceptorRefs	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public InterceptorRef[] interceptorRefs() {$/;"	m	class:ActionImpl	access:public	signature:()
intersect	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intval	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	guint intval = 1000; \/\/interval$/;"	v
io	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agiodisc_t *io;$/;"	m	struct:Agdisc_s	access:public
isAccessible	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers, int level)
isAccessible	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:Completion	file:	access:private	signature:(int modifiers, int level)
isAncestorOf	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:ClassInfo	access:public	signature:(String ancestor, String child)
isAncestorOf	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:Completion	access:public	signature:(String ancestor, String child)
isConnected	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int isConnected(Agraph_t *);$/;"	p	signature:(Agraph_t *)
isLoaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    public boolean isLoaded() {$/;"	m	class:ClassPathEntry	access:public	signature:()
isOrtho	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean isOrtho;                        \/* Orthogonal routing used *\/$/;"	m	struct:__anon37	access:public
is_auto_pairs	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^function! s:is_auto_pairs() abort "{{{$/;"	f
is_bash	C:\exVim\vim74\syntax\initng.vim	/^let is_bash = 1$/;"	v
is_bash	C:\exVim\vim74\syntax\upstart.vim	/^let is_bash = 1$/;"	v
is_beginning_of_line	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! s:is_beginning_of_line(cur_text) "{{{$/;"	f
is_case	C:\exVim\vim74\indent\sh.vim	/^function! s:is_case(line)$/;"	f
is_case_break	C:\exVim\vim74\indent\sh.vim	/^function! s:is_case_break(line)$/;"	f
is_case_empty	C:\exVim\vim74\indent\sh.vim	/^function! s:is_case_empty(line)$/;"	f
is_case_ended	C:\exVim\vim74\indent\sh.vim	/^function! s:is_case_ended(line)$/;"	f
is_case_label	C:\exVim\vim74\indent\sh.vim	/^function! s:is_case_label(line, pnum)$/;"	f
is_cmdwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:is_cmdwin() "{{{$/;"	f
is_cmdwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_continuation_line	C:\exVim\vim74\indent\sh.vim	/^function! s:is_continuation_line(line)$/;"	f
is_cygwin	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_define	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int is_define ( const tagEntry* entry,const char* const kind)$/;"	f	file:	signature:( const tagEntry* entry,const char* const kind)
is_delimiter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:is_delimiter() abort "{{{$/;"	f
is_dict	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_in_fold	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
is_input_waiting	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
is_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_member	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult is_member(const tagEntry *entry,const char *const k,const char* const v)$/;"	f	file:	signature:(const tagEntry *entry,const char *const k,const char* const v)
is_mkdCode	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^function! s:is_mkdCode(lnum)$/;"	f
is_number	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_skip_auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:is_windows() abort$/;"	f
isatty	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^extern int isatty YY_PROTO(( int ));$/;"	p	file:	signature:( int )
iscmdwin	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
iskKeep	C:\exVim\vim74\syntax\vim.vim	/^ let iskKeep= &isk$/;"	v
ispathitem	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:ispathitem()$/;"	f
issues	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="issues"><H3>How do I report issues, bugs or features request?<\/H3><\/A>$/;"	a
item	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let item='rb'$/;"	v
itemno	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
j	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  nmap <buffer> j      gj$/;"	m
j	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  vmap <buffer> j      gj$/;"	m
j	C:\exVim\vim74\macros\less.vim	/^map j <CR>$/;"	m
java_highlight_all	C:\exVim\vim74\syntax\java.vim	/^  let java_highlight_all=1$/;"	v
java_highlight_all	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	C:\exVim\vim74\syntax\java.vim	/^  let java_minlines = 10$/;"	v
java_minlines	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^  let java_minlines = 10$/;"	v
java_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let java_previewer = VjdePreviewWindow_New()$/;"	v
java_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let java_previewer.docLineFun='VjdeGetDocWindowLine'$/;"	v
java_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let java_previewer.name = 'java_previewer'$/;"	v
java_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let java_previewer.onSelect='VjdeInsertWord'$/;"	v
java_previewer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde.vim	/^let java_previewer.previewLinesFun='GetJavaCompletionLines'$/;"	v
javascriptcomplete#CompleteJS	C:\exVim\vim74\autoload\javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f
jproperties_lines	C:\exVim\vim74\syntax\jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	C:\exVim\vim74\syntax\jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	C:\exVim\vim74\syntax\jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jsonXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern void jsonXDot (FILE*, xdot*);$/;"	p	signature:(FILE*, xdot*)
jump	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpToChild	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
just	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char just;	\/* 'l' 'n' 'r' *\/$/;"	m	struct:textpara_t	access:public
just	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char just;	\/* 'l' 'n' 'r' *\/ \/* FIXME *\/$/;"	m	struct:__anon34	access:public
justify_equal_spacing	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  nmap <buffer> k      gk$/;"	m
k	C:\exVim\vim74\ftplugin\flexwiki.vim	/^  vmap <buffer> k      gk$/;"	m
k	C:\exVim\vim74\macros\less.vim	/^noremap <script> k <C-Y><SID>L$/;"	m
k	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^            let k=k+1$/;"	v
k	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        let k=1$/;"	v
k:arrowType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:arrowType><STRONG>arrowType<\/STRONG><\/A>$/;"	a
k:aspectType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:aspectType><STRONG>aspectType<\/STRONG><\/A>$/;"	a
k:bool	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^For the <A NAME=k:bool><EM>bool<\/EM><\/A> type, TRUE values are$/;"	a
k:clusterMode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:clusterMode><STRONG>clusterMode<\/STRONG><\/A>$/;"	a
k:color	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:color><STRONG>color<\/STRONG><\/A>$/;"	a
k:colorList	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:colorList><STRONG>colorList<\/STRONG><\/A>$/;"	a
k:dirType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:dirType><STRONG>dirType<\/STRONG><\/A>$/;"	a
k:escString	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:escString><STRONG>escString<\/STRONG><\/A>$/;"	a
k:layerList	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:layerList><STRONG>layerList<\/STRONG><\/A>$/;"	a
k:layerRange	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:layerRange><STRONG>layerRange<\/STRONG><\/A>$/;"	a
k:lblString	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:lblString><STRONG>lblString<\/STRONG><\/A>$/;"	a
k:outputMode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:outputMode><STRONG>outputMode<\/STRONG><\/A>$/;"	a
k:packMode	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:packMode><STRONG>packMode<\/STRONG><\/A>$/;"	a
k:pagedir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:pagedir><STRONG>pagedir<\/STRONG><\/A>$/;"	a
k:point	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:point><STRONG>point<\/STRONG><\/A>$/;"	a
k:pointf	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:pointf><STRONG>pointf<\/STRONG><\/A>$/;"	a
k:pointfList	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:pointfList><STRONG>pointfList<\/STRONG><\/A>$/;"	a
k:portPos	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:portPos><STRONG>portPos<\/STRONG><\/A>$/;"	a
k:quadType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:quadType><STRONG>quadType<\/STRONG><\/A>$/;"	a
k:rankType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:rankType><STRONG>rankType<\/STRONG><\/A>$/;"	a
k:rankdir	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:rankdir><STRONG>rankdir<\/STRONG><\/A>$/;"	a
k:rect	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:rect><STRONG>rect<\/STRONG><\/A>$/;"	a
k:shape	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:shape><STRONG>shape<\/STRONG><\/A>$/;"	a
k:smoothType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:smoothType><STRONG>smoothType<\/STRONG><\/A>$/;"	a
k:splineType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:splineType><STRONG>splineType<\/STRONG><\/A>$/;"	a
k:startType	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:startType><STRONG>startType<\/STRONG><\/A>$/;"	a
k:style	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:style><STRONG>style<\/STRONG><\/A>$/;"	a
k:viewPort	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<DT><A NAME=k:viewPort><STRONG>viewPort<\/STRONG><\/A>$/;"	a
key	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int		key;	\/* where the key begins in an object	*\/$/;"	m	struct:_dtdisc_s	access:public
key	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *key;$/;"	m	struct:__anon74	access:public
key_release_count	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	int key_release_count=0;$/;"	v
keybindings	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvevent_key_binding_t *keybindings;$/;"	m	struct:GVJ_s	access:public
keycodes	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *keycodes;$/;"	m	struct:GVJ_s	access:public
keystring	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *keystring;$/;"	m	struct:gvevent_key_binding_s	access:public
keyword_filter	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) "{{{$/;"	f
kind	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char kind;		\/* referent object type *\/$/;"	m	struct:Agsym_s	access:public
kind	C:\exVim\graphviz\include\graphviz\graph.h	/^	int kind:4;$/;"	m	struct:Agraph_t	access:public
kind	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_kind kind;$/;"	m	struct:_xdot_op	access:public
kind	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *kind;$/;"	m	struct:__anon75	access:public
klass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String klass;$/;"	f	class:Struts2Configure.MyAction	access:public
klass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String klass;$/;"	f	class:Struts2Simple.MyAction	access:public
knowncolors	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **knowncolors;$/;"	m	struct:__anon20	access:public
l	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let l = line('.')$/;"	v
l_array	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
l_aspect	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
l_clust	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
l_graph	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
l_node	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
l_undef	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	e	enum:__anon31
label	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *label;$/;"	m	struct:obj_state_s	access:public
label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label;	\/* if the cluster has a title *\/$/;"	m	struct:Agraphinfo_t	access:public
label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label;$/;"	m	struct:Agnodeinfo_t	access:public
label_ontop	C:\exVim\graphviz\include\graphviz\types.h	/^	char label_ontop;$/;"	m	struct:Agedgeinfo_t	access:public
label_pos	C:\exVim\graphviz\include\graphviz\types.h	/^	char label_pos;$/;"	m	struct:Agraphinfo_t	access:public
label_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { LABEL_PLAIN, LABEL_HTML } label_type;$/;"	t	typeref:enum:__anon18
labeltarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labeltarget;$/;"	m	struct:obj_state_s	access:public
labeltooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labeltooltip;$/;"	m	struct:obj_state_s	access:public
labelurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labelurl;$/;"	m	struct:obj_state_s	access:public
landscape	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean landscape;$/;"	m	struct:layout_t	access:public
lang	C:\exVim\vim74\spell\check_locales.vim	/^  let lang = substitute(item.text, '.*LANG=\\(\\S\\+\\).*', '\\1', '')$/;"	v
language	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def language()$/;"	f	class:Vjde.CtagsTag
lash	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^fu! s:lash(...)$/;"	f
lastvisual	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:lastvisual()$/;"	f
layerNum	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int layerNum;		\/* current layer - 1 based*\/$/;"	m	struct:GVJ_s	access:public
layout	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*layout) (GVJ_t * job, const char *layout);$/;"	m	struct:gvdevice_callbacks_s	access:public
layout	C:\exVim\graphviz\include\graphviz\gvplugin_layout.h	/^	void (*layout) (graph_t * g);$/;"	m	struct:gvlayout_engine_s	access:public
layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	void *layout;$/;"	m	struct:textpara_t	access:public
layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	void *layout;$/;"	m	struct:__anon34	access:public
layout_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct layout_t {$/;"	s
layout_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } layout_t;$/;"	t	typeref:struct:layout_t
layout_t::centered	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean centered;$/;"	m	struct:layout_t	access:public
layout_t::dpi	C:\exVim\graphviz\include\graphviz\types.h	/^	double dpi;$/;"	m	struct:layout_t	access:public
layout_t::filled	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean filled;$/;"	m	struct:layout_t	access:public
layout_t::id	C:\exVim\graphviz\include\graphviz\types.h	/^	char* id;$/;"	m	struct:layout_t	access:public
layout_t::landscape	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean landscape;$/;"	m	struct:layout_t	access:public
layout_t::margin	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf margin;$/;"	m	struct:layout_t	access:public
layout_t::page	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf page;$/;"	m	struct:layout_t	access:public
layout_t::quantum	C:\exVim\graphviz\include\graphviz\types.h	/^	double quantum;$/;"	m	struct:layout_t	access:public
layout_t::ratio	C:\exVim\graphviz\include\graphviz\types.h	/^	double ratio;		\/* set only if ratio_kind == R_VALUE *\/$/;"	m	struct:layout_t	access:public
layout_t::ratio_kind	C:\exVim\graphviz\include\graphviz\types.h	/^	ratio_t ratio_kind;$/;"	m	struct:layout_t	access:public
layout_t::scale	C:\exVim\graphviz\include\graphviz\types.h	/^	double scale;$/;"	m	struct:layout_t	access:public
layout_t::size	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf size;$/;"	m	struct:layout_t	access:public
layout_t::xdots	C:\exVim\graphviz\include\graphviz\types.h	/^	void* xdots;$/;"	m	struct:layout_t	access:public
layout_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *layout_type;$/;"	m	struct:GVJ_s	access:public
leader	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *leader, **rankleader;$/;"	m	struct:Agraphinfo_t	access:public
leavepre	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:leavepre()$/;"	f
left	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int left;$/;"	v
left	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int left;$/;"	v
length	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:length(str)$/;"	f
less	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^less = require 'less'$/;"	r
less	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  less = require('less');$/;"	r
level	C:\exVim\graphviz\include\graphviz\types.h	/^	int level;		\/* cluster nesting level (not node level!) *\/$/;"	m	struct:Agraphinfo_t	access:public
leveladjust	C:\exVim\vim74\syntax\2html.vim	/^	    let leveladjust += 1$/;"	v
leveladjust	C:\exVim\vim74\syntax\2html.vim	/^    let leveladjust -= 1$/;"	v
leveladjust	C:\exVim\vim74\syntax\2html.vim	/^  let leveladjust = 0$/;"	v
levenshtein_distance	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lex	C:\exVim\vim74\indent\dtd.vim	/^function s:lex(input, start, ...)$/;"	f
lex1	C:\exVim\vim74\indent\dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
lhs_key_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
lib	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const char **lib; $/;"	m	struct:GVCOMMON_s	access:public
library_shape	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*library_shape) (GVJ_t * job, char *name, pointf * A, int n, int filled);$/;"	m	struct:gvrender_engine_s	access:public
libs	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string[] libs ;$/;"	f	class:Wangfc.CSParser	file:	access:private
libs	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
libs	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
lim	C:\exVim\graphviz\include\graphviz\types.h	/^	int low, lim;$/;"	m	struct:Agnodeinfo_t	access:public
limit	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
line	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    vstring line;$/;"	m	struct:sTagFile	file:	access:public
lineNumber	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		unsigned long lineNumber;$/;"	m	struct:__anon75::__anon76	access:public
line_list	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *line_list = NULL;$/;"	v
linechars	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lineout	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:lines(str) abort$/;"	f
lines	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:lines(str) abort$/;"	f
lines	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	vector<string> lines;$/;"	v
ling	C:\exVim\graphviz\include\graphviz\xdot.h	/^	xdot_linear_grad ling;$/;"	m	union:__anon50::__anon51	access:public
link	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		link;	\/* offset to Dtlink_t field		*\/$/;"	m	struct:_dtdisc_s	access:public
link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t link;$/;"	m	struct:Agraph_s	access:public
link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t link;$/;"	m	struct:Agsym_s	access:public
link	C:\exVim\graphviz\include\graphviz\usershape.h	/^	Dtlink_t link;$/;"	m	struct:usershape_s	access:public
links_to	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:links_to(highlight)$/;"	f
list	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agsym_t **list;$/;"	m	struct:Agdict_t	access:public
list	C:\exVim\graphviz\include\graphviz\types.h	/^	bezier *list;$/;"	m	struct:splines	access:public
list	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t **list;$/;"	m	struct:elist	access:public
list	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **list;$/;"	m	struct:nlist_t	access:public
list	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *list;$/;"	m	struct:bezier	access:public
list	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    tagExtensionField *list;$/;"	m	struct:sTagFile::__anon66	file:	access:public
list	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		tagExtensionField *list;$/;"	m	struct:__anon75::__anon77	access:public
list4Class	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void list4Class(String argFile,String fullname,Vector v,int length) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,String fullname,Vector v,int length)
listClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void listClass(String argFile,Vector v) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,Vector v)
listClassArray	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  static String listClassArray(Class[] classes) {$/;"	m	class:Completion	access:default	signature:(Class[] classes)
listClassInfo	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void listClassInfo(Class c, int level, StringBuffer sb) {$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
listClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  static StringBuffer listClasses(Class[] classes) {$/;"	m	class:ClassInfo	access:default	signature:(Class[] classes)
listConstructors	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void listConstructors(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
listDir	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private void listDir(File argFile,Vector v,String pre) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile,Vector v,String pre)
listExceptions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer listExceptions(Class[] classes) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class[] classes)
listMembers	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void listMembers (const char* const k , const char* const v)$/;"	f	file:	signature:(const char* const k , const char* const v)
listModifiers	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer listModifiers(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
listTags	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void listTags (void)$/;"	f	file:	signature:(void)
list_store	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkListStore* list_store=NULL;$/;"	v
ln	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *ln, *rn;	\/* left, right nodes of bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
lnum	C:\exVim\vim74\spell\fixdup.vim	/^  let lnum += 1$/;"	v
lnum	C:\exVim\vim74\spell\fixdup.vim	/^let lnum = 2$/;"	v
load	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:load(...) dict abort$/;"	f
load	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:load(...) dict abort$/;"	f
load	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:load(...) dict abort$/;"	f
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def load()$/;"	f	class:Vjde.PackageCfu
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def load()$/;"	f	class:Vjde.VjdeProject
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def load(pkg)$/;"	f	class:Vjde.PackageClass
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^                def load(fname) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def load(f,uri=nil) $/;"	f	class:Vjde.Tld_Loader
load	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^        def load(fname,m_a=nil)$/;"	f	class:Vjde.DTD_Loader
load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    void load() {$/;"	m	class:ClassPathDir	access:default	signature:()
load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    abstract void load() throws IOException;$/;"	m	class:ClassPathEntry	access:default	signature:()
load	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    void load() throws IOException {$/;"	m	class:ClassPathZip	access:default	signature:()
load2	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_taglib_cfu.rb	/^        def load2(doc,uri=nil)$/;"	f	class:Vjde.Tld_Loader
loadClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  public Class loadClass(String argClassName) throws ClassNotFoundException {$/;"	m	class:DynamicClassLoader	access:public	signature:(String argClassName)
loadFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private byte[] loadFile(File argFile) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile)
loadFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private byte[] loadFile(ZipFile argFile, String argClassName) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(ZipFile argFile, String argClassName)
load_all	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^	def VjdeTemplateManager.load_all(path1)$/;"	F	class:Vjde.VjdeTemplateManager
load_config	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def load_config(file)$/;"	f	class:Vjde.Struts2ConfigLoader
load_from_file	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, fileencoding, is_string) "{{{$/;"	f
load_from_tags	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, fileencoding) "{{{$/;"	f
load_index	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def load_index(f)$/;"	f	class:Vjde.VjdeTemplateManager
load_path	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private String load_path = null;$/;"	f	class:DynamicClassLoader	file:	access:private
load_scripts	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! s:load_scripts(bang)$/;"	f
load_smart_dict	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^	def VjdeTemplateManager.loaded$/;"	F	class:Vjde.VjdeTemplateManager
loaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected boolean loaded = false;$/;"	f	class:ClassPathEntry	access:protected
loaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^    HashMap loaded = new HashMap();$/;"	f	class:DynamicClassLoader	access:default
loaded_DoxygenToolkit	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let loaded_DoxygenToolkit = 1$/;"	v
loaded_crefvim	C:\exVim\vimfiles\bundle\ex-cref\plugin\crefvim.vim	/^let loaded_crefvim = 1$/;"	v
loaded_floatingwindow	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^let loaded_floatingwindow='yes'	$/;"	v
loaded_gzip	C:\exVim\vim74\plugin\gzip.vim	/^let loaded_gzip = 1$/;"	v
loaded_less	C:\exVim\vim74\macros\less.vim	/^let loaded_less = 1$/;"	v
loaded_matchit	C:\exVim\vim74\macros\matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_matchit	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_nerd_comments	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_project	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^let loaded_project=1$/;"	v
loaded_rrhelper	C:\exVim\vim74\plugin\rrhelper.vim	/^let loaded_rrhelper = 1$/;"	v
loaded_showmarks	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^let loaded_showmarks = 1$/;"	v
loaded_spellfile_plugin	C:\exVim\vim74\plugin\spellfile.vim	/^let loaded_spellfile_plugin = 1$/;"	v
loaded_taglist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_todolist	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let loaded_todolist='yes'	$/;"	v
loadimage	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_loadimage_t loadimage;$/;"	m	struct:GVJ_s	access:public
loadimage	C:\exVim\graphviz\include\graphviz\gvplugin_loadimage.h	/^	void (*loadimage) (GVJ_t *job, usershape_t *us, boxf b, boolean filled);$/;"	m	struct:gvloadimage_engine_s	access:public
loadjdk	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^        def loadjdk(beginning)$/;"	f	class:Vjde.PackageClass
location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String location() {$/;"	m	class:ResultImpl	access:public	signature:()
location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String location;$/;"	f	class:ResultImpl	access:default
location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String location() {$/;"	m	class:ResultImpl2	access:public	signature:()
location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String location;$/;"	f	class:ResultImpl2	access:default
location	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String location() ;$/;"	m	interface:Result	access:public	signature:()
log	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:log(str, ...) abort$/;"	f
log	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:log(m)$/;"	f
log	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:log(msg)$/;"	f
login	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:login()$/;"	f
lookup_by_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *lookup_by_id[3];$/;"	m	struct:Agclos_s	access:public
lookup_by_name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *lookup_by_name[3];$/;"	m	struct:Agclos_s	access:public
loop	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		loop;	\/* number of nested loops		*\/$/;"	m	struct:_dtdata_s	access:public
low	C:\exVim\graphviz\include\graphviz\types.h	/^	int low, lim;$/;"	m	struct:Agnodeinfo_t	access:public
lp	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *lp;	\/* n_flds == 0 *\/$/;"	m	struct:field_t	access:public
lsCmd	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:lsCmd()$/;"	f
lt_preloaded_symbols	C:\exVim\graphviz\include\graphviz\gvcext.h	/^	__declspec(dllexport) lt_symlist_t lt_preloaded_symbols[];$/;"	v
lt_preloaded_symbols	C:\exVim\graphviz\include\graphviz\gvcext.h	/^__declspec(dllimport) lt_symlist_t lt_preloaded_symbols[];$/;"	v
lt_symlist_t	C:\exVim\graphviz\include\graphviz\gvcext.h	/^    } lt_symlist_t;$/;"	t	typeref:struct:__anon14
lua_subversion	C:\exVim\vim74\syntax\lua.vim	/^  let lua_subversion = 0$/;"	v
lua_subversion	C:\exVim\vim74\syntax\lua.vim	/^  let lua_subversion = 2$/;"	v
lua_version	C:\exVim\vim74\syntax\lua.vim	/^  let lua_version = 5$/;"	v
lw	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
m	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^nnoremap <unique> <silent> m :call <sid>ShowMarksPlaceMark( nr2char(getchar()) )<CR>$/;"	m
m	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let m = matchlist(&cinoptions, ':\\(.\\)')$/;"	v
m	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let m = matchlist(&cinoptions, '=\\(.\\)')$/;"	v
m_fileName	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	private String m_fileName;$/;"	f	class:SourceDocReader	file:	access:private
m_vimHwnd	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^HWND m_vimHwnd; \/\/ vim ´°¿Ú$/;"	v
m_vimHwnd	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	HWND m_vimHwnd;$/;"	v
m_vimHwnd	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^HWND m_vimHwnd; \/\/ vim ´°¿Ú$/;"	v
macro_id	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int macro_id;$/;"	m	struct:usershape_s	access:public
mailinglist	C:\exVim\graphviz\share\graphviz\doc\html\FAQ.html	/^<a name="mailinglist"><\/a>$/;"	a
main	C:\exVim\vim74\tools\blink.c	/^main()$/;"	f
main	C:\exVim\vim74\tools\ccfilter.c	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	C:\exVim\vim74\tools\xcmdsrv_client.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    public static void main(String[] args) throws Exception{$/;"	m	class:CalculateStats	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def main(write_to, module_list):$/;"	f	access:public
main	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^main([File]) ->$/;"	f
main	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^main(_) ->$/;"	f
main	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int main()$/;"	f
main	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^int main(int argc,char* argv[])$/;"	f	signature:(int argc,char* argv[])
main	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^int main( int argc, char* argv[] )$/;"	f	signature:( int argc, char* argv[] )
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  public static void main (String[] args) {$/;"	m	class:ClassInfo	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassesByName.java	/^	public static void main(String[] args) {$/;"	m	class:ClassesByName	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  public static void main (String[] args) {$/;"	m	class:Completion	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^        public static void main(String[] args) {$/;"	m	class:Document	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageClasses.java	/^	public static void main(String[] args) {$/;"	m	class:PackageClasses	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageCompletion.java	/^    public static void main(String[] args) {$/;"	m	class:PackageCompletion	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	public static void main(String[] args) {$/;"	m	class:SourceDocReader	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2Configure	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2ConfigureMain.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2ConfigureMain	access:public	signature:(String[] args)
main	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public static void main(String args[]) {$/;"	m	class:Struts2Simple	access:public	signature:(String args[])
main	C:\exVim\vimfiles\bundle\vjde\src\wspawn.cpp	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	C:\exVim\vimfiles\c-support\main.c	/^int main()$/;"	f
main	C:\exVim\vimfiles\c-support\main.cpp	/^int main ( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main_syntax	C:\exVim\vim74\syntax\aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
main_syntax	C:\exVim\vim74\syntax\aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	C:\exVim\vim74\syntax\aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	C:\exVim\vim74\syntax\css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	C:\exVim\vim74\syntax\eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	C:\exVim\vim74\syntax\fvwm2m4.vim	/^  let main_syntax = 'fvwm2m4'$/;"	v
main_syntax	C:\exVim\vim74\syntax\groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	C:\exVim\vim74\syntax\gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	C:\exVim\vim74\syntax\haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	C:\exVim\vim74\syntax\html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	C:\exVim\vim74\syntax\htmlcheetah.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	C:\exVim\vim74\syntax\htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	C:\exVim\vim74\syntax\htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	C:\exVim\vim74\syntax\htmlos.vim	/^  let main_syntax = 'htmlos'$/;"	v
main_syntax	C:\exVim\vim74\syntax\java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	C:\exVim\vim74\syntax\javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	C:\exVim\vim74\syntax\json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	C:\exVim\vim74\syntax\jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	C:\exVim\vim74\syntax\liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	C:\exVim\vim74\syntax\lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	C:\exVim\vim74\syntax\m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	C:\exVim\vim74\syntax\markdown.vim	/^  let main_syntax = 'markdown'$/;"	v
main_syntax	C:\exVim\vim74\syntax\mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	C:\exVim\vim74\syntax\msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	C:\exVim\vim74\syntax\ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	C:\exVim\vim74\syntax\pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	C:\exVim\vim74\syntax\php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	C:\exVim\vim74\syntax\plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	C:\exVim\vim74\syntax\smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	C:\exVim\vim74\syntax\smil.vim	/^  let main_syntax = 'smil'$/;"	v
main_syntax	C:\exVim\vim74\syntax\spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	C:\exVim\vim74\syntax\texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	C:\exVim\vim74\syntax\tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	C:\exVim\vim74\syntax\tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	C:\exVim\vim74\syntax\uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	C:\exVim\vim74\syntax\webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	C:\exVim\vim74\syntax\wml.vim	/^  let main_syntax = 'wml'$/;"	v
main_syntax	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	C:\exVim\vimfiles\bundle\ex-typescript\syntax\typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	C:\exVim\vimfiles\bundle\vim-javascript\syntax\javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	C:\exVim\vimfiles\bundle\vim-stylus\syntax\stylus.vim	/^  let main_syntax = 'css'$/;"	v
maingraph	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned maingraph:1;	\/* if this is the top level graph *\/$/;"	m	struct:Agdesc_s	access:public
mainsub	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agsubnode_t mainsub;	\/* embedded for main graph *\/$/;"	m	struct:Agnode_s	access:public
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:make(...)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules.vim	/^function! s:make(name, ...)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Cancel.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\CursorMove.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Delete.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^function! s:make(prefix)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionExit.vim	/^function! s:make(...)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^function! s:make(...)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Exit.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:make(...)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^function! s:make(chars)$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Paste.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^function! s:make()$/;"	f
make	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:make(...)$/;"	f
make_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! s:make_cache(filetype) "{{{$/;"	f
make_cache_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:make_cache_buffer(srcname) "{{{$/;"	f
make_cache_current_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_line	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! s:make_cache_current_line() "{{{$/;"	f
make_cache_file	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:make_cache_file(srcname) "{{{$/;"	f
make_cache_lines	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:make_cache_lines(srcname, filetype, lines) "{{{$/;"	f
make_emacs	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:make_emacs()$/;"	f
make_plain	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^function! s:make_plain()$/;"	f
make_polyline	C:\exVim\graphviz\include\graphviz\pathplan.h	/^    extern void make_polyline(Ppolyline_t line, Ppolyline_t* sline);$/;"	p	signature:(Ppolyline_t line, Ppolyline_t* sline)
make_special_chars	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^function! s:make_special_chars()$/;"	f
make_sync_command	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
make_vim_cmdline_mapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
makef	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmake_f	makef;	\/* object constructor			*\/$/;"	m	struct:_dtdisc_s	access:public
map	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    long (*map) (void *state, int objtype, char *str, unsigned long *id,$/;"	m	struct:Agiddisc_s	access:public
map_accum	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_shape_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {MAP_RECTANGLE, MAP_CIRCLE, MAP_POLYGON, } map_shape_t;$/;"	t	typeref:enum:__anon22
margin	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        pointf  margin;		\/* job-specific margin - points *\/$/;"	m	struct:GVJ_s	access:public
margin	C:\exVim\graphviz\include\graphviz\pack.h	/^	unsigned int margin;	\/* margin left around objects, in points *\/$/;"	m	struct:__anon32	access:public
margin	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf margin;$/;"	m	struct:layout_t	access:public
mark	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^    match = arg.match(\/^--?([a-z][\\-0-9a-z]*)(?:=([^\\s]+))?$\/i)$/;"	r
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^    match = arg.match(\/^-I(.+)$\/)$/;"	r
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^    match = arg.match(\/^--?([a-z][\\-0-9a-z]*)(?:=([^\\s]+))?$\/i);$/;"	r
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^    match = arg.match(\/^-I(.+)$\/);$/;"	r
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^    var match;$/;"	r
match	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
match_key	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
match_window_opts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matcher.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_length.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matchfname	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchparen	C:\exVim\vim74\plugin\matchparen.vim	/^augroup matchparen$/;"	a
matchtabe	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! s:max(len, max)$/;"	f
max	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    unsigned short max;$/;"	m	struct:sTagFile::__anon66	file:	access:public
max=	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^	def max=(m)$/;"	f	class:Vjde.ReadTags
max_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_edge_id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int max_node_id, max_edge_id;$/;"	m	struct:Agdata_t	access:public
max_lines	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int max_lines = -1;$/;"	v	file:
max_node_id	C:\exVim\graphviz\include\graphviz\graph.h	/^	int max_node_id, max_edge_id;$/;"	m	struct:Agdata_t	access:public
maxf	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:maxf(len)$/;"	f
maxrank	C:\exVim\graphviz\include\graphviz\types.h	/^	short minrank, maxrank;$/;"	m	struct:Agraphinfo_t	access:public
maxrep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t	*minrep, *maxrep;	\/* set leaders for min and max rank *\/$/;"	m	struct:Agraphinfo_t	access:public
maxset	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *minset, *maxset;	\/* set leaders *\/$/;"	m	struct:Agraphinfo_t	access:public
mel_minlines	C:\exVim\vim74\syntax\mel.vim	/^  let mel_minlines=15$/;"	v
mem	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agmemdisc_t *mem;$/;"	m	struct:Agdisc_s	access:public
mem	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *mem;$/;"	m	struct:Agdstate_s	access:public
member	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String member;$/;"	f	class:Document	access:default
memoryf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmemory_f	memoryf;\/* function to alloc\/free memory	*\/$/;"	m	struct:_dt_s	access:public
memoryf	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmemory_f	memoryf;\/* to allocate\/free memory		*\/$/;"	m	struct:_dtdisc_s	access:public
menutrans_help_dialog	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_help_dialog = "Írd be a kívánt szót vagy parancsot:\\n\\n A szövegbeviteli parancsok elé írj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszõ parancsok elé c_-t (pl.: c_<Del>)\\nA változókat a ' jellel vedd körül (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let menutrans_help_dialog = "Ãrd be a kÃ­vÃ¡nt szÃ³t vagy parancsot:\\n\\n A szÃ¶vegbeviteli parancsok elÃ© Ã­rj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszÅ parancsok elÃ© c_-t (pl.: c_<Del>)\\nA vÃ¡ltozÃ³kat a ' jellel vedd kÃ¶rÃ¼l (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let menutrans_help_dialog = "Typ een commando of woord om help voor te vinden:\\n\\nVoeg i_ in voor Input mode commandos (bijv. i_CTRL-X)\\nVoeg c_ in voor een commando-regel edit commando (bijv. c_<Del>)\\nVoeg ' in \\voor een optie naam (bijv. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_help_dialog = "Wprowad¼ komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let menutrans_help_dialog = "WprowadÅº komendÄ lub sÅowo, aby otrzymaÄ pomoc o:\\n\\nPrzedrostek i_ oznacza komendÄ trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendÄ edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwÄ opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let menutrans_help_dialog = "Wprowad komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let menutrans_help_dialog = "Unesite naredbu ili rec cije pojasnjenje trazite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog rezima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_help_dialog = "Unesite naredbu ili reè èije poja¹njenje tra¾ite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog re¾ima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_help_dialog = "ÃÝÕáØâÕ ÝÐàÕÔÑã ØÛØ àÕç çØøÕ ßÞøÐèúÕúÕ âàÐÖØâÕ:\\n\\n´ÞÔÐøâÕ i_ ×Ð ÝÐàÕÔÑÕ ãÝÞáÐ (Ýßà. i_CTRL-X)\\n´ÞÔÐøâÕ c_ ×Ð ÝÐàÕÔÑÕ ÚÞÜÐÝÔÝÞÓ àÕÖØÜÐ (Ýßà. á_<Del>)\\n´ÞÔÐøâÕ ' ×Ð ØÜÕÝÐ ÞßæØøÐ (Ýßà. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let menutrans_help_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð°ÑÐµÐ´Ð±Ñ Ð¸Ð»Ð¸ ÑÐµÑ ÑÐ¸ÑÐµ Ð¿Ð¾ÑÐ°ÑÑÐµÑÐµ ÑÑÐ°Ð¶Ð¸ÑÐµ:\\n\\nÐÐ¾Ð´Ð°ÑÑÐµ i_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÑÐ½Ð¾ÑÐ° (Ð½Ð¿Ñ. i_CTRL-X)\\nÐÐ¾Ð´Ð°ÑÑÐµ c_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð½Ð¾Ð³ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð¿Ñ. Ñ_<Del>)\\nÐÐ¾Ð´Ð°ÑÑÐµ ' Ð·Ð° Ð¸Ð¼ÐµÐ½Ð° Ð¾Ð¿ÑÐ¸ÑÐ° (Ð½Ð¿Ñ. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let menutrans_help_dialog = "Skriv in ett kommando eller ord som du vill söka hjälp på:\\n\\nBörja med i_ för infogninglägeskommandon (t.ex. i_CTRL-X)\\nBörja med c_ för kommandoradredigeringskommandon (t.ex. c_<Del>)\\nBörja med ' för ett inställningsnamn (t.ex. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let menutrans_help_dialog = "Âêàæ³òü êîìàíäó àáî ñëîâî äëÿ ïîøóêó:\\n\\nÄîäàéòå i_ äëÿ êîìàíä ðåæèìó âñòàâêè (íàïð. i_CTRL-X)\\nÄîäàéòå i_ äëÿ êîìàíäíîãî ðåæèìó (íàïð. ñ_<Del>)\\nÄîäàéòå ' äëÿ ïîçíà÷åííÿ íàçâè îïö³¿ (íàïð. 'shiftwidth')"$/;"	v
menutrans_help_dialog	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_help_dialog = "÷ËÁÖ¦ÔØ ËÏÍÁÎÄÕ ÁÂÏ ÓÌÏ×Ï ÄÌÑ ÐÏÛÕËÕ:\\n\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄ ÒÅÖÉÍÕ ×ÓÔÁ×ËÉ (ÎÁÐÒ. i_CTRL-X)\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄÎÏÇÏ ÒÅÖÉÍÕ (ÎÁÐÒ. Ó_<Del>)\\näÏÄÁÊÔÅ ' ÄÌÑ ÐÏÚÎÁÞÅÎÎÑ ÎÁÚ×É ÏÐÃ¦§ (ÎÁÐÒ. 'shiftwidth')"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let menutrans_no_file = "[Geen Bestand]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let menutrans_no_file = "[îÅÔ ÆÁÊÌÁ]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let menutrans_no_file = "[ÐÐµÑ ÑÐ°Ð¹Ð»Ð°]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_no_file = "[½ÕÜÐ ÔÐâÞâÕÚÕ]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let menutrans_no_file = "[ÐÐµÐ¼Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let menutrans_no_file = "[Ingen fil]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let menutrans_no_file = "[Íåìàº\\ Ôàéëà]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_no_file = "[îÅÍÁ¤\\ æÁÊÌÁ]"$/;"	v
menutrans_no_file	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let menutrans_no_file = "[khÃ´ng cÃ³ táº­p tin]"$/;"	v
mergelists	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:mergelists()$/;"	f
meta_node	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *meta_node;$/;"	m	struct:Agraph_t	access:public
meth	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dtmethod_t*	meth;	\/* dictionary method			*\/$/;"	m	struct:_dt_s	access:public
method	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String method;$/;"	f	class:Struts2Configure.MyAction	access:public
method	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String method;$/;"	f	class:Struts2Simple.MyAction	access:public
mfplain_mp_macros	C:\exVim\vim74\syntax\mp.vim	/^  let mfplain_mp_macros = 0 " Set this to '1' to include these macro names$/;"	v
mfunc	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:migemo(str)$/;"	f
min_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:min_by(list, expr) abort$/;"	f
minlen	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short minlen;$/;"	m	struct:Agedgeinfo_t	access:public
minp	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		minp;	\/* min path before splay, always even	*\/$/;"	m	struct:_dtdata_s	access:public
minrank	C:\exVim\graphviz\include\graphviz\types.h	/^	short minrank, maxrank;$/;"	m	struct:Agraphinfo_t	access:public
minrep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t	*minrep, *maxrep;	\/* set leaders for min and max rank *\/$/;"	m	struct:Agraphinfo_t	access:public
minset	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *minset, *maxset;	\/* set leaders *\/$/;"	m	struct:Agraphinfo_t	access:public
minusK	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<DT><A NAME=minusK><STRONG>-K<\/STRONG><\/A><I>layout<\/I>$/;"	a
misc	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="misc">Miscellaneous Functions<\/A><\/H3>$/;"	a
mixedsort	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mmc_logmon_sup	C:\exVim\vimfiles\bundle\Vundle.vim\test\files\test.erl	/^-module(mmc_logmon_sup).$/;"	m
mmode	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:mmode()$/;"	f
mod	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	agobjupdfn_t mod;$/;"	m	struct:Agcbdisc_s::__anon3	access:public
mode	C:\exVim\graphviz\include\graphviz\pack.h	/^	pack_mode mode;		\/* granularity and method *\/$/;"	m	struct:__anon32	access:public
modevar	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*modify) (GVJ_t * job, const char *name, const char *value);$/;"	m	struct:gvdevice_callbacks_s	access:public
modify	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
module.complete	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
module.get_complete_words	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
module.histories	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:module.histories()$/;"	f
module.is_no_insert	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
module.message	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
module.on_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_draw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
module.on_draw_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
module.on_draw_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_draw_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_enter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_exception	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_exception	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_execute	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
module.on_execute_failed	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
module.on_execute_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
module.on_execute_pre	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
module.on_leave	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
module.on_leave	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.redraw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
module.reset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:module.reset()$/;"	f
module_list	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        module_list = remove_existing_modules(sys.argv[1:])$/;"	v
module_list	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^    module_list = sys.argv[1:]$/;"	v
moo	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^moo = "unicode \\u2713 text in double \\t quotes"$/;"	v
motion	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*motion) (GVJ_t * job, pointf pointer);$/;"	m	struct:gvdevice_callbacks_s	access:public
motion_map_helper	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
move	C:\exVim\graphviz\include\graphviz\types.h	/^	int move;$/;"	m	struct:Agraphinfo_t	access:public
move	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
move_f	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:move_f(...) abort$/;"	f
move_f2	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:move_f2() abort$/;"	f
move_to_win	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
move_to_winpos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
msg	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtflock	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned mtflock:1;		\/* move-to-front lock, see above *\/$/;"	m	struct:Agtag_s	access:public
mtype	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
mupad_cmdextversion	C:\exVim\vim74\syntax\mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
must_inline	C:\exVim\graphviz\include\graphviz\usershape.h	/^	boolean must_inline;$/;"	m	struct:usershape_s	access:public
mv_DEtools	C:\exVim\vim74\syntax\maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	C:\exVim\vim74\syntax\maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	C:\exVim\vim74\syntax\maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	C:\exVim\vim74\syntax\maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	C:\exVim\vim74\syntax\maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	C:\exVim\vim74\syntax\maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	C:\exVim\vim74\syntax\maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	C:\exVim\vim74\syntax\maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	C:\exVim\vim74\syntax\maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	C:\exVim\vim74\syntax\maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	C:\exVim\vim74\syntax\maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	C:\exVim\vim74\syntax\maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	C:\exVim\vim74\syntax\maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	C:\exVim\vim74\syntax\maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	C:\exVim\vim74\syntax\maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	C:\exVim\vim74\syntax\maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	C:\exVim\vim74\syntax\maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	C:\exVim\vim74\syntax\maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	C:\exVim\vim74\syntax\maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	C:\exVim\vim74\syntax\maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	C:\exVim\vim74\syntax\maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	C:\exVim\vim74\syntax\maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	C:\exVim\vim74\syntax\maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	C:\exVim\vim74\syntax\maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	C:\exVim\vim74\syntax\maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	C:\exVim\vim74\syntax\maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	C:\exVim\vim74\syntax\maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	C:\exVim\vim74\syntax\maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	C:\exVim\vim74\syntax\maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	C:\exVim\vim74\syntax\maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	C:\exVim\vim74\syntax\maple.vim	/^  let mv_totorder   = 1$/;"	v
mval	C:\exVim\graphviz\include\graphviz\types.h	/^	double mval;$/;"	m	struct:Agnodeinfo_t	access:public
my_import	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def my_import(name):$/;"	f	access:public
my_system	C:\exVim\vimfiles\bundle\vjde\src\my_system.cpp	/^unsigned int my_system(const char *cmd,char *result,int maxLen){$/;"	f	signature:(const char *cmd,char *result,int maxLen)
my_system	C:\exVim\vimfiles\bundle\vjde\src\my_system.cpp	/^unsigned int my_system(const char* pCmd, char* pResult, int size) {$/;"	f	signature:(const char* pCmd, char* pResult, int size)
my_system	C:\exVim\vimfiles\bundle\vjde\src\my_system.h	/^unsigned int my_system(const char *cmd,char *result,int maxLen);$/;"	p	signature:(const char *cmd,char *result,int maxLen)
myarray	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^this.myarray = true;$/;"	r
myarray	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var x = 5, j = new Object(), myarray = ['hello', 'world'];$/;"	r
myfunc	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var myfunc = function(){ console.log("first class function"); };$/;"	r
mypackage	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^package mypackage;$/;"	p
n	C:\exVim\graphviz\include\graphviz\cgraph.h	/^	Dict_t *n, *e, *g;$/;"	m	struct:Agdatadict_s::__anon4	access:public
n	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *n;$/;"	m	struct:Agproto_t	access:public
n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    node_t *n;$/;"	m	union:obj_state_s::__anon25	access:public
n	C:\exVim\graphviz\include\graphviz\types.h	/^	    node_t* n;$/;"	m	struct:inside_t::__anon36	access:public
n	C:\exVim\graphviz\include\graphviz\types.h	/^	int n;			\/* number of nodes in this rank  *\/$/;"	m	struct:rank_t	access:public
n	C:\exVim\vim74\syntax\xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	C:\exVim\vim74\syntax\xpm.vim	/^	 let n = n + 1$/;"	v
n	C:\exVim\vim74\syntax\xpm.vim	/^let n      = 0$/;"	v
n	C:\exVim\vim74\syntax\xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	C:\exVim\vim74\syntax\xpm2.vim	/^	let n = n + 1$/;"	v
n	C:\exVim\vim74\syntax\xpm2.vim	/^  let n      = 0$/;"	v
n	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        write_to.write('--- from %s import %s ---\\n' %$/;"	i
n	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^    write_to.write('--- from %s import * ---\\n' % module_name)$/;"	i
n	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^    write_to.write('--- import %s %s---\\n' % (module_name, module_info))$/;"	i
n_bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_bezier;$/;"	m	struct:__anon63	access:public
n_bezier_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_bezier_pts;$/;"	m	struct:__anon63	access:public
n_cluster	C:\exVim\graphviz\include\graphviz\types.h	/^	int n_cluster;$/;"	m	struct:Agraphinfo_t	access:public
n_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_color;$/;"	m	struct:__anon63	access:public
n_ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_ellipse;$/;"	m	struct:__anon63	access:public
n_flds	C:\exVim\graphviz\include\graphviz\types.h	/^	int n_flds;$/;"	m	struct:field_t	access:public
n_font	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_font;$/;"	m	struct:__anon63	access:public
n_fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_fontchar;$/;"	m	struct:__anon63	access:public
n_gradcolor	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_gradcolor;$/;"	m	struct:__anon63	access:public
n_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *n_id;		\/* the node set indexed by ID *\/$/;"	m	struct:Agraph_s	access:public
n_image	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_image;$/;"	m	struct:__anon63	access:public
n_nodes	C:\exVim\graphviz\include\graphviz\types.h	/^	long n_nodes;$/;"	m	struct:Agraphinfo_t	access:public
n_outgraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    int n_outgraphs;          \/* if GV_USE_OUTGRAPH set, output graphs *\/$/;"	m	struct:__anon30	access:public
n_polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polygon;$/;"	m	struct:__anon63	access:public
n_polygon_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polygon_pts;$/;"	m	struct:__anon63	access:public
n_polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polyline;$/;"	m	struct:__anon63	access:public
n_polyline_pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_polyline_pts;$/;"	m	struct:__anon63	access:public
n_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *n_seq;		\/* the node set in sequence *\/$/;"	m	struct:Agraph_s	access:public
n_stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_stops;$/;"	m	struct:__anon48	access:public
n_stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_stops;$/;"	m	struct:__anon49	access:public
n_style	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_style;$/;"	m	struct:__anon63	access:public
n_text	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int n_text;$/;"	m	struct:__anon63	access:public
name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *name;			\/* attribute's name *\/$/;"	m	struct:Agsym_s	access:public
name	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *name;$/;"	m	struct:Agrec_s	access:public
name	C:\exVim\graphviz\include\graphviz\color.h	/^    char *name;$/;"	m	struct:hsvrgbacolor_t	access:public
name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name, *value;$/;"	m	struct:Agsym_t	access:public
name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agdict_t	access:public
name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agnode_t	access:public
name	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name;$/;"	m	struct:Agraph_t	access:public
name	C:\exVim\graphviz\include\graphviz\gvcext.h	/^	const char *name;$/;"	m	struct:__anon14	access:public
name	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    char* name;$/;"	m	struct:__anon29	access:public
name	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* name;$/;"	m	struct:_PostscriptAlias	access:public
name	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char*  name;$/;"	m	struct:__anon33	access:public
name	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* name;$/;"	m	struct:_PostscriptAlias	access:public
name	C:\exVim\graphviz\include\graphviz\types.h	/^	char *name;		\/* as read from graph file *\/$/;"	m	struct:shape_desc	access:public
name	C:\exVim\graphviz\include\graphviz\types.h	/^	char *name;		\/* port name, if it was explicitly given, otherwise NULL *\/$/;"	m	struct:port	access:public
name	C:\exVim\graphviz\include\graphviz\usershape.h	/^	const char *name;$/;"	m	struct:usershape_s	access:public
name	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* name;$/;"	m	struct:__anon57	access:public
name	C:\exVim\graphviz\include\graphviz\xdot.h	/^    char* name;$/;"	m	struct:__anon58	access:public
name	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:name(login)$/;"	f
name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    const char *name;$/;"	m	struct:sTagFile::__anon65	file:	access:public
name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *name;$/;"	m	struct:sTagFile::__anon67	file:	access:public
name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    vstring name;$/;"	m	struct:sTagFile	file:	access:public
name	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *name;$/;"	m	struct:__anon70::__anon73	access:public
name	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *name;$/;"	m	struct:__anon75	access:public
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String name() {$/;"	m	class:ResultImpl	access:public	signature:()
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String name ;$/;"	f	class:ActionImpl	access:default
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String name;$/;"	f	class:ResultImpl	access:default
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String name() {$/;"	m	class:ResultImpl2	access:public	signature:()
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String name ;$/;"	f	class:ActionImpl2	access:default
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String name;$/;"	f	class:ResultImpl2	access:default
name	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String name() ;$/;"	m	interface:Result	access:public	signature:()
nameComparison	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int nameComparison (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
nameLength	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    size_t nameLength;$/;"	m	struct:sTagFile::__anon65	file:	access:public
nameToClassMap	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    protected MultiValueMap nameToClassMap = new MultiValueMap();$/;"	f	class:ClassPathEntry	access:protected
narrowable	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:narrowable()$/;"	f
nb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf nb;			\/* the node box *\/$/;"	m	struct:pathend_t	access:public
nbox	C:\exVim\graphviz\include\graphviz\types.h	/^	int nbox;		\/* number of subdivisions *\/$/;"	m	struct:path	access:public
ncols	C:\exVim\graphviz\include\graphviz\types.h	/^	int nrows, ncols;$/;"	m	struct:adjmatrix_t	access:public
ndim	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short ndim;$/;"	m	struct:Agraphinfo_t	access:public
neato_nlist	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **neato_nlist;$/;"	m	struct:Agraphinfo_t	access:public
needs_refresh	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^		needs_refresh,$/;"	m	struct:GVJ_s	access:public
neocomplcache#sources#snippets_complete#define	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() "{{{$/;"	f
neocomplete	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^  augroup neocomplete$/;"	a
neocomplete#async_cache#main	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^  function! neocomplete#async_cache#main(argv) "{{{$/;"	f
neocomplete#available_sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#available_sources() "{{{$/;"	f
neocomplete#cache#async_load_from_file	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplete#cache#async_load_from_tags	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#async_load_from_tags(cache_dir, filename, filetype, pattern, mark) "{{{$/;"	f
neocomplete#cache#check_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_cache, is_string) "{{{$/;"	f
neocomplete#cache#check_old_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#encode_name	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#encode_name(cache_dir, filename)$/;"	f
neocomplete#cache#filereadable	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#get_cache_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#get_cache_list(cache_dir, async_cache_list) "{{{$/;"	f
neocomplete#cache#getfilename	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#load_from_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplete#cache#make_directory	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#make_directory(directory) "{{{$/;"	f
neocomplete#cache#readfile	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#save_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplete#cache#writefile	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! neocomplete#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplete#cancel_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#cancel_popup()$/;"	f
neocomplete#close_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#close_popup()$/;"	f
neocomplete#commands#_clean	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_clean() "{{{$/;"	f
neocomplete#commands#_initialize	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_initialize() "{{{$/;"	f
neocomplete#commands#_lock	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_lock() "{{{$/;"	f
neocomplete#commands#_set_file_type	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplete#commands#_toggle_lock	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_toggle_lock() "{{{$/;"	f
neocomplete#commands#_unlock	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! neocomplete#commands#_unlock() "{{{$/;"	f
neocomplete#complete#_check_previous_position	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_check_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_get_complete_pos	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplete#complete#_get_results	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_get_words	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplete#complete#_set_previous_position	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_set_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_set_results_pos	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_set_results_words	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! neocomplete#complete#_set_results_words(sources) "{{{$/;"	f
neocomplete#complete_check	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#complete_check() "{{{$/;"	f
neocomplete#complete_common_string	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#complete_common_string()$/;"	f
neocomplete#context_filetype#filetypes	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^function! neocomplete#context_filetype#filetypes() "{{{$/;"	f
neocomplete#context_filetype#get	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^function! neocomplete#context_filetype#get(filetype) "{{{$/;"	f
neocomplete#context_filetype#set	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^function! neocomplete#context_filetype#set() "{{{$/;"	f
neocomplete#custom#get	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\custom.vim	/^function! neocomplete#custom#get() "{{{$/;"	f
neocomplete#custom#source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\custom.vim	/^function! neocomplete#custom#source(source_name, option_name, value) "{{{$/;"	f
neocomplete#custom_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplete#define_filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#define_filter(filter) "{{{$/;"	f
neocomplete#define_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#define_source(source) "{{{$/;"	f
neocomplete#disable_default_dictionary	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#dup_filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#dup_filter(list) "{{{$/;"	f
neocomplete#escape_match	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#escape_match(str) "{{{$/;"	f
neocomplete#exists_echodoc	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#exists_echodoc() "{{{$/;"	f
neocomplete#filetype_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#filters#converter_abbr#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_abbr.vim	/^function! neocomplete#filters#converter_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_add_paren#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_add_paren.vim	/^function! neocomplete#filters#converter_add_paren#define() "{{{$/;"	f
neocomplete#filters#converter_case#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_case.vim	/^function! neocomplete#filters#converter_case#define() "{{{$/;"	f
neocomplete#filters#converter_delimiter#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_delimiter.vim	/^function! neocomplete#filters#converter_delimiter#define() "{{{$/;"	f
neocomplete#filters#converter_disable_abbr#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_disable_abbr.vim	/^function! neocomplete#filters#converter_disable_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_remove_last_paren#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_last_paren.vim	/^function! neocomplete#filters#converter_remove_last_paren#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#length	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#length(left, right) "{{{$/;"	f
neocomplete#filters#escape	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters.vim	/^function! neocomplete#filters#escape(string) "{{{$/;"	f
neocomplete#filters#fuzzy_escape	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters.vim	/^function! neocomplete#filters#fuzzy_escape(string) "{{{$/;"	f
neocomplete#filters#matcher_fuzzy#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_fuzzy.vim	/^function! neocomplete#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplete#filters#matcher_head#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_head.vim	/^function! neocomplete#filters#matcher_head#define() "{{{$/;"	f
neocomplete#filters#matcher_length#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_length.vim	/^function! neocomplete#filters#matcher_length#define() "{{{$/;"	f
neocomplete#filters#sorter_filename#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_filename.vim	/^function! neocomplete#filters#sorter_filename#define() "{{{$/;"	f
neocomplete#filters#sorter_length#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_length.vim	/^function! neocomplete#filters#sorter_length#define() "{{{$/;"	f
neocomplete#filters#sorter_rank#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_rank.vim	/^function! neocomplete#filters#sorter_rank#define() "{{{$/;"	f
neocomplete#filters#sorter_word#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_word.vim	/^function! neocomplete#filters#sorter_word#define() "{{{$/;"	f
neocomplete#get_context	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_context() "{{{$/;"	f
neocomplete#get_context_filetype	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_context_filetype(...) "{{{$/;"	f
neocomplete#get_cur_text	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_cur_text(...) "{{{$/;"	f
neocomplete#get_current_neocomplete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_current_neocomplete() "{{{$/;"	f
neocomplete#get_data_directory	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_data_directory() "{{{$/;"	f
neocomplete#get_default_matchers	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_default_matchers() "{{{$/;"	f
neocomplete#get_keyword_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_keyword_pattern(...) "{{{$/;"	f
neocomplete#get_keyword_pattern_end	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplete#get_source_filetypes	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#handler#_change_update_time	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_change_update_time() "{{{$/;"	f
neocomplete#handler#_do_auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplete#handler#_on_complete_done	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_complete_done() "{{{$/;"	f
neocomplete#handler#_on_insert_char_pre	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_insert_char_pre() "{{{$/;"	f
neocomplete#handler#_on_insert_enter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_insert_enter() "{{{$/;"	f
neocomplete#handler#_on_insert_leave	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_insert_leave() "{{{$/;"	f
neocomplete#handler#_on_moved_i	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_moved_i() "{{{$/;"	f
neocomplete#handler#_on_text_changed	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_on_text_changed() "{{{$/;"	f
neocomplete#handler#_restore_update_time	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^function! neocomplete#handler#_restore_update_time() "{{{$/;"	f
neocomplete#has_vimproc	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#has_vimproc() "{{{$/;"	f
neocomplete#head_match	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#head_match(checkstr, headstr) "{{{$/;"	f
neocomplete#helper#call_filters	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplete#helper#call_hook	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplete#helper#check_filetype	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#check_filetype(dictionary) "{{{$/;"	f
neocomplete#helper#check_invalid_omnifunc	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplete#helper#clean	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#clean(directory) "{{{$/;"	f
neocomplete#helper#clear_result	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#clear_result() "{{{$/;"	f
neocomplete#helper#complete_check	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#complete_check() "{{{$/;"	f
neocomplete#helper#complete_configure	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#complete_configure() "{{{$/;"	f
neocomplete#helper#filetype_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#helper#get_cur_text	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#get_cur_text(...) "{{{$/;"	f
neocomplete#helper#get_force_omni_complete_pos	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#get_force_omni_complete_pos(cur_text) "{{{$/;"	f
neocomplete#helper#get_source_filetypes	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#helper#get_sources_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#get_sources_list(...) "{{{$/;"	f
neocomplete#helper#get_syn_name	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplete#helper#indent_current_line	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#indent_current_line() "{{{$/;"	f
neocomplete#helper#is_enabled_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#is_enabled_source(source, filetype) "{{{$/;"	f
neocomplete#helper#match_word	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplete#helper#sort_human	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#sort_human(candidates) "{{{$/;"	f
neocomplete#helper#unite_patterns	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^function! neocomplete#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplete#init#_autocmds	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_autocmds() "{{{$/;"	f
neocomplete#init#_context	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_context(context) "{{{$/;"	f
neocomplete#init#_current_neocomplete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_current_neocomplete() "{{{$/;"	f
neocomplete#init#_filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_filter(filter) "{{{$/;"	f
neocomplete#init#_filters	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_filters(names) "{{{$/;"	f
neocomplete#init#_others	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_others() "{{{$/;"	f
neocomplete#init#_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_source(source) "{{{$/;"	f
neocomplete#init#_sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_sources(names) "{{{$/;"	f
neocomplete#init#_variables	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#_variables() "{{{$/;"	f
neocomplete#init#disable	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#disable() "{{{$/;"	f
neocomplete#init#enable	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#enable() "{{{$/;"	f
neocomplete#init#is_enabled	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^function! neocomplete#init#is_enabled() "{{{$/;"	f
neocomplete#initialize	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#initialize() "{{{$/;"	f
neocomplete#is_auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_auto_complete() "{{{$/;"	f
neocomplete#is_auto_select	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_auto_select() "{{{$/;"	f
neocomplete#is_cache_disabled	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_cache_disabled() "{{{$/;"	f
neocomplete#is_enabled	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_enabled() "{{{$/;"	f
neocomplete#is_eskk_convertion	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplete#is_eskk_enabled	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_eskk_enabled() "{{{$/;"	f
neocomplete#is_locked	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_locked(...) "{{{$/;"	f
neocomplete#is_multibyte_input	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplete#is_prefetch	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_prefetch() "{{{$/;"	f
neocomplete#is_text_mode	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_text_mode() "{{{$/;"	f
neocomplete#is_windows	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#is_windows() "{{{$/;"	f
neocomplete#mappings#auto_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#auto_complete() "{{{$/;"	f
neocomplete#mappings#cancel_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#cancel_popup() "{{{$/;"	f
neocomplete#mappings#close_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#close_popup() "{{{$/;"	f
neocomplete#mappings#complete_common_string	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#complete_common_string() "{{{$/;"	f
neocomplete#mappings#define_default_mappings	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#define_default_mappings() "{{{$/;"	f
neocomplete#mappings#fallback	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#fallback(i) "{{{$/;"	f
neocomplete#mappings#manual_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#manual_complete() "{{{$/;"	f
neocomplete#mappings#popup_post	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#popup_post() "{{{$/;"	f
neocomplete#mappings#refresh	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#refresh() "{{{$/;"	f
neocomplete#mappings#smart_close_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#smart_close_popup() "{{{$/;"	f
neocomplete#mappings#start_manual_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplete#mappings#undo_completion	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^function! neocomplete#mappings#undo_completion() "{{{$/;"	f
neocomplete#match_word	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#match_word(...) "{{{$/;"	f
neocomplete#print_debug	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#print_debug(expr) "{{{$/;"	f
neocomplete#print_error	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#print_error(string) "{{{$/;"	f
neocomplete#print_warning	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#print_warning(string) "{{{$/;"	f
neocomplete#set_default_matchers	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#set_default_matchers(matchers) "{{{$/;"	f
neocomplete#set_dictionary_helper	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplete#skip_next_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#skip_next_complete() "{{{$/;"	f
neocomplete#smart_close_popup	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#smart_close_popup()$/;"	f
neocomplete#sources#buffer#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! neocomplete#sources#buffer#define() "{{{$/;"	f
neocomplete#sources#buffer#get_frequencies	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! neocomplete#sources#buffer#get_frequencies() "{{{$/;"	f
neocomplete#sources#buffer#make_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! neocomplete#sources#buffer#make_cache(name) "{{{$/;"	f
neocomplete#sources#buffer#make_cache_current_line	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! neocomplete#sources#buffer#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#dictionary#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! neocomplete#sources#dictionary#define() "{{{$/;"	f
neocomplete#sources#dictionary#get_dictionaries	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! neocomplete#sources#dictionary#get_dictionaries(filetype) "{{{$/;"	f
neocomplete#sources#dictionary#remake_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! neocomplete#sources#dictionary#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#file#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^function! neocomplete#sources#file#define() "{{{$/;"	f
neocomplete#sources#member#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! neocomplete#sources#member#define() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_buffer	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! neocomplete#sources#member#make_cache_current_buffer() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_line	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! neocomplete#sources#member#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#member#remake_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! neocomplete#sources#member#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#neosnippet#define	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplete\sources\neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() "{{{$/;"	f
neocomplete#sources#omni#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! neocomplete#sources#omni#define() "{{{$/;"	f
neocomplete#sources#tag#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! neocomplete#sources#tag#define() "{{{$/;"	f
neocomplete#sources#tag#make_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! neocomplete#sources#tag#make_cache(force) "{{{$/;"	f
neocomplete#start_manual_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#start_manual_complete(...)$/;"	f
neocomplete#system	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#system(...) "{{{$/;"	f
neocomplete#undo_completion	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#undo_completion()$/;"	f
neocomplete#util#convert2list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#convert2list(expr) "{{{$/;"	f
neocomplete#util#disable_default_dictionary	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#util#dup_filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#dup_filter(list) "{{{$/;"	f
neocomplete#util#escape_pattern	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#escape_pattern(...) "{{{$/;"	f
neocomplete#util#expand	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#expand(path) "{{{$/;"	f
neocomplete#util#get_last_status	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#get_last_status(...) "{{{$/;"	f
neocomplete#util#get_vital	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#get_vital() "{{{$/;"	f
neocomplete#util#glob	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#glob(pattern, ...) "{{{$/;"	f
neocomplete#util#has_vimproc	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#has_vimproc() "{{{$/;"	f
neocomplete#util#iconv	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#iconv(...) "{{{$/;"	f
neocomplete#util#is_complete_select	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#is_complete_select() "{{{$/;"	f
neocomplete#util#is_mac	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#is_mac(...) "{{{$/;"	f
neocomplete#util#is_sudo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#is_sudo() "{{{$/;"	f
neocomplete#util#is_text_changed	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#is_text_changed() "{{{$/;"	f
neocomplete#util#is_windows	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#is_windows(...) "{{{$/;"	f
neocomplete#util#join_rtp	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#join_rtp(list) "{{{$/;"	f
neocomplete#util#mb_strlen	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#mb_strlen(...) "{{{$/;"	f
neocomplete#util#set_default	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplete#util#set_default_dictionary	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplete#util#set_dictionary_helper	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#set_dictionary_helper(variable, keys, pattern) "{{{$/;"	f
neocomplete#util#sort_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#sort_by(...) "{{{$/;"	f
neocomplete#util#split_rtp	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#split_rtp(...) "{{{$/;"	f
neocomplete#util#strchars	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#strchars(...) "{{{$/;"	f
neocomplete#util#strwidthpart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#strwidthpart(...) "{{{$/;"	f
neocomplete#util#strwidthpart_reverse	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplete#util#substitute_path_separator	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#substitute_path_separator(...) "{{{$/;"	f
neocomplete#util#system	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#system(...) "{{{$/;"	f
neocomplete#util#truncate	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#truncate(...) "{{{$/;"	f
neocomplete#util#truncate_smart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#truncate_smart(...) "{{{$/;"	f
neocomplete#util#uniq	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#uniq(...) "{{{$/;"	f
neocomplete#util#uniq	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#uniq(list) "{{{$/;"	f
neocomplete#util#wcswidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^function! neocomplete#util#wcswidth(string) "{{{$/;"	f
neocomplete#variables#get_filters	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\variables.vim	/^function! neocomplete#variables#get_filters() "{{{$/;"	f
neocomplete#variables#get_frequencies	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\variables.vim	/^function! neocomplete#variables#get_frequencies() "{{{$/;"	f
neocomplete#variables#get_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\variables.vim	/^function! neocomplete#variables#get_source(name) "{{{$/;"	f
neocomplete#variables#get_sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\variables.vim	/^function! neocomplete#variables#get_sources() "{{{$/;"	f
neocomplete#within_comment	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^function! neocomplete#within_comment() "{{{$/;"	f
neocomplete_source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! s:neocomplete_source.gather_candidates(args, context) "{{{$/;"	f
neocomplete_source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! s:neocomplete_source.hooks.on_init(args, context) "{{{$/;"	f
neosnippet	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^augroup neosnippet "{{{$/;"	a
neosnippet#anonymous	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#anonymous(snippet) "{{{$/;"	f
neosnippet#commands#_clear_markers	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_clear_markers() "{{{$/;"	f
neosnippet#commands#_complete_target_snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_complete_target_snippets(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_edit	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_edit(args) "{{{$/;"	f
neosnippet#commands#_edit_complete	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_edit_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_filetype_complete	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_make_cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_make_cache(filetype) "{{{$/;"	f
neosnippet#commands#_source	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^function! neosnippet#commands#_source(filename) "{{{$/;"	f
neosnippet#expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#expand(trigger) "{{{$/;"	f
neosnippet#expandable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#expandable() "{{{$/;"	f
neosnippet#expandable_or_jumpable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_substitute_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_default_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_substitute_nonzero_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_nonzero_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_substitute_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_substitute_zero_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_zero_pattern() "{{{$/;"	f
neosnippet#get_placeholder_target_marker_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() "{{{$/;"	f
neosnippet#get_runtime_snippets_directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() "{{{$/;"	f
neosnippet#get_snippets_directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_snippets_directory() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_default_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_user_snippets_directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() "{{{$/;"	f
neosnippet#handlers#_all_clear_markers	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^function! neosnippet#handlers#_all_clear_markers() "{{{$/;"	f
neosnippet#handlers#_complete_done	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^function! neosnippet#handlers#_complete_done() "{{{$/;"	f
neosnippet#handlers#_cursor_moved	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^function! neosnippet#handlers#_cursor_moved() "{{{$/;"	f
neosnippet#handlers#_restore_unnamed_register	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^function! neosnippet#handlers#_restore_unnamed_register() "{{{$/;"	f
neosnippet#helpers#delete_selected_text	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#delete_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_completion_snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_completion_snippets() "{{{$/;"	f
neosnippet#helpers#get_cursor_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_cursor_snippet(snippets, cur_text) "{{{$/;"	f
neosnippet#helpers#get_filetype	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_filetype() "{{{$/;"	f
neosnippet#helpers#get_selected_text	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_snippets() "{{{$/;"	f
neosnippet#helpers#get_snippets_directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#get_snippets_directory() "{{{$/;"	f
neosnippet#helpers#substitute_selected_text	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^function! neosnippet#helpers#substitute_selected_text(type, text) "{{{$/;"	f
neosnippet#init#_initialize	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\init.vim	/^function! neosnippet#init#_initialize() "{{{$/;"	f
neosnippet#init#check	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\init.vim	/^function! neosnippet#init#check() "{{{$/;"	f
neosnippet#jumpable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^function! neosnippet#jumpable() "{{{$/;"	f
neosnippet#mappings#_anonymous	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_anonymous(snippet) "{{{$/;"	f
neosnippet#mappings#_clear_select_mode_mappings	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_clear_select_mode_mappings() "{{{$/;"	f
neosnippet#mappings#_expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_expand(trigger) "{{{$/;"	f
neosnippet#mappings#_expand_target	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_expand_target() "{{{$/;"	f
neosnippet#mappings#_expand_target_trigger	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_expand_target_trigger(trigger) "{{{$/;"	f
neosnippet#mappings#_pre_trigger	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_pre_trigger() "{{{$/;"	f
neosnippet#mappings#_register_oneshot_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_register_oneshot_snippet() "{{{$/;"	f
neosnippet#mappings#_trigger	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#_trigger(function) "{{{$/;"	f
neosnippet#mappings#expand_impl	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#expand_impl()$/;"	f
neosnippet#mappings#expand_or_jump_impl	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#expand_or_jump_impl()$/;"	f
neosnippet#mappings#expandable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#expandable() "{{{$/;"	f
neosnippet#mappings#expandable_or_jumpable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#expandable_or_jumpable() "{{{$/;"	f
neosnippet#mappings#jump_impl	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#jump_impl()$/;"	f
neosnippet#mappings#jump_or_expand_impl	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#jump_or_expand_impl()$/;"	f
neosnippet#mappings#jumpable	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! neosnippet#mappings#jumpable() "{{{$/;"	f
neosnippet#parser#_get_completed_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_get_completed_snippet(completed_item, next_text) "{{{$/;"	f
neosnippet#parser#_get_in_paren	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_get_in_paren(key, pair, str) abort "{{{$/;"	f
neosnippet#parser#_initialize_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_initialize_snippet(dict, path, line, pattern, name) "{{{$/;"	f
neosnippet#parser#_initialize_snippet_options	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_initialize_snippet_options() "{{{$/;"	f
neosnippet#parser#_parse_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_parse_snippet(filename, trigger) "{{{$/;"	f
neosnippet#parser#_parse_snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! neosnippet#parser#_parse_snippets(filename) "{{{$/;"	f
neosnippet#util#escape_pattern	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#escape_pattern(...) "{{{$/;"	f
neosnippet#util#expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#expand(path) "{{{$/;"	f
neosnippet#util#get_buffer_config	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#get_buffer_config($/;"	f
neosnippet#util#get_cur_text	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#get_cur_text() "{{{$/;"	f
neosnippet#util#get_last_status	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#get_last_status(...) "{{{$/;"	f
neosnippet#util#get_next_text	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#get_next_text() "{{{$/;"	f
neosnippet#util#get_vital	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#get_vital() "{{{$/;"	f
neosnippet#util#has_vimproc	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#has_vimproc(...) "{{{$/;"	f
neosnippet#util#iconv	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#iconv(...) "{{{$/;"	f
neosnippet#util#is_mac	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#is_mac(...) "{{{$/;"	f
neosnippet#util#is_sudo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#is_sudo() "{{{$/;"	f
neosnippet#util#is_windows	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#is_windows(...) "{{{$/;"	f
neosnippet#util#option2list	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#option2list(str) "{{{$/;"	f
neosnippet#util#parse_options	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#parse_options(args, options_list) "{{{$/;"	f
neosnippet#util#print_error	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#print_error(string) "{{{$/;"	f
neosnippet#util#set_default	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#set_default(var, val, ...)  "{{{$/;"	f
neosnippet#util#set_dictionary_helper	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#set_dictionary_helper(...) "{{{$/;"	f
neosnippet#util#strwidthpart	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#strwidthpart(...) "{{{$/;"	f
neosnippet#util#substitute_path_separator	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#substitute_path_separator(...) "{{{$/;"	f
neosnippet#util#system	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#system(...) "{{{$/;"	f
neosnippet#util#truncate	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^function! neosnippet#util#truncate(...) "{{{$/;"	f
neosnippet#variables#clear_expand_stack	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#clear_expand_stack() "{{{$/;"	f
neosnippet#variables#current_neosnippet	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#current_neosnippet() "{{{$/;"	f
neosnippet#variables#data_dir	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#data_dir() "{{{$/;"	f
neosnippet#variables#expand_stack	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#expand_stack() "{{{$/;"	f
neosnippet#variables#pop_expand_stack	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#pop_expand_stack() "{{{$/;"	f
neosnippet#variables#runtime_dir	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#runtime_dir() "{{{$/;"	f
neosnippet#variables#set_snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#set_snippets(list) "{{{$/;"	f
neosnippet#variables#snippets	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#snippets() "{{{$/;"	f
neosnippet#variables#snippets_dir	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^function! neosnippet#variables#snippets_dir() "{{{$/;"	f
neosnippet#view#_clear_markers	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_clear_markers(expand_info) "{{{$/;"	f
neosnippet#view#_expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_expand(cur_text, col, trigger_name) "{{{$/;"	f
neosnippet#view#_get_snippet_range	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_get_snippet_range(begin_line, begin_patterns, end_line, end_patterns) "{{{$/;"	f
neosnippet#view#_insert	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_insert(snippet, options, cur_text, col) "{{{$/;"	f
neosnippet#view#_jump	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_jump(_, col) "{{{$/;"	f
neosnippet#view#_search_outof_range	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_search_outof_range(col) "{{{$/;"	f
neosnippet#view#_search_snippet_range	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! neosnippet#view#_search_snippet_range(start, end, cnt, ...) "{{{$/;"	f
nerdtree#checkForBrowse	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#version()$/;"	f
nested_app_ebins	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
netrw#Access	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Access(ilist)$/;"	f
netrw#BalloonHelp	C:\exVim\vim74\autoload\netrw.vim	/^ fun! netrw#BalloonHelp()$/;"	f
netrw#Clean	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Clean(sys)$/;"	f
netrw#ErrorMsg	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#ErrorMsg(level,msg,errnum)$/;"	f
netrw#Explore	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Explore(indx,dosplit,style,...)$/;"	f
netrw#FileUrlRead	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#FileUrlRead(fname)$/;"	f
netrw#Lexplore	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Lexplore(...)$/;"	f
netrw#LocalBrowseCheck	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#LocalBrowseCheck(dirname)$/;"	f
netrw#MakeTgt	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#MakeTgt(dname)$/;"	f
netrw#NetRead	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#NetRead(mode,...)$/;"	f
netrw#NetSource	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#NetSource(...)$/;"	f
netrw#NetWrite	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#NetWrite(...) range$/;"	f
netrw#NetrwBrowseX	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#NetrwBrowseX(fname,remote)$/;"	f
netrw#Nread	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Nread(mode,fname)$/;"	f
netrw#Obtain	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#Obtain(islocal,fname,...)$/;"	f
netrw#RFC2396	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#RFC2396(fname)$/;"	f
netrw#RestorePosn	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#RestorePosn(...)$/;"	f
netrw#SavePosn	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#SavePosn()$/;"	f
netrw#SetTreetop	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#SetTreetop(...)$/;"	f
netrw#WinPath	C:\exVim\vim74\autoload\netrw.vim	/^fun! netrw#WinPath(path)$/;"	f
netrwFileHandlers#Invoke	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^fun! netrwFileHandlers#Invoke(exten,fname)$/;"	f
netrwSettings#NetrwSettings	C:\exVim\vim74\autoload\netrwSettings.vim	/^fun! netrwSettings#NetrwSettings()$/;"	f
netrw_gitignore#Hide	C:\exVim\vim74\autoload\netrw_gitignore.vim	/^function! netrw_gitignore#Hide(...)$/;"	f
new	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:new(obj)$/;"	f
new_changelog_entry	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:new_changelog_entry(prefix)$/;"	f
new_overwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
new_winid	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function s:new_winid () $/;"	f
newcache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mixed.vim	/^fu! s:newcache(cwd)$/;"	f
next	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agrec_t *next;$/;"	m	struct:Agrec_s	access:public
next	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVJ_t *next;		\/* linked list of jobs *\/$/;"	m	struct:GVJ_s	access:public
next	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *next, *prev;$/;"	m	struct:Agnodeinfo_t	access:public
next_active	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	GVJ_t *next_active;	\/* linked list of active jobs (e.g. multiple windows) *\/$/;"	m	struct:GVJ_s	access:public
nlist	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *nlist;$/;"	m	struct:Agraphinfo_t	access:public
nlist_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct nlist_t {$/;"	s
nlist_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } nlist_t;$/;"	t	typeref:struct:nlist_t
nlist_t::list	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **list;$/;"	m	struct:nlist_t	access:public
nlist_t::size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:nlist_t	access:public
no_executable	C:\exVim\vim74\vimtutor.bat	/^:no_executable$/;"	l
no_loop	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned no_loop:1;		\/* if no loops *\/$/;"	m	struct:Agdesc_s	access:public
no_write	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned no_write:1;	\/* if a temporary subgraph *\/$/;"	m	struct:Agdesc_s	access:public
nocache	C:\exVim\graphviz\include\graphviz\usershape.h	/^	boolean nocache;$/;"	m	struct:usershape_s	access:public
nocache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^fu! s:nocache()$/;"	f
nocache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\rtscript.vim	/^fu! s:nocache()$/;"	f
node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agnode_t *node;		\/* the endpoint node *\/$/;"	m	struct:Agedge_s	access:public
node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agnode_t *node;		\/* the object *\/$/;"	m	struct:Agsubnode_s	access:public
node	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    } graph, node, edge;$/;"	m	struct:Agcbdisc_s	typeref:struct:Agcbdisc_s::__anon3	access:public
node.Init	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:node.Init()$/;"	f
nodeInduce	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int nodeInduce(Agraph_t *);$/;"	p	signature:(Agraph_t *)
node_dict	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *node_dict;$/;"	m	struct:Agdata_t	access:public
node_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct Agnode_s node_t;$/;"	t	typeref:struct:Agnode_s
node_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
nodeattr	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdict_t *nodeattr;$/;"	m	struct:Agdata_t	access:public
nodequeue	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct nodequeue {$/;"	s
nodequeue	C:\exVim\graphviz\include\graphviz\types.h	/^    } nodequeue;$/;"	t	typeref:struct:nodequeue
nodequeue::head	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
nodequeue::limit	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
nodequeue::store	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
nodequeue::tail	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
nodes	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
nodesep	C:\exVim\graphviz\include\graphviz\types.h	/^	int nodesep, ranksep;$/;"	m	struct:Agraphinfo_t	access:public
nonamecond	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nosort	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:nosplit()$/;"	f
not_supported	C:\exVim\vim74\spell\check_locales.vim	/^let not_supported = []$/;"	v
notag	C:\exVim\vim74\ftplugin\pdf.vim	/^function! s:notag()$/;"	f
notice	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="notice"><H3>Credits and license terms<\/A><\/H3>$/;"	a
np	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf np;		\/* node port *\/$/;"	m	struct:pathend_t	access:public
nqc_minlines	C:\exVim\vim74\syntax\nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	C:\exVim\vim74\syntax\nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
nr2byte	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nrows	C:\exVim\graphviz\include\graphviz\types.h	/^	int nrows, ncols;$/;"	m	struct:adjmatrix_t	access:public
nspans	C:\exVim\graphviz\include\graphviz\types.h	/^		short nspans;$/;"	m	struct:textlabel_t::__anon38::__anon39	access:public
nsplit	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nss	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string[] nss  ;$/;"	f	class:Wangfc.CSParser	file:	access:private
nss	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
nss	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
nstrokes	C:\exVim\graphviz\include\graphviz\types.h	/^	int nstrokes;		\/* number of strokes in array *\/$/;"	m	struct:shape_t	access:public
ntab	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		ntab;	\/* number of hash slots			*\/$/;"	m	struct:_dtdata_s	access:public
ntaction	C:\exVim\vim74\vimtutor.bat	/^:ntaction$/;"	l
numLayers	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int numLayers;		\/* number of layers *\/$/;"	m	struct:GVJ_s	access:public
numPages	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        int	numPages;	\/* number of pages *\/$/;"	m	struct:GVJ_s	access:public
number	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let _number = v:version > 703 ? '1' : ''$/;"	v
numkeys	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int numkeys;$/;"	m	struct:GVJ_s	access:public
nvertices	C:\exVim\graphviz\include\graphviz\types.h	/^	int nvertices;		\/* number of points in the stroke *\/$/;"	m	struct:stroke_t	access:public
nview	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		nview;	\/* number of parent view dictionaries	*\/$/;"	m	struct:_dt_s	access:public
obj	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Void_t*		obj;	\/* user object		*\/$/;"	m	struct:_dthold_s	access:public
obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_state_t *obj;	\/* objects can be nested (at least clusters can)$/;"	m	struct:GVJ_s	access:public
obj_state_s	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    struct obj_state_s {$/;"	s
obj_state_s::__anon25::e	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    edge_t *e;$/;"	m	union:obj_state_s::__anon25	access:public
obj_state_s::__anon25::g	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    graph_t *g;$/;"	m	union:obj_state_s::__anon25	access:public
obj_state_s::__anon25::n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    node_t *n;$/;"	m	union:obj_state_s::__anon25	access:public
obj_state_s::__anon25::sg	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    graph_t *sg;  $/;"	m	union:obj_state_s::__anon25	access:public
obj_state_s::emit_state	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	emit_state_t emit_state; $/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_edgetarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_edgetarget:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_headtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headtarget:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_headtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headtooltip:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_headurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_headurl:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_labeltooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_labeltooltip:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_tailtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailtarget:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_tailtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailtooltip:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_tailurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tailurl:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::explicit_tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int explicit_tooltip:1;$/;"	m	struct:obj_state_s	access:public
obj_state_s::fill	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	fill_type fill;$/;"	m	struct:obj_state_s	access:public
obj_state_s::fillcolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
obj_state_s::gradient_angle	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int gradient_angle;$/;"	m	struct:obj_state_s	access:public
obj_state_s::gradient_frac	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	float gradient_frac;$/;"	m	struct:obj_state_s	access:public
obj_state_s::head_z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::headendurl_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int headendurl_map_n;           \/* head end intersection with node *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::headendurl_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *headendurl_map_p;$/;"	m	struct:obj_state_s	access:public
obj_state_s::headlabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headlabel; $/;"	m	struct:obj_state_s	access:public
obj_state_s::headtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headtarget; $/;"	m	struct:obj_state_s	access:public
obj_state_s::headtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headtooltip; $/;"	m	struct:obj_state_s	access:public
obj_state_s::headurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *headurl; $/;"	m	struct:obj_state_s	access:public
obj_state_s::id	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *id;$/;"	m	struct:obj_state_s	access:public
obj_state_s::label	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *label;$/;"	m	struct:obj_state_s	access:public
obj_state_s::labeltarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labeltarget;$/;"	m	struct:obj_state_s	access:public
obj_state_s::labeltooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labeltooltip;$/;"	m	struct:obj_state_s	access:public
obj_state_s::labelurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *labelurl;$/;"	m	struct:obj_state_s	access:public
obj_state_s::parent	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_state_t *parent;$/;"	m	struct:obj_state_s	access:public
obj_state_s::pen	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pen_type pen;$/;"	m	struct:obj_state_s	access:public
obj_state_s::pencolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
obj_state_s::penwidth	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double penwidth;$/;"	m	struct:obj_state_s	access:public
obj_state_s::rawstyle	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **rawstyle;$/;"	m	struct:obj_state_s	access:public
obj_state_s::stopcolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
obj_state_s::tail_z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::tailendurl_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int tailendurl_map_n;           \/* tail end intersection with node *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::tailendurl_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *tailendurl_map_p;$/;"	m	struct:obj_state_s	access:public
obj_state_s::taillabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *taillabel;$/;"	m	struct:obj_state_s	access:public
obj_state_s::tailtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailtarget;$/;"	m	struct:obj_state_s	access:public
obj_state_s::tailtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailtooltip;$/;"	m	struct:obj_state_s	access:public
obj_state_s::tailurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailurl;$/;"	m	struct:obj_state_s	access:public
obj_state_s::target	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *target;           \/* if GVRENDER_DOES_TARGETS *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tooltip;          \/* if GVRENDER_DOES_TOOLTIPS *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_type type;$/;"	m	struct:obj_state_s	access:public
obj_state_s::u	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	} u;$/;"	m	struct:obj_state_s	typeref:union:obj_state_s::__anon25	access:public
obj_state_s::url	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *url;              \/* if GVRENDER_DOES_MAPS *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::url_bsplinemap_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int *url_bsplinemap_n;          \/* array of url_bsplinemap_poly_n ints $/;"	m	struct:obj_state_s	access:public
obj_state_s::url_bsplinemap_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *url_bsplinemap_p;       \/* all the polygon points *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::url_bsplinemap_poly_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int url_bsplinemap_poly_n;      \/* number of polygons in url bspline map$/;"	m	struct:obj_state_s	access:public
obj_state_s::url_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int url_map_n;                  \/* number of points for url map if GVRENDER_DOES_MAPS *\/$/;"	m	struct:obj_state_s	access:public
obj_state_s::url_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *url_map_p;$/;"	m	struct:obj_state_s	access:public
obj_state_s::url_map_shape	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	map_shape_t url_map_shape; $/;"	m	struct:obj_state_s	access:public
obj_state_s::xlabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *xlabel;$/;"	m	struct:obj_state_s	access:public
obj_state_s::z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
obj_state_t	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef struct obj_state_s obj_state_t;$/;"	t	typeref:struct:obj_state_s
obj_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum {ROOTGRAPH_OBJTYPE, CLUSTER_OBJTYPE, NODE_OBJTYPE, EDGE_OBJTYPE} obj_type;$/;"	t	typeref:enum:__anon23
objtype	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned objtype:2;		\/* see literal tags below *\/$/;"	m	struct:Agtag_s	access:public
odim	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned short odim;$/;"	m	struct:Agraphinfo_t	access:public
off_screen_search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
offset	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
offset	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int offset;$/;"	v
oldpointer	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf oldpointer;	\/* old pointer position in device units *\/$/;"	m	struct:GVJ_s	access:public
onPackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Configure	access:public	signature:(Element pkg)
onPackage	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Simple	access:public	signature:(Element pkg)
onResult	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Configure	access:public	signature:(Element act)
onResult	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Simple	access:public	signature:(Element act)
on_close	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^function s:on_close()$/;"	f
on_close	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function s:on_close()$/;"	f
on_cursor_changed	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^void        on_cursor_changed(GtkTreeView *treeview,$/;"	f	signature:(GtkTreeView *treeview, gpointer user_data)
on_cursor_changed	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^void   on_cursor_changed(GtkTreeView *treeview,$/;"	p	file:	signature:(GtkTreeView *treeview, gpointer user_data)
on_key_release_event	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void on_key_release_event( GtkWidget *widget, GdkEventKey *data );$/;"	p	file:	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^void on_key_release_event( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event2	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void on_key_release_event2( GtkWidget *widget, GdkEventKey *data );$/;"	p	file:	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event2	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^void on_key_release_event2( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, GdkEventKey *data )
on_post_filter	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^    def on_post_filter(self, context):$/;"	m	class:Source	access:public
on_row_selected	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void  on_row_selected(GtkTreeView *treeview,$/;"	f	signature:(GtkTreeView *treeview, GtkTreePath *arg1, GtkTreeViewColumn *arg2, gpointer user_data)
on_row_selected	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^            void  on_row_selected      (GtkTreeView *treeview,$/;"	p	file:	signature:(GtkTreeView *treeview, GtkTreePath *arg1, GtkTreeViewColumn *arg2, gpointer user_data)
on_vim_enter	C:\exVim\vimfiles\bundle\ex-vimentry\plugin\vimentry.vim	/^function! s:on_vim_enter()$/;"	f
oneline_comments	C:\exVim\vim74\syntax\spup.vim	/^    let oneline_comments = 2$/;"	v
onstack	C:\exVim\graphviz\include\graphviz\types.h	/^	char node_type, mark, onstack;$/;"	m	struct:Agnodeinfo_t	access:public
op	C:\exVim\graphviz\bin\exparse.h	/^	int		op;$/;"	m	union:EXSTYPE	access:public
open	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*open) (Agdisc_t*);	\/* independent of other resources *\/$/;"	m	struct:Agmemdisc_s	access:public
open	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*open) (Agraph_t * g, Agdisc_t*);	\/* associated with a graph *\/$/;"	m	struct:Agiddisc_s	access:public
open	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
openExplorer	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
open_changelog	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:open_changelog()$/;"	f
opened	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		int opened;$/;"	m	struct:__anon70::__anon71	access:public
openfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
opfunc	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:opfunc2(arg)$/;"	f
ops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_op* ops;$/;"	m	struct:__anon62	access:public
option	C:\exVim\graphviz\include\graphviz\types.h	/^	int option;		\/* ROUNDED, DIAGONAL corners, etc. *\/$/;"	m	struct:polygon_t	access:public
optionalblock	C:\exVim\vim74\indent\cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^options = {}$/;"	r
options	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  options = {};$/;"	r
opts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:opts(...)$/;"	f
optwin	C:\exVim\vim74\optwin.vim	/^augroup optwin$/;"	a
or	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:or(xs) abort$/;"	f
or	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:or(xs) abort$/;"	f
or	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:or(xs) abort$/;"	f
order	C:\exVim\graphviz\include\graphviz\types.h	/^	int rank, order;	\/* initially, order = 1 for ordered edges *\/$/;"	m	struct:Agnodeinfo_t	access:public
order	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char order;	\/* for mincross *\/$/;"	m	struct:port	access:public
orientation	C:\exVim\graphviz\include\graphviz\types.h	/^	double orientation;	\/* orientation of shape (+ve degrees) *\/$/;"	m	struct:polygon_t	access:public
origin	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
os	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^import os$/;"	i
os	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^import os$/;"	i
os	C:\exVim\vimfiles\py-support\walkpath.py	/^import os$/;"	i
os	C:\exVim\vimfiles\py-support\walkpath.py	/^import os.path$/;"	i
other	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
other_mf_macros	C:\exVim\vim74\syntax\mf.vim	/^  let other_mf_macros = 1 " Set this to '0' if your code gets too colourful$/;"	v
other_mf_macros	C:\exVim\vim74\syntax\mp.vim	/^let other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
other_mp_macros	C:\exVim\vim74\syntax\mp.vim	/^  let other_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
out	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agedge_t out, in;$/;"	m	struct:Agedgepair_s	access:public
out	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    gvprwr out;               \/* write function for stdout *\/$/;"	m	struct:__anon30	access:public
out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist in, out, flat_out, flat_in, other;$/;"	m	struct:Agnodeinfo_t	access:public
out_id	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_id, *out_id;	\/* by node\/ID for random access *\/$/;"	m	struct:Agsubnode_s	access:public
out_seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t *in_seq, *out_seq;	\/* by node\/sequence for serial access *\/$/;"	m	struct:Agsubnode_s	access:public
outedges	C:\exVim\graphviz\include\graphviz\graph.h	/^	Dict_t *nodes, *inedges, *outedges;$/;"	m	struct:Agraph_t	access:public
outgraphs	C:\exVim\graphviz\include\graphviz\gvpr.h	/^    Agraph_t** outgraphs;$/;"	m	struct:__anon30	access:public
outleaf	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *inleaf, *outleaf;$/;"	m	struct:Agnodeinfo_t	access:public
output_data	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *output_data;$/;"	m	struct:GVJ_s	access:public
output_data_allocated	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned int output_data_allocated;$/;"	m	struct:GVJ_s	access:public
output_data_position	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	unsigned int output_data_position;$/;"	m	struct:GVJ_s	access:public
output_file	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	FILE *output_file;$/;"	m	struct:GVJ_s	access:public
output_filename	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *output_filename;$/;"	m	struct:GVJ_s	access:public
output_lang	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int output_lang;$/;"	m	struct:GVJ_s	access:public
output_langname	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *output_langname;$/;"	m	struct:GVJ_s	access:public
overwin.choose_prompt	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
overwin.gather_poses_overwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
overwin.pattern	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
overwin.restore_options	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
overwin.select_winpos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
overwin.set_options	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
p	C:\exVim\graphviz\include\graphviz\types.h	/^	    pointf* p;$/;"	m	struct:inside_t::__anon35	access:public
p	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf p;		\/* aiming point relative to node center *\/$/;"	m	struct:port	access:public
p	C:\exVim\vim74\macros\less.vim	/^map p %$/;"	m
packGraphs	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int packGraphs(int, Agraph_t **, Agraph_t *, pack_info *);$/;"	p	signature:(int, Agraph_t **, Agraph_t *, pack_info *)
packRects	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int packRects(int ng, boxf* bbs, pack_info* pinfo);$/;"	p	signature:(int ng, boxf* bbs, pack_info* pinfo)
packSubgraphs	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int packSubgraphs(int, Agraph_t **, Agraph_t *, pack_info *);$/;"	p	signature:(int, Agraph_t **, Agraph_t *, pack_info *)
pack_graph	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int pack_graph(int ng, Agraph_t** gs, Agraph_t* root, boolean* fixed);$/;"	p	signature:(int ng, Agraph_t** gs, Agraph_t* root, boolean* fixed)
pack_info	C:\exVim\graphviz\include\graphviz\pack.h	/^    } pack_info;$/;"	t	typeref:struct:__anon32
pack_mode	C:\exVim\graphviz\include\graphviz\pack.h	/^    typedef enum { l_undef, l_clust, l_node, l_graph, l_array, l_aspect } pack_mode;$/;"	t	typeref:enum:__anon31
packagename	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	char *packagename;    \/* used when this plugin is builtin and has$/;"	m	struct:__anon28	access:public
packval_t	C:\exVim\graphviz\include\graphviz\pack.h	/^typedef unsigned int packval_t;$/;"	t
pad	C:\exVim\graphviz\include\graphviz\graph.h	/^	int pad:4;$/;"	m	struct:Agnode_t	access:public
pad	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  pad;		\/* padding around bb - graph units *\/$/;"	m	struct:GVJ_s	access:public
pad	C:\exVim\graphviz\include\graphviz\types.h	/^	double pad[1];$/;"	m	struct:Agnodeinfo_t	access:public
pad_between_letters	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
page	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf page;$/;"	m	struct:layout_t	access:public
pageBoundingBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	box     pageBoundingBox;\/* rotated boundingBox - device units *\/$/;"	m	struct:GVJ_s	access:public
pageBox	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	boxf	pageBox;	\/* current page in graph units *\/$/;"	m	struct:GVJ_s	access:public
pageSize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf	pageSize;	\/* page size in graph units *\/$/;"	m	struct:GVJ_s	access:public
pagesArrayElem	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayElem; \/* 2D coord of current page - 0,0 based *\/$/;"	m	struct:GVJ_s	access:public
pagesArrayFirst	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayFirst;\/* 2D starting corner in *\/$/;"	m	struct:GVJ_s	access:public
pagesArrayMajor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayMajor;\/* 2D major increment *\/$/;"	m	struct:GVJ_s	access:public
pagesArrayMinor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point	pagesArrayMinor;\/* 2D minor increment *\/$/;"	m	struct:GVJ_s	access:public
pagesArraySize	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	point 	pagesArraySize; \/* 2D size of page array *\/$/;"	m	struct:GVJ_s	access:public
paintX	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int paintX=2;$/;"	v
paintY	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int paintY=0;$/;"	v
panel.Hide	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:panel.Hide()$/;"	f
panel.Init	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:panel.Init()$/;"	f
panel.IsVisible	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:panel.IsVisible()$/;"	f
panel.SetFocus	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:panel.SetFocus()$/;"	f
par	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *par;$/;"	m	struct:Agnodeinfo_t	access:public
paramSkip	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int paramSkip;$/;"	v
params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ActionImpl	access:public	signature:()
params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ResultImpl	access:public	signature:()
params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ActionImpl2	access:public	signature:()
params	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ResultImpl2	access:public	signature:()
parent	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *parent, *root;	\/* subgraphs - ancestors *\/$/;"	m	struct:Agraph_s	access:public
parent	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_state_t *parent;$/;"	m	struct:obj_state_s	access:public
parent	C:\exVim\graphviz\include\graphviz\types.h	/^	graph_t *parent;        \/* containing cluster (not parent subgraph) *\/$/;"	m	struct:Agraphinfo_t	access:public
parse	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! s:parse(snippets_file) "{{{$/;"	f
parse	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:parse(highlight)$/;"	f
parse	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def parse(input) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
parse	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_xml_cfu.rb	/^		def parse(input_i) #{{{3$/;"	f	class:Vjde.DTD_Parser
parseExtensionFields	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void parseExtensionFields (tagFile *const file, tagEntry *const entry,$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry, char *const string)
parsePackModeInfo	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern pack_mode parsePackModeInfo(char* p, pack_mode dflt, pack_info* pinfo);$/;"	p	signature:(char* p, pack_mode dflt, pack_info* pinfo)
parseTagLine	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void parseTagLine (tagFile *file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *file, tagEntry *const entry)
parseXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern xdot* parseXDot (char*);$/;"	p	signature:(char*)
parseXDotColor	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern char* parseXDotColor (char* cp, xdot_color* clr);$/;"	p	signature:(char* cp, xdot_color* clr)
parseXDotF	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern xdot* parseXDotF (char*, drawfunc_t opfns[], int sz);$/;"	p	signature:(char*, drawfunc_t opfns[], int sz)
parseXDotFOn	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern xdot* parseXDotFOn (char*, drawfunc_t opfns[], int sz, xdot*);$/;"	p	signature:(char*, drawfunc_t opfns[], int sz, xdot*)
parse_attr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def parse_attr( line)$/;"	f	class:Vjde.VjdeDefLoader
parse_lhs	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
parse_lhs_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
parse_name	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:parse_options(opts)$/;"	f
parse_snippet_name	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! s:parse_snippet_name(snippets_file, line, linenr, dup_check) "{{{$/;"	f
parse_tag	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_html_cfu.rb	/^		def parse_tag ( name,children,parent,attris) #{{{3$/;"	f	class:Vjde.VjdeDefLoader
parse_to_name	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
parseline	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:parseline(line)$/;"	f
parser	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^parser = new(less.Parser) options$/;"	r
parser	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.js	/^  parser = new less.Parser(options);$/;"	r
partial	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    short partial;$/;"	m	struct:sTagFile::__anon65	file:	access:public
partition	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:partition(f, xs) abort$/;"	f
parts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
passwd_field	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:passwd_field(line, field)$/;"	f
paste#Paste	C:\exVim\vim74\autoload\paste.vim	/^  func! paste#Paste()$/;"	f
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd = {'n': ":call paste#Paste()<CR>"}$/;"	v
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd = {'n': "\\"=@+.'xy'<CR>gPFx\\"_2x"}$/;"	v
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<BS><Esc>' . paste#paste_cmd['n'] . 'gi'$/;"	v
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<Esc>' . paste#paste_cmd['n'] . '"_s'$/;"	v
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>' . paste#paste_cmd['n']$/;"	v
paste#paste_cmd	C:\exVim\vim74\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>gix<Esc>' . paste#paste_cmd['n'] . '"_x'$/;"	v
path	C:\exVim\graphviz\include\graphviz\types.h	/^	Ppolyline_t path;$/;"	m	struct:Agedgeinfo_t	access:public
path	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct path {	\/* internal specification for an edge spline *\/$/;"	s
path	C:\exVim\graphviz\include\graphviz\types.h	/^    } path;$/;"	t	typeref:struct:path
path	C:\exVim\vimfiles\py-support\walkpath.py	/^import os.path$/;"	i
path2directory	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path::boxes	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf *boxes;		\/* rectangular regions of subdivision *\/$/;"	m	struct:path	access:public
path::data	C:\exVim\graphviz\include\graphviz\types.h	/^	void *data;$/;"	m	struct:path	access:public
path::end	C:\exVim\graphviz\include\graphviz\types.h	/^	port start, end;$/;"	m	struct:path	access:public
path::nbox	C:\exVim\graphviz\include\graphviz\types.h	/^	int nbox;		\/* number of subdivisions *\/$/;"	m	struct:path	access:public
path::start	C:\exVim\graphviz\include\graphviz\types.h	/^	port start, end;$/;"	m	struct:path	access:public
pathend_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct pathend_t {$/;"	s
pathend_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } pathend_t;$/;"	t	typeref:struct:pathend_t
pathend_t::boxes	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf boxes[20];$/;"	m	struct:pathend_t	access:public
pathend_t::boxn	C:\exVim\graphviz\include\graphviz\types.h	/^	int boxn;$/;"	m	struct:pathend_t	access:public
pathend_t::nb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf nb;			\/* the node box *\/$/;"	m	struct:pathend_t	access:public
pathend_t::np	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf np;		\/* node port *\/$/;"	m	struct:pathend_t	access:public
pathend_t::sidemask	C:\exVim\graphviz\include\graphviz\types.h	/^	int sidemask;$/;"	m	struct:pathend_t	access:public
paths	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\less-lint.coffee	/^            options.paths = match[2].split(if os.type().match(\/Windows\/) then ';' else ':')$/;"	r
paths	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String paths;$/;"	f	class:Document	access:default
pathshorten	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pattern	C:\exVim\vim74\syntax\cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *pattern;$/;"	m	struct:__anon75::__anon76	access:public
pboxfn	C:\exVim\graphviz\include\graphviz\types.h	/^	int (*pboxfn)(node_t* n, port* p, int side, boxf rv[], int *kptr); \/* finds box path to reach port *\/$/;"	m	struct:shape_functions	access:public
pccomps	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern Agraph_t **pccomps(Agraph_t *, int *, char *, boolean *);$/;"	p	signature:(Agraph_t *, int *, char *, boolean *)
pen	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pen_type pen;$/;"	m	struct:obj_state_s	access:public
pen_type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^    typedef enum { PEN_NONE, PEN_DASHED, PEN_DOTTED, PEN_SOLID } pen_type;$/;"	t	typeref:enum:__anon15
pencolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
penwidth	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double penwidth;$/;"	m	struct:obj_state_s	access:public
peripheries	C:\exVim\graphviz\include\graphviz\types.h	/^	int peripheries;	\/* number of periphery lines *\/$/;"	m	struct:polygon_t	access:public
perlpath	C:\exVim\vim74\ftplugin\perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl6.vim	/^                let perlpath = system("perl6 -e  '@*INC.join(q\/,\/).say'")$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl6.vim	/^                let perlpath = system('perl6 -e  "@*INC.join(q\/,\/).say"')$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl6.vim	/^            let perlpath = ".,,"$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl6.vim	/^            let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	C:\exVim\vim74\ftplugin\perl6.vim	/^        let perlpath = ".,,"$/;"	v
permutations	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permute_suffixes	C:\exVim\vim74\syntax\hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
pfmain_syntax_init	C:\exVim\vim74\syntax\pfmain.vim	/^		let pfmain_syntax_init = 1$/;"	v
php_alt_assignByReference	C:\exVim\vim74\syntax\php.vim	/^    let php_alt_assignByReference = 1$/;"	v
php_alt_comparisons	C:\exVim\vim74\syntax\php.vim	/^    let php_alt_comparisons = 1$/;"	v
php_parent_error_close	C:\exVim\vim74\syntax\php.vim	/^  let php_parent_error_close=1$/;"	v
php_parent_error_open	C:\exVim\vim74\syntax\php.vim	/^  let php_parent_error_open=1$/;"	v
php_special_functions	C:\exVim\vim74\syntax\php.vim	/^    let php_special_functions = 1$/;"	v
php_sync_method	C:\exVim\vim74\indent\php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	C:\exVim\vim74\syntax\php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	C:\exVim\vim74\syntax\php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#ClearCachedClassContents	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#ClearCachedClassContents(full_file_path) " {{{$/;"	f
phpcomplete#CompareCompletionRow	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompareCompletionRow(i1, i2) " {{{$/;"	f
phpcomplete#CompleteBuiltInClass	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteBuiltInClass(context, classname, base) " {{{$/;"	f
phpcomplete#CompleteClassName	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteClassName(base, kinds, current_namespace, imports) " {{{$/;"	f
phpcomplete#CompleteGeneral	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteGeneral(base, current_namespace, imports) " {{{$/;"	f
phpcomplete#CompletePHP	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base) " {{{$/;"	f
phpcomplete#CompleteUnknownClass	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteUnknownClass(base, context) " {{{$/;"	f
phpcomplete#CompleteUse	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteUse(base) " {{{$/;"	f
phpcomplete#CompleteUserClass	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteUserClass(context, base, sccontent, visibility) " {{{$/;"	f
phpcomplete#CompleteVariable	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#CompleteVariable(base) " {{{$/;"	f
phpcomplete#EvaluateModifiers	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#EvaluateModifiers(modifiers, required_modifiers, prohibited_modifiers) " {{{$/;"	f
phpcomplete#ExpandClassName	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#ExpandClassName(classname, current_namespace, imports) " {{{$/;"	f
phpcomplete#FormatDocBlock	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#FormatDocBlock(info) " {{{$/;"	f
phpcomplete#GenerateBuiltinClassStub	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GenerateBuiltinClassStub(class_info) " {{{$/;"	f
phpcomplete#GetCachedClassContents	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetCachedClassContents(classlocation, class_name) " {{{$/;"	f
phpcomplete#GetCallChainReturnType	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetCallChainReturnType(classname_candidate, class_candidate_namespace, imports, methodstack) " {{{$/;"	f
phpcomplete#GetClassContents	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassContents(classlocation, class_name) " {{{$/;"	f
phpcomplete#GetClassContentsStructure	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassContentsStructure(file_path, file_lines, class_name) " {{{$/;"	f
phpcomplete#GetClassLocation	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname, namespace) " {{{$/;"	f
phpcomplete#GetClassName	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassName(start_line, context, current_namespace, imports) " {{{$/;"	f
phpcomplete#GetCurrentFunctionBoundaries	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetCurrentFunctionBoundaries() " {{{$/;"	f
phpcomplete#GetCurrentInstruction	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetCurrentInstruction(line_number, col_number, phpbegin) " {{{$/;"	f
phpcomplete#GetCurrentNameSpace	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetCurrentNameSpace(file_lines) " {{{$/;"	f
phpcomplete#GetDocBlock	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetDocBlock(sccontent, search) " {{{$/;"	f
phpcomplete#GetFunctionLocation	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetFunctionLocation(function_name, namespace) " {{{$/;"	f
phpcomplete#GetMethodStack	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetMethodStack(line) " {{{$/;"	f
phpcomplete#GetTaglist	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetTaglist(pattern) " {{{$/;"	f
phpcomplete#GetTypeFromDocBlockParam	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#GetTypeFromDocBlockParam(docblock_type) " {{{$/;"	f
phpcomplete#LoadData	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f
phpcomplete#ParseDocBlock	C:\exVim\vim74\autoload\phpcomplete.vim	/^function! phpcomplete#ParseDocBlock(docblock) " {{{$/;"	f
pht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double pht1, pht2;	\/* as above, but only primitive nodes   *\/$/;"	m	struct:rank_t	access:public
pht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double pht1, pht2;	\/* as above, but only primitive nodes   *\/$/;"	m	struct:rank_t	access:public
pinned	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char pinned;$/;"	m	struct:Agnodeinfo_t	access:public
plain_mf_macros	C:\exVim\vim74\syntax\mf.vim	/^  let plain_mf_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plain_mf_macros	C:\exVim\vim74\syntax\mp.vim	/^let plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
plain_mp_macros	C:\exVim\vim74\syntax\mp.vim	/^  let plain_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
pn	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	int pn;$/;"	m	struct:Ppoly_t	access:public
point	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { int x, y; } point;$/;"	t	typeref:struct:__anon8
pointer	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf pointer;		\/* pointer position in device units *\/$/;"	m	struct:GVJ_s	access:public
pointf	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	t	typeref:struct:pointf_s
pointf_s	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	s
pointf_s::x	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	m	struct:pointf_s	access:public
pointf_s::y	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	m	struct:pointf_s	access:public
points	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<A NAME="points"><\/A>$/;"	a
polecenia	C:\exVim\vim74\tutor\tutor.pl	/^  polecenia:$/;"	l
polygon	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*polygon) (GVJ_t * job, pointf * A, int n, int filled);$/;"	m	struct:gvrender_engine_s	access:public
polygon	C:\exVim\graphviz\include\graphviz\types.h	/^	polygon_t *polygon;	\/* base polygon info *\/$/;"	m	struct:shape_desc	access:public
polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline polygon;   \/* xd_filled_polygon, xd_unfilled_polygon *\/$/;"	m	union:_xdot_op::__anon61	access:public
polygon	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME=polygon>Polygon-based Nodes<\/A><\/H2>$/;"	a
polygon_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct polygon_t {	\/* mutable shape information for a node *\/$/;"	s
polygon_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } polygon_t;$/;"	t	typeref:struct:polygon_t
polygon_t::distortion	C:\exVim\graphviz\include\graphviz\types.h	/^	double distortion;	\/* distortion factor - as in trapezium *\/$/;"	m	struct:polygon_t	access:public
polygon_t::option	C:\exVim\graphviz\include\graphviz\types.h	/^	int option;		\/* ROUNDED, DIAGONAL corners, etc. *\/$/;"	m	struct:polygon_t	access:public
polygon_t::orientation	C:\exVim\graphviz\include\graphviz\types.h	/^	double orientation;	\/* orientation of shape (+ve degrees) *\/$/;"	m	struct:polygon_t	access:public
polygon_t::peripheries	C:\exVim\graphviz\include\graphviz\types.h	/^	int peripheries;	\/* number of periphery lines *\/$/;"	m	struct:polygon_t	access:public
polygon_t::regular	C:\exVim\graphviz\include\graphviz\types.h	/^	int regular;		\/* true for symmetric shapes *\/$/;"	m	struct:polygon_t	access:public
polygon_t::sides	C:\exVim\graphviz\include\graphviz\types.h	/^	int sides;		\/* number of sides *\/$/;"	m	struct:polygon_t	access:public
polygon_t::skew	C:\exVim\graphviz\include\graphviz\types.h	/^	double skew;		\/* skew factor - as in parallelogram *\/$/;"	m	struct:polygon_t	access:public
polygon_t::vertices	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *vertices;	\/* array of vertex points *\/$/;"	m	struct:polygon_t	access:public
polyline	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*polyline) (GVJ_t * job, pointf * A, int n);$/;"	m	struct:gvrender_engine_s	access:public
polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_polyline polyline;  \/* xd_polyline *\/$/;"	m	union:_xdot_op::__anon61	access:public
pop	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:pop(list) abort$/;"	f
pop	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:pop(list) abort$/;"	f
pop	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:pop(list) abort$/;"	f
port	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct port {	\/* internal edge endpoint specification *\/$/;"	s
port	C:\exVim\graphviz\include\graphviz\types.h	/^    } port;$/;"	t	typeref:struct:port
port::bp	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf *bp;		\/* if not null, points to bbox of $/;"	m	struct:port	access:public
port::clip	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean clip;           \/* if true, clip end to node\/port shape *\/$/;"	m	struct:port	access:public
port::constrained	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean	constrained;    \/* if true, constraints such as theta are set *\/$/;"	m	struct:port	access:public
port::defined	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean	defined;        \/* if true, edge has port info at this end *\/$/;"	m	struct:port	access:public
port::dyna	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean dyna;           \/* if true, assign compass point dynamically *\/$/;"	m	struct:port	access:public
port::name	C:\exVim\graphviz\include\graphviz\types.h	/^	char *name;		\/* port name, if it was explicitly given, otherwise NULL *\/$/;"	m	struct:port	access:public
port::order	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char order;	\/* for mincross *\/$/;"	m	struct:port	access:public
port::p	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf p;		\/* aiming point relative to node center *\/$/;"	m	struct:port	access:public
port::side	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char side;	\/* if port is on perimeter of node, this$/;"	m	struct:port	access:public
port::theta	C:\exVim\graphviz\include\graphviz\types.h	/^	double theta;		\/* slope in radians *\/$/;"	m	struct:port	access:public
portfn	C:\exVim\graphviz\include\graphviz\types.h	/^	 port(*portfn) (node_t *, char *, char *);	\/* finds aiming point and slope of port *\/$/;"	m	struct:shape_functions	access:public
pos	C:\exVim\graphviz\include\graphviz\types.h	/^	double *pos, dist;$/;"	m	struct:Agnodeinfo_t	access:public
pos	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf pos;   \/* the center of the space for the label *\/$/;"	m	struct:textlabel_t	access:public
pos	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_rect pos;$/;"	m	struct:__anon57	access:public
pos	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    off_t pos; $/;"	m	struct:sTagFile::__anon65	file:	access:public
pos	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    off_t pos;$/;"	m	struct:sTagFile	file:	access:public
pos2hint_to_line2col2hint	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
pos2poskey	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
position_cursor	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:position_cursor()$/;"	f
poskey2pos	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
postscr_level	C:\exVim\vim74\syntax\postscr.vim	/^  let postscr_level = 2$/;"	v
postscript_alias	C:\exVim\graphviz\include\graphviz\textpara.h	/^	PostscriptAlias *postscript_alias; $/;"	m	struct:textpara_t	access:public
postscript_alias	C:\exVim\graphviz\include\graphviz\textspan.h	/^	PostscriptAlias *postscript_alias;$/;"	m	struct:__anon33	access:public
ppwiz_highlight_defs	C:\exVim\vim74\syntax\ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	C:\exVim\vim74\syntax\ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
pre_select_buffer	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	static char pre_select_buffer[256];\/\/user input$/;"	v	file:
prev	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agcbstack_t *prev;		\/* kept in a stack, unlike other disciplines *\/$/;"	m	struct:Agcbstack_s	access:public
prev	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agproto_t *prev;$/;"	m	struct:Agproto_t	access:public
prev	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *next, *prev;$/;"	m	struct:Agnodeinfo_t	access:public
prevgood	C:\exVim\vim74\indent\bst.vim	/^function! s:prevgood(lnum)$/;"	f
prevgood	C:\exVim\vim74\indent\cobol.vim	/^function! s:prevgood(lnum)$/;"	f
preview	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	_DL_EXPORT char* preview(char *str)$/;"	f	signature:(char *str)
previewNodeCurrent	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
preview_color	C:\exVim\vim74\syntax\dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f
preview_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	char* preview_window(vector<string> &v,const string& base,int x,int y,int width,int height)$/;"	f	signature:(vector<string> &v,const string& base,int x,int y,int width,int height)
preview_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	char* preview_window(vector<string> &v,const string& base,int x,int y,int width,int height);$/;"	p	file:	signature:(vector<string> &v,const string& base,int x,int y,int width,int height)
preview_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.hpp	/^char* preview_window(vector<const string> &v,const string& base,int x,int y,int width,int height);$/;"	p	signature:(vector<const string> &v,const string& base,int x,int y,int width,int height)
prevnonblanknoncomment	C:\exVim\vim74\indent\css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	C:\exVim\vim74\indent\ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	C:\exVim\vim74\indent\tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	C:\exVim\vimfiles\bundle\vim-stylus\indent\stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
print	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char *(*print) (void *state, int objtype, unsigned long id);$/;"	m	struct:Agiddisc_s	access:public
print	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned char print;	\/* always print *\/$/;"	m	struct:Agsym_s	access:public
printClass	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printClass(String name) {$/;"	m	class:Completion	file:	access:private	signature:(String name)
printConstructor	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printConstructor(String name, Class[] params) {$/;"	m	class:Completion	file:	access:private	signature:(String name, Class[] params)
printExceptions	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printExceptions(Class[] exceptions) {$/;"	m	class:Completion	file:	access:private	signature:(Class[] exceptions)
printField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^   private static String printField(String leader,String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String leader,String name, String type)
printField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printField(String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String name, String type)
printMethod	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printMethod(String name,$/;"	m	class:Completion	file:	access:private	signature:(String name, String returnType, Class[] args)
printTag	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void printTag (const tagEntry *entry)$/;"	f	file:	signature:(const tagEntry *entry)
printWithinQuotes	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:ClassInfo	file:	access:private	signature:(String item)
printWithinQuotes	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:Completion	file:	access:private	signature:(String item)
print_function	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^from __future__ import print_function$/;"	i
print_function	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\compile.py	/^from __future__ import print_function$/;"	i
print_info	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_struts2.rb	/^		def print_info(src,url)$/;"	f	class:Vjde.Struts2ConfigLoader
printed	C:\exVim\graphviz\include\graphviz\graph.h	/^	unsigned char printed;$/;"	m	struct:Agsym_t	access:public
printkey	C:\exVim\graphviz\include\graphviz\graph.h	/^	int printkey:4;$/;"	m	struct:Agedge_t	access:public
prior_isk	C:\exVim\vim74\syntax\rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
priority	C:\exVim\graphviz\include\graphviz\types.h	/^	int priority;$/;"	m	struct:Agnodeinfo_t	access:public
process	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:process(bang, cmd)$/;"	f
process	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:process(string)$/;"	f
process_delimiter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_delimiter.vim	/^function! s:process_delimiter(context, candidate, delimiter, delim_cnt)$/;"	f
product	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:product(lists) abort$/;"	f
product	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:product(lists) abort$/;"	f
product	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:product(lists) abort$/;"	f
program	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } program;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon67	file:	access:public
program	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} program;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon73	access:public
progressbar.calculate_ticks	C:\exVim\vim74\syntax\2html.vim	/^  func! s:progressbar.calculate_ticks(pb_len)$/;"	f
progressbar.incr	C:\exVim\vim74\syntax\2html.vim	/^  func! s:progressbar.incr( ... )$/;"	f
progressbar.paint	C:\exVim\vim74\syntax\2html.vim	/^  func! s:progressbar.paint()$/;"	f
proj_open_opt	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^let proj_open_opt=' ' $/;"	v
promptToDelBuffer	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	C:\exVim\vimfiles\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
proto	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agproto_t *proto;$/;"	m	struct:Agraph_t	access:public
ps	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	Ppoint_t *ps;$/;"	m	struct:Ppoly_t	access:public
pts	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_point* pts;$/;"	m	struct:__anon55	access:public
push	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:push(list, val) abort$/;"	f
push	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:push(list, val) abort$/;"	f
push	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:push(list, val) abort$/;"	f
put	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^    public Object put(Object key, Object value) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key, Object value)
putGraphs	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern point *putGraphs(int, Agraph_t **, Agraph_t *, pack_info *);$/;"	p	signature:(int, Agraph_t **, Agraph_t *, pack_info *)
putRects	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern point *putRects(int ng, boxf* bbs, pack_info* pinfo);$/;"	p	signature:(int ng, boxf* bbs, pack_info* pinfo)
put_taglist	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function s:put_taglist()$/;"	f
putstr	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    int (*putstr) (void *chan, const char *str);$/;"	m	struct:Agiodisc_s	access:public
python3complete#Complete	C:\exVim\vim74\autoload\python3complete.vim	/^function! python3complete#Complete(findstart, base)$/;"	f
python_space_error_highlight	C:\exVim\vim74\syntax\python.vim	/^  let python_space_error_highlight = 1$/;"	v
python_space_error_highlight	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\syntax\python.vim	/^  let python_space_error_highlight = 1$/;"	v
pythoncomplete#Complete	C:\exVim\vim74\autoload\pythoncomplete.vim	/^function! pythoncomplete#Complete(findstart, base)$/;"	f
q	C:\exVim\vim74\macros\less.vim	/^noremap q :q<CR>$/;"	m
qsort_cmpf	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef int (*qsort_cmpf) (const void *, const void *);$/;"	t
quality	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	int quality;    \/* an arbitrary integer used for ordering plugins of$/;"	m	struct:__anon26	access:public
quantum	C:\exVim\graphviz\include\graphviz\types.h	/^	double quantum;$/;"	m	struct:layout_t	access:public
query	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="query">Query Functions<\/A><\/H3>$/;"	a
query_path	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:query_path(root)$/;"	f
r	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char r, g, b, a;$/;"	m	struct:hsvrgbacolor_t	access:public
r	C:\exVim\graphviz\include\graphviz\types.h	/^	    double* r;$/;"	m	struct:inside_t::__anon35	access:public
r	C:\exVim\vim74\macros\less.vim	/^noremap <script> r <C-L><SID>L$/;"	m
r0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
r1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
rainbow_dash	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^rainbow_dash = Math.sqrt(1*5)$/;"	v
rand	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! s:rand(max) "{{{$/;"	f
rank	C:\exVim\graphviz\include\graphviz\types.h	/^	int rank, order;	\/* initially, order = 1 for ordered edges *\/$/;"	m	struct:Agnodeinfo_t	access:public
rank	C:\exVim\graphviz\include\graphviz\types.h	/^	rank_t *rank;$/;"	m	struct:Agraphinfo_t	access:public
rank_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct rank_t {$/;"	s
rank_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } rank_t;$/;"	t	typeref:struct:rank_t
rank_t::an	C:\exVim\graphviz\include\graphviz\types.h	/^	int an;			\/* globally allocated number of nodes   *\/$/;"	m	struct:rank_t	access:public
rank_t::av	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **av;		\/* allocated list of nodes in rank  *\/$/;"	m	struct:rank_t	access:public
rank_t::cache_nc	C:\exVim\graphviz\include\graphviz\types.h	/^	int cache_nc;		\/* caches number of crossings *\/$/;"	m	struct:rank_t	access:public
rank_t::candidate	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean candidate;	\/* for transpose () *\/$/;"	m	struct:rank_t	access:public
rank_t::flat	C:\exVim\graphviz\include\graphviz\types.h	/^	adjmatrix_t *flat;$/;"	m	struct:rank_t	access:public
rank_t::ht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* height below\/above centerline    *\/$/;"	m	struct:rank_t	access:public
rank_t::ht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht1, ht2;	\/* height below\/above centerline    *\/$/;"	m	struct:rank_t	access:public
rank_t::n	C:\exVim\graphviz\include\graphviz\types.h	/^	int n;			\/* number of nodes in this rank  *\/$/;"	m	struct:rank_t	access:public
rank_t::pht1	C:\exVim\graphviz\include\graphviz\types.h	/^	double pht1, pht2;	\/* as above, but only primitive nodes   *\/$/;"	m	struct:rank_t	access:public
rank_t::pht2	C:\exVim\graphviz\include\graphviz\types.h	/^	double pht1, pht2;	\/* as above, but only primitive nodes   *\/$/;"	m	struct:rank_t	access:public
rank_t::v	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **v;		\/* ordered list of nodes in rank    *\/$/;"	m	struct:rank_t	access:public
rank_t::valid	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean valid;$/;"	m	struct:rank_t	access:public
rankdir	C:\exVim\graphviz\include\graphviz\types.h	/^	int rankdir;$/;"	m	struct:Agraphinfo_t	access:public
rankleader	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *leader, **rankleader;$/;"	m	struct:Agraphinfo_t	access:public
ranksep	C:\exVim\graphviz\include\graphviz\types.h	/^	int nodesep, ranksep;$/;"	m	struct:Agraphinfo_t	access:public
ranktype	C:\exVim\graphviz\include\graphviz\types.h	/^	char ranktype, weight_class;$/;"	m	struct:Agnodeinfo_t	access:public
ratio	C:\exVim\graphviz\include\graphviz\types.h	/^	double ratio;		\/* set only if ratio_kind == R_VALUE *\/$/;"	m	struct:layout_t	access:public
ratio_kind	C:\exVim\graphviz\include\graphviz\types.h	/^	ratio_t ratio_kind;$/;"	m	struct:layout_t	access:public
ratio_t	C:\exVim\graphviz\include\graphviz\types.h	/^	    0, R_VALUE, R_FILL, R_COMPRESS, R_AUTO, R_EXPAND } ratio_t;$/;"	t	typeref:enum:__anon41
rawstyle	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char **rawstyle;$/;"	m	struct:obj_state_s	access:public
re	C:\exVim\vimfiles\bundle\neosnippet.vim\rplugin\python3\deoplete\sources\neosnippet.py	/^import re$/;"	i
re	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^import re$/;"	i
read	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*read) (GVJ_t * job, const char *filename, const char *layout);$/;"	m	struct:gvdevice_callbacks_s	access:public
read	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^        def read(f,fun)$/;"	f	class:Vjde.JavadocReader
read	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	public String read() throws Exception {$/;"	m	class:Document	access:public	signature:()
read	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^  private static byte[] read (InputStream is, int size) throws IOException {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(InputStream is, int size)
readDoc	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^	private String readDoc(StreamTokenizer st) throws Exception$/;"	m	class:SourceDocReader	file:	access:private	signature:(StreamTokenizer st)
readFieldValue	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static const char *readFieldValue ($/;"	f	file:	signature:( const tagEntry *const entry, const char *const key)
readFile	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String readFile(File f) throws IOException {$/;"	m	class:Document	file:	access:private	signature:(File f)
readNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static tagResult readNext (tagFile *const file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry)
readPseudoTags	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void readPseudoTags (tagFile *const file, tagFileInfo *const info)$/;"	f	file:	signature:(tagFile *const file, tagFileInfo *const info)
readSource	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	private String readSource(File f ) throws Exception {$/;"	m	class:Document	file:	access:private	signature:(File f )
readTagLine	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int readTagLine (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
readTagLineRaw	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int readTagLineRaw (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
readTagLineSeek	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int readTagLineSeek (tagFile *const file, const off_t pos)$/;"	f	file:	signature:(tagFile *const file, const off_t pos)
read_gtk	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_doc_reader.rb	/^		def read_gtk(fun1) #{{{3$/;"	f	class:Vjde.CppDocReader
read_int	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	int read_int(string &firstline,char sp,int len,int &curr) $/;"	f	signature:(string &firstline,char sp,int len,int &curr)
readfile	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readfile	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
rebar_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
recall	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:recall() abort$/;"	f
record	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME=record>Record-based Nodes<\/A><\/H2>$/;"	a
record	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
recursiveListFields	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListFields(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
recursiveListInnerClasses	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListInnerClasses(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
recursiveListMethods	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^  private static void recursiveListMethods(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
redraw	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:redraw()$/;"	f
reference	C:\exVim\graphviz\bin\exparse.h	/^	struct Exref_s*	reference;$/;"	m	union:EXSTYPE	typeref:struct:EXSTYPE::Exref_s	access:public
reference	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H2><A NAME="reference">Function and type reference<\/A><\/H2>$/;"	a
reformat	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refresh	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void (*refresh) (GVJ_t * job);$/;"	m	struct:gvdevice_callbacks_s	access:public
refreshCurrent	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:refreshRoot()$/;"	f
regex_extra	C:\exVim\vim74\ftplugin\sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
regex_extra	C:\exVim\vim74\ftplugin\sql.vim	/^        let regex_extra = ''$/;"	v
regexfilter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
registryProperty	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static Atom	registryProperty = None;$/;"	v	file:
regular	C:\exVim\graphviz\include\graphviz\types.h	/^	int regular;		\/* true for symmetric shapes *\/$/;"	m	struct:polygon_t	access:public
reindent	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:reindent() " {{{1$/;"	f
reload	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:reload(d)$/;"	f
reload	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    void reload() throws IOException {$/;"	m	class:ClassPathEntry	access:default	signature:()
remarksigns	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remove_continuation	C:\exVim\vim74\indent\make.vim	/^function s:remove_continuation(line)$/;"	f
remove_duplicates	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def remove_duplicates(seq, keep=()):$/;"	f	access:public
remove_existing_modules	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def remove_existing_modules(module_list):$/;"	f	access:public
remove_last_timeout	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void remove_last_timeout()$/;"	f	signature:()
remove_last_timeout	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void remove_last_timeout();$/;"	p	file:	signature:()
removed	C:\exVim\vim74\syntax\2html.vim	/^	  let removed = 1$/;"	v
removed	C:\exVim\vim74\syntax\2html.vim	/^	let removed = 1$/;"	v
removed	C:\exVim\vim74\syntax\2html.vim	/^    let removed = 0$/;"	v
render	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvplugin_active_render_t render;$/;"	m	struct:GVJ_s	access:public
render	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        void (*render) (GVJ_t * job, const char *format, const char *filename);$/;"	m	struct:gvdevice_callbacks_s	access:public
rep	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t* rep;$/;"	m	struct:Agnodeinfo_t	access:public
repeat	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:repeat(str,count)$/;"	f
replace	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
required	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="required"><H3>What else do I need to use gd?<\/H3><\/A>$/;"	a
res	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	Result[] res;$/;"	f	class:ActionImpl	access:default
res	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	Result[] res;$/;"	f	class:ActionImpl2	access:default
reset_colors	C:\exVim\vim74\syntax\dircolors.vim	/^function! s:reset_colors() abort$/;"	f
reset_hl_vars	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:reset_hl_vars(match_nr) " <<<$/;"	f
resize	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *(*resize) (void *state, void *ptr, size_t old, size_t req);$/;"	m	struct:Agmemdisc_s	access:public
resolve_color	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*resolve_color) (GVJ_t * job, gvcolor_t * color);$/;"	m	struct:gvrender_engine_s	access:public
restore_cursor_state	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
result2Dict	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction action)
result2Dict	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction action)
results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public Result[] results() {$/;"	m	class:ActionImpl	access:public	signature:()
results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public Result[] results() {$/;"	m	class:ActionImpl2	access:public	signature:()
results	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public Result[] results() ;$/;"	m	interface:Action	access:public	signature:()
retval	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\project.vim	/^        let retval=b:fnamelist$/;"	v
reverse	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:reverse(str) abort$/;"	f
rgb	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb_colour	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_level	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_number	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgba	C:\exVim\graphviz\include\graphviz\color.h	/^	unsigned char rgba[4];$/;"	m	union:color_s::__anon7	access:public
rhs_key_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
right	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtlink_t*	right;	\/* right child		*\/$/;"	m	struct:_dtlink_s	access:public
ring	C:\exVim\graphviz\include\graphviz\xdot.h	/^	xdot_radial_grad ring;$/;"	m	union:__anon50::__anon51	access:public
rm_cursor_hl	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^function! s:rm_cursor_hl ()$/;"	f
rmdIsPandoc	C:\exVim\vim74\syntax\rmd.vim	/^  let rmdIsPandoc = 0$/;"	v
rmdIsPandoc	C:\exVim\vim74\syntax\rmd.vim	/^  let rmdIsPandoc = 1$/;"	v
rn	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *ln, *rn;	\/* left, right nodes of bounding box *\/$/;"	m	struct:Agraphinfo_t	access:public
root	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *parent, *root;	\/* subgraphs - ancestors *\/$/;"	m	struct:Agraph_s	access:public
root	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agraph_t *root;$/;"	m	struct:Agnode_s	access:public
root	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraph_t *root;$/;"	m	struct:Agraph_t	access:public
rootDir	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def File.rootDir?(path)$/;"	F	class:Vjde.MyFile
rotation	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int	rotation;	\/* viewport rotation (degrees)  0=portrait, 90=landscape *\/$/;"	m	struct:GVJ_s	access:public
rrggbbaa	C:\exVim\graphviz\include\graphviz\color.h	/^	int rrggbbaa[4];$/;"	m	union:color_s::__anon7	access:public
rtp_add	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! s:rtpath(opts)$/;"	f
ruby_minlines	C:\exVim\vim74\syntax\ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	C:\exVim\vim74\autoload\rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^  def run(self):$/;"	f	function:derpyhooves	access:public
rw	C:\exVim\graphviz\include\graphviz\types.h	/^	double ht, lw, rw;$/;"	m	struct:Agnodeinfo_t	access:public
s	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
s	C:\exVim\graphviz\include\graphviz\types.h	/^	} s;$/;"	m	union:inside_t	typeref:struct:inside_t::__anon36	access:public
s	C:\exVim\vim74\syntax\xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	C:\exVim\vim74\syntax\xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	C:\exVim\vim74\syntax\xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	C:\exVim\vim74\syntax\xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	C:\exVim\vim74\syntax\xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	C:\exVim\vim74\syntax\xpm2.vim	/^    let s = getline(i)$/;"	v
s	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^            if line.find('--- import %s ' % module_name) != -1:$/;"	i
s	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        write_to.write('--- from %s import %s ---\\n' %$/;"	i
s	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^    write_to.write('--- import %s %s---\\n' % (module_name, module_info))$/;"	i
s	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s!1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s!1$/;"	m
s"1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s"1$/;"	m
s#1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s#1$/;"	m
s$1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s$1$/;"	m
s%1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s%1$/;"	m
s&1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s&1$/;"	m
s'1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s'1$/;"	m
s'2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s'2$/;"	m
s'3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s'3$/;"	m
s(1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s(1$/;"	m
s)1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s)1$/;"	m
s**1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s**1$/;"	m
s*1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s*1$/;"	m
s*81	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s*81$/;"	m
s+1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s+1$/;"	m
s,	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s, 1$/;"	m
s,,1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,,1$/;"	m
s,,3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,,3$/;"	m
s,1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,1$/;"	m
s,2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,2$/;"	m
s,3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,3$/;"	m
s,<1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s,<1$/;"	m
s-1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s-1$/;"	m
s-2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s-2$/;"	m
s-3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s-3$/;"	m
s.1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s.1$/;"	m
s.2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s.2$/;"	m
s.3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s.3$/;"	m
s/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s/1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\/1$/;"	m
s/2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\/2$/;"	m
s/3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\/3$/;"	m
s01	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s01$/;"	m
s02	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s02$/;"	m
s03	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s03$/;"	m
s1*22	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s1*22$/;"	m
s11	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s11$/;"	m
s12	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s12$/;"	m
s13	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s13$/;"	m
s21	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s21$/;"	m
s22	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s22$/;"	m
s23	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s23$/;"	m
s31	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s31$/;"	m
s32	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s32$/;"	m
s33	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s33$/;"	m
s41	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s41$/;"	m
s42	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s42$/;"	m
s43	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s43$/;"	m
s51	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s51$/;"	m
s52	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s52$/;"	m
s53	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s53$/;"	m
s61	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s61$/;"	m
s62	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s62$/;"	m
s63	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s63$/;"	m
s71	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s71$/;"	m
s72	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s72$/;"	m
s73	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s73$/;"	m
s8*1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s8*1$/;"	m
s81	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s81$/;"	m
s82	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s82$/;"	m
s83	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s83$/;"	m
s881	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s881$/;"	m
s91	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s91$/;"	m
s92	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s92$/;"	m
s93	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s93$/;"	m
s:1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s:1$/;"	m
s:AdaBlockStart	C:\exVim\vim74\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|project\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:AdaBlockStart	C:\exVim\vim74\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:Aluminium	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Aluminium		= ['#eeeeec', '#d3d7cf', '#babdb6',$/;"	v
s:Aluminium	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Aluminium		= ['#eeeeec', '#d3d7cf', '#babdb6',$/;"	v
s:BEGIN_BLOCK	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BLOCKLEVEL_TAGS	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BRACKET_CONTINUATION	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Background	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Background    = '#212628'$/;"	v
s:Background	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Background    = '#212628'$/;"	v
s:Bookmark	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Butter	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Butter		= ['#fce94f', '#edd400', '#c4a000']$/;"	v
s:Butter	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Butter		= ['#fce94f', '#edd400', '#c4a000']$/;"	v
s:COMPOUND_EXPRESSION	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONCEAL_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:CONCEAL_ID = hlID('Conceal')    | lockvar s:CONCEAL_ID$/;"	v
s:CONTAINED_THEN	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:Cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^let s:Cache = neocomplete#util#get_vital().import('System.Cache')$/;"	v
s:Cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache')$/;"	v
s:Cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache')$/;"	v
s:Chameleon	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Chameleon		= ['#8ae234', '#73d216', '#4e9a06']$/;"	v
s:Chameleon	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Chameleon		= ['#8ae234', '#73d216', '#4e9a06']$/;"	v
s:CharsEscape	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:CharsEscape = '" '$/;"	v
s:CharsEscape	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:CharsEscape = '" \\'$/;"	v
s:Chocolate	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Chocolate		= ['#e9b96e', '#c17d11', '#8f5902']$/;"	v
s:Chocolate	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Chocolate		= ['#e9b96e', '#c17d11', '#8f5902']$/;"	v
s:ColonEnd	C:\exVim\vim74\indent\occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	C:\exVim\vim74\indent\occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	C:\exVim\vim74\indent\occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:ColonStart	C:\exVim\vim74\indent\occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommentLine	C:\exVim\vim74\indent\occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:CompilerTemplate	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^let s:CompilerTemplate = {}$/;"	v
s:Cpath	C:\exVim\vim74\syntax\lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	C:\exVim\vim74\syntax\lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:lex_uses_cpp")? "\/cpp.vim" : "\/c.vim"))$/;"	v
s:Cpath	C:\exVim\vim74\syntax\yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	C:\exVim\vim74\syntax\yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vim"))$/;"	v
s:Creator	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\creator.vim	/^let s:Creator = {}$/;"	v
s:DEFAULT_LEVEL	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DIFF_A_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:DIFF_A_ID  = hlID("DiffAdd")    | lockvar s:DIFF_A_ID$/;"	v
s:DIFF_C_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:DIFF_C_ID  = hlID("DiffChange") | lockvar s:DIFF_C_ID$/;"	v
s:DIFF_D_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:DIFF_D_ID  = hlID("DiffDelete") | lockvar s:DIFF_D_ID$/;"	v
s:DIFF_T_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:DIFF_T_ID  = hlID("DiffText")   | lockvar s:DIFF_T_ID$/;"	v
s:DIRECTION	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:DOT_ACCESS	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EMPTY_TAGS	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:ERROR	C:\exVim\vim74\autoload\netrw.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	C:\exVim\vim74\autoload\vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	C:\exVim\vim74\autoload\zip.vim	/^let s:ERROR          = 2$/;"	v
s:ES	C:\exVim\vim74\indent\vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:EnvSeperator	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:EnvSeperator = ':'$/;"	v
s:EnvSeperator	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:EnvSeperator = ';'$/;"	v
s:Event	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\event.vim	/^let s:Event = {}$/;"	v
s:ExecutableSuffix	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:ExecutableSuffix = ''$/;"	v
s:ExecutableSuffix	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:ExecutableSuffix = '.exe'$/;"	v
s:FALSE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:FALSE = 0$/;"	v
s:FOLDED_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:FOLDED_ID  = hlID("Folded")     | lockvar s:FOLDED_ID$/;"	v
s:FOLD_C_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:FOLD_C_ID  = hlID("FoldColumn") | lockvar s:FOLD_C_ID$/;"	v
s:FUNCTION	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:FirstLevelIndent	C:\exVim\vim74\indent\occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\|VALOF\\|CLAIM\\|FORKING\\)\\>\\|\\(--.*\\)\\@<!\\(\\<PROC\\>\\|??\\|\\<CASE\\>\\s*\\(--.*\\)\\=\\_$\\)'$/;"	v
s:FirstLevelNonColonEndIndent	C:\exVim\vim74\indent\occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:FlagSet	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	C:\exVim\vim74\autoload\ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:Highlight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^	let s:Highlight = s:V.import("Palette.Highlight")$/;"	v
s:Hinter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:Hinter = {$/;"	v
s:HitAHintMotion	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:HtmlEndline	C:\exVim\vim74\syntax\2html.vim	/^  let s:HtmlEndline = '<br' . s:tag_close$/;"	v
s:HtmlEndline	C:\exVim\vim74\syntax\2html.vim	/^let s:HtmlEndline = ''$/;"	v
s:HtmlSpace	C:\exVim\vim74\syntax\2html.vim	/^  let s:HtmlSpace = '\\' . s:LeadingSpace$/;"	v
s:HtmlSpace	C:\exVim\vim74\syntax\2html.vim	/^let s:HtmlSpace = ' '$/;"	v
s:I	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:I      = 0 $/;"	v
s:I	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:I      = 0 $/;"	v
s:IA	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IA     = 7 $/;"	v
s:IA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IA     = 7 $/;"	v
s:IB	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IB     = 10$/;"	v
s:IB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IB     = 10$/;"	v
s:ID	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:ID     = 5 $/;"	v
s:ID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:ID     = 5 $/;"	v
s:IDMY	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IDMY   = 4 $/;"	v
s:IDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IDMY   = 4 $/;"	v
s:IGNORE_ERRORS	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:II	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:II     = 1 $/;"	v
s:II	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:II     = 1 $/;"	v
s:IIB	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IIB    = 11$/;"	v
s:IIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IIB    = 11$/;"	v
s:IIO	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IIO    = 13$/;"	v
s:IIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IIO    = 13$/;"	v
s:IIPOW	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IIPOW  = 17$/;"	v
s:IIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IIPOW  = 17$/;"	v
s:IIR	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IIR    = 15$/;"	v
s:IIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IIR    = 15$/;"	v
s:IIX	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IIX    = 9 $/;"	v
s:IIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IIX    = 9 $/;"	v
s:IM	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IM     = 6 $/;"	v
s:IM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IM     = 6 $/;"	v
s:IMDY	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IMDY   = 2 $/;"	v
s:IMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IMDY   = 2 $/;"	v
s:INLINE_TAGS	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:IO	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IO     = 12$/;"	v
s:IO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IO     = 12$/;"	v
s:IPOW	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IPOW   = 16$/;"	v
s:IPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IPOW   = 16$/;"	v
s:IR	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IR     = 14$/;"	v
s:IR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IR     = 14$/;"	v
s:IX	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IX     = 8 $/;"	v
s:IX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IX     = 8 $/;"	v
s:IYMD	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:IYMD   = 3 $/;"	v
s:IYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:IYMD   = 3 $/;"	v
s:Initialized	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^let s:Initialized = 0$/;"	v
s:KEYWORD_PAIRS	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KeyMap	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\key_map.vim	/^let s:KeyMap = {}$/;"	v
s:LINENR_ID	C:\exVim\vim74\syntax\2html.vim	/^  let s:LINENR_ID  = hlID('LineNr')     | lockvar s:LINENR_ID$/;"	v
s:LeadingSpace	C:\exVim\vim74\syntax\2html.vim	/^  let s:LeadingSpace = s:settings.use_xhtml ? '&#160;' : '&nbsp;'$/;"	v
s:LeadingSpace	C:\exVim\vim74\syntax\2html.vim	/^let s:LeadingSpace = ' '$/;"	v
s:List	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^let s:List = neocomplete#util#get_vital().import('Data.List')$/;"	v
s:MAX_LOOKBACK	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MenuController	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NC	C:\exVim\vim74\indent\vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	C:\exVim\vim74\indent\vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NERDFileNameEscape	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NOTE	C:\exVim\vim74\autoload\netrw.vim	/^ let s:NOTE    = 0$/;"	v
s:NOTE	C:\exVim\vim74\autoload\zip.vim	/^let s:NOTE           = 0$/;"	v
s:Notifier	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\opener.vim	/^let s:Opener = {}$/;"	v
s:Orange	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Orange		= ['#fcaf3e', '#f57900', '#ce5c00']$/;"	v
s:Orange	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Orange		= ['#fcaf3e', '#f57900', '#ce5c00']$/;"	v
s:PHP_startindenttag	C:\exVim\vim74\indent\php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:POSTFIX_CONDITION	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:Path	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^let s:Path = {}$/;"	v
s:PathSeperator	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:PathSeperator = '\/'$/;"	v
s:PathSeperator	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^    let s:PathSeperator = '\\'$/;"	v
s:Plum	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:Plum			= ['#ad7fa8', '#75507b', '#5c3566']$/;"	v
s:Plum	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:Plum			= ['#ad7fa8', '#75507b', '#5c3566']$/;"	v
s:QuickHelp	C:\exVim\vim74\autoload\netrw.vim	/^let s:QuickHelp= ["-:go up dir  D:delete  R:rename  s:sort-by  x:special",$/;"	v
s:RE_ATTRIBUTE	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_ATTRIBUTE='[;|}]'$/;"	v
s:RE_BODY	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_BODY='^body'$/;"	v
s:RE_COMMENT	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_COMMENT='^\\s*[*\/]'$/;"	v
s:RE_ELEM_CHILD	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_ELEM_CHILD='[?+* \\t()|,]'$/;"	v
s:RE_END	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_END='^endt'$/;"	v
s:RE_ENUM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_ENUM='[,; \\t]'$/;"	v
s:RE_LINE	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_LINE =  '\\s*\\(private\\|public\\)*\\s*\\(tag\\)\\s\\+\\([^ \\t<{]\\+\\)\\s*\\([^<{]*\\)\\(<\\?\\s*[^{]*\\){\\(\\(\\s*attr\\s\\+[^;{]*\\s*\\(;\\|{[^\\}]*}\\)\\)*\\)\\s*}'$/;"	v
s:RE_LINE_ENUM	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_LINE_ENUM='\\s*\\(private\\|public\\)*\\s\\+enum\\s*\\([^ \\t]\\+\\)\\s*{\\([^}]*\\)}'$/;"	v
s:RE_PARA	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_PARA='^para'$/;"	v
s:RE_PARA_SPLIT	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_PARA_SPLIT='^para[a-z]*\\s\\+\\(\\w\\+\\)\\(\\s\\+.*\\)*$'$/;"	v
s:RE_PARENT	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_PARENT='[,; \\t<]'$/;"	v
s:RE_SPLIET_ATTR	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:RE_SPLIET_ATTR='[{,; \\t]'$/;"	v
s:RE_TEMPLATE	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_TEMPLATE='^temp'$/;"	v
s:RE_TEMP_SPLIT	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template_tool.vim	/^let s:RE_TEMP_SPLIT='^temp[a-z]*\\s\\+\\(\\w\\+\\)\\(\\s\\+.*\\)*$'$/;"	v
s:RI	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RI     = 18$/;"	v
s:RI	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RI     = 18$/;"	v
s:RIA	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIA    = 25$/;"	v
s:RIA	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIA    = 25$/;"	v
s:RIB	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIB    = 28$/;"	v
s:RIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIB    = 28$/;"	v
s:RID	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RID    = 23$/;"	v
s:RID	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RID    = 23$/;"	v
s:RIDMY	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIDMY  = 22$/;"	v
s:RIDMY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIDMY  = 22$/;"	v
s:RII	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RII    = 19$/;"	v
s:RII	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RII    = 19$/;"	v
s:RIIB	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIIB   = 29$/;"	v
s:RIIB	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIIB   = 29$/;"	v
s:RIIO	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIIO   = 31$/;"	v
s:RIIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIIO   = 31$/;"	v
s:RIIPOW	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIIPOW = 35$/;"	v
s:RIIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIIPOW = 35$/;"	v
s:RIIR	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIIR   = 33$/;"	v
s:RIIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIIR   = 33$/;"	v
s:RIIX	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIIX   = 27$/;"	v
s:RIIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIIX   = 27$/;"	v
s:RIM	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIM    = 24$/;"	v
s:RIM	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIM    = 24$/;"	v
s:RIMDY	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIMDY  = 20$/;"	v
s:RIMDY	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIMDY  = 20$/;"	v
s:RIO	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIO    = 30$/;"	v
s:RIO	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIO    = 30$/;"	v
s:RIPOW	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIPOW  = 34$/;"	v
s:RIPOW	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIPOW  = 34$/;"	v
s:RIR	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIR    = 32$/;"	v
s:RIR	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIR    = 32$/;"	v
s:RIX	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIX    = 26$/;"	v
s:RIX	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIX    = 26$/;"	v
s:RIYMD	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:RIYMD  = 21$/;"	v
s:RIYMD	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:RIYMD  = 21$/;"	v
s:RIndent	C:\exVim\vim74\indent\rhelp.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	C:\exVim\vim74\indent\rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	C:\exVim\vim74\indent\rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	C:\exVim\vim74\indent\rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:ReferenceName	C:\exVim\vim74\syntax\rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\+\\%([_.-][[:alnum:]]\\+\\)*'$/;"	v
s:SINGLE_LINE_ELSE	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SQLBlockEnd	C:\exVim\vim74\indent\sqlanywhere.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	C:\exVim\vim74\indent\sqlanywhere.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SYNTAX_COMMENT	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ScarletRed	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:ScarletRed	= ['#ef2929', '#cc0000', '#a40000']$/;"	v
s:ScarletRed	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:ScarletRed	= ['#ef2929', '#cc0000', '#a40000']$/;"	v
s:SecondLevelIndent	C:\exVim\vim74\indent\occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CASE\\>\\s*\\(--.*\\)\\=\\_$'$/;"	v
s:SecondLevelNonColonEndIndent	C:\exVim\vim74\indent\occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:ShiftWidth	C:\exVim\vim74\indent\html.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:ShiftWidth	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^    let s:ShiftWidth = function('shiftwidth')$/;"	v
s:ShiftWidth	C:\exVim\vimfiles\bundle\vim-coffee-script\indent\coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:SkyBlue	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\two2tango.vim	/^let s:SkyBlue		= ['#729fcf', '#3465a4', '#204a87']$/;"	v
s:SkyBlue	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\two2tango.vim	/^let s:SkyBlue		= ['#729fcf', '#3465a4', '#204a87']$/;"	v
s:Strlen	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:SynPHPMatchGroups	C:\exVim\vim74\indent\php.vim	/^let s:SynPHPMatchGroups = {'phpParent':1, 'Delimiter':1, 'Define':1, 'Storageclass':1, 'StorageClass':1, 'Structure':1, 'Exception':1}$/;"	v
s:TRUE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:TRUE = !0$/;"	v
s:TYPE_DICT	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TYPE_STRING	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TabularCommands	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:TeXIndent	C:\exVim\vim74\indent\rnoweb.vim	/^let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:Tlist_Skip_Refresh	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\ui.vim	/^let s:UI = {}$/;"	v
s:USAGE	C:\exVim\vim74\autoload\vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:V	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^let s:V = vital#of('neocomplete')$/;"	v
s:V	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^let s:V = vital#of('neosnippet')$/;"	v
s:V	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:V = vital#of('easymotion')$/;"	v
s:V	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\overwin.vim	/^let s:V = vital#of('easymotion')$/;"	v
s:VjdeNewFileTypes	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^let s:VjdeNewFileTypes={1:"NewClass",2:"NewClassWithMain",3:"NewInterface"}$/;"	v
s:WARNING	C:\exVim\vim74\autoload\netrw.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	C:\exVim\vim74\autoload\vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	C:\exVim\vim74\autoload\zip.vim	/^let s:WARNING        = 1$/;"	v
s:_DEBUG_DUMP_OPTIONS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_NOTIFIER_TYPES	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_bounder	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
s:_collection	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_delete	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_delete = function(v:version > 704 || (v:version == 704 && has('patch1128')) ? 'delete' : 's:_delete_dumb')$/;"	v
s:_engine	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_float2str	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_function	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_isDebugEnabled	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_neg_collection	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_quit_pre	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_regex	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_running_windows	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_s	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_str2float	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_unify_path_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_wid_base	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_wid_base = 'syntastic_' . getpid() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_wid_pool = 0$/;"	v
s:_width	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:abstract_prototype	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:action_table = {}$/;"	v
s:action_table	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:action_table.neosnippet_source = {$/;"	v
s:add_methods	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^let s:add_methods = []$/;"	v
s:added_lines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let s:added_lines = []$/;"	v
s:added_lines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^let s:added_lines = []$/;"	v
s:adverbs	C:\exVim\vim74\syntax\perl6.vim	/^    let s:adverbs = [$/;"	v
s:after	C:\exVim\vim74\syntax\perl6.vim	/^    let s:after  = "\\\\%(\\\\_s*:!\\\\?\\\\K\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)*\\\\%(([^)]*)\\\\|\\\\[[^\\\\]]*]\\\\|<[^>]*>\\\\|Â«[^Â»]*Â»\\\\|{[^}]*}\\\\)\\\\?\\\\)*\\\\_s*\\\\)\\\\@<="$/;"	v
s:after_keyword	C:\exVim\vim74\syntax\perl6.vim	/^let s:after_keyword = "\\\\)\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)\\\\@!\\""$/;"	v
s:all_marks	C:\exVim\vimfiles\bundle\ex-showmarks\plugin\showmarks.vim	/^let s:all_marks = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.'`^<>[]{}()\\""$/;"	v
s:all_templates	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let s:all_templates={}$/;"	v
s:all_tokens	C:\exVim\vim74\indent\erlang.vim	/^let s:all_tokens = {}$/;"	v
s:allfolds	C:\exVim\vim74\syntax\2html.vim	/^let s:allfolds = []$/;"	v
s:alt_edit_bufnr	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^let s:alt_edit_bufnr = -1$/;"	v
s:alt_edit_bufpos	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\buffer.vim	/^let s:alt_edit_bufpos = []$/;"	v
s:annot_file_list	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
s:ant_cpo_save	C:\exVim\vim74\syntax\ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:appendPos	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:appendPos = 1$/;"	v
s:aqua	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:aqua = "66cccc"$/;"	v
s:archs	C:\exVim\vim74\syntax\debcontrol.vim	/^let s:archs = '\\%(alpha\\|amd64\\|armeb\\|armel\\|armhf\\|arm64\\|avr32\\|hppa\\|i386'$/;"	v
s:args_after	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\stylelint.vim	/^let s:args_after = {$/;"	v
s:ars	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:assert	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	C:\exVim\vimfiles\bundle\neosnippet.vim\test\functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assignment_rx	C:\exVim\vim74\indent\make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:async_dictionary_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^  let s:async_tags_list = {}$/;"	v
s:attributes	C:\exVim\vim74\indent\haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:auEvents	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:auEvents = "BufEnter,InsertLeave,CursorMoved,BufWritePost"$/;"	v
s:autoinstall	C:\exVim\vim74\autoload\getscript.vim	/^  let s:autoinstall= $HOME."\/".s:dotvim$/;"	v
s:autoinstall	C:\exVim\vim74\autoload\getscript.vim	/^  let s:autoinstall= g:GetLatestVimScripts_autoinstalldir"$/;"	v
s:autoinstall	C:\exVim\vim74\autoload\getscript.vim	/^let s:autoinstall= ""$/;"	v
s:autoresetoptions	C:\exVim\vim74\indent\php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	C:\exVim\vim74\indent\php.vim	/^let s:autoresetoptions = 0$/;"	v
s:b	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:b           = ""$/;"	v
s:b	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:back        = s:base03$/;"	v
s:background	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:background = "2d2d2d"$/;"	v
s:base	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^let s:base = {$/;"	v
s:base	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^let s:base = {$/;"	v
s:base	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^let s:base = {}$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:base_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:base_types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:base_types=["void","int","long","float","double","boolean","char","byte"]$/;"	v
s:bb	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:beflet	C:\exVim\vim74\indent\ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:beflet	C:\exVim\vim74\indent\sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|;\\)\\s*$'$/;"	v
s:before	C:\exVim\vim74\syntax\perl6.vim	/^    let s:before = "syn region p6StringQ matchgroup=p6Quote start=\\"\\\\%("$/;"	v
s:before_keyword	C:\exVim\vim74\syntax\perl6.vim	/^let s:before_keyword = " display \\"\\\\%(\\\\k\\\\|\\\\K\\\\@<=[-']\\\\)\\\\@<!\\\\%("$/;"	v
s:better_whitespace_initialized	C:\exVim\vimfiles\bundle\vim-better-whitespace\plugin\better-whitespace.vim	/^let s:better_whitespace_initialized = 0$/;"	v
s:bgc	C:\exVim\vim74\syntax\2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	C:\exVim\vim74\syntax\2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(hlID("Normal"), "bg#", s:whatterm))$/;"	v
s:bins	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^let s:bins = [$/;"	v
s:block_continuation_regex	C:\exVim\vim74\indent\falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	C:\exVim\vim74\indent\falcon.vim	/^let s:block_regex =$/;"	v
s:block_regex	C:\exVim\vim74\indent\json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:blockstart	C:\exVim\vim74\indent\php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|\\%(}\\s*\\)\\?else\\>\\|do\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|trait\\>\\|use\\>\\|interface\\>\\|abstract\\>\\|final\\>\\|try\\>\\|\\%(}\\s*\\)\\=catch\\>\\|\\%(}\\s*\\)\\=finally\\>\\)'$/;"	v
s:blue	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:blue = "6699cc"$/;"	v
s:blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bmenu_wait	C:\exVim\vim74\menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:both	C:\exVim\vim74\syntax\perl6.vim	/^let s:both = [s:infix_a_pattern, s:infix_n_pattern]$/;"	v
s:bracket_continuation_regex	C:\exVim\vim74\indent\falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:brackets	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:brackets = '\\(s*\\([\\s*]\\s\\+\\)\\=\\)'$/;"	v
s:bright	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\php.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\php.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\sgml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\sgml.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\svg.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\svg.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\tcsh.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\tcsh.vim	/^let s:browsefilter = "csh Files (*.csh)\\t*.csh\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vim74\ftplugin\xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer_prototype	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^  let s:buffer_sources = {}$/;"	v
s:bundle	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^let s:bundle = {}$/;"	v
s:byte_pattern	C:\exVim\vim74\syntax\cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:c	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:c_flow_indicator	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_flow_indicator = '[,\\[\\]{}]'$/;"	v
s:c_flow_indicator	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:c_indicator	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_indicator      = '[\\-?:,\\[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_indicator	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_named_tag_handle	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_non_specific_tag	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_alias_node	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_anchor_char = '\\%(\\%([\\n\\r\\uFEFF \\t,\\[\\]{}]\\)\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
s:c_ns_anchor_name	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_name	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_property	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_shorthand_tag	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_ns_tag_property	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_primary_tag_handle	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_secondary_tag_handle	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_tag_handle	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	C:\exVim\vim74\syntax\yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:c_verbatim_tag	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache_classstructures	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let s:cache_classstructures = {}$/;"	v
s:cache_command	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_list	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_module_path	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_name	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:cache_sid	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:cache_tags	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let s:cache_tags = {}$/;"	v
s:cache_tags_checksum	C:\exVim\vim74\autoload\phpcomplete.vim	/^	let s:cache_tags_checksum = ''$/;"	v
s:cached_files	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^let s:cached_files = {}$/;"	v
s:can_preserve_syntax	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:case_indent	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^    let s:case_indent = m[1]$/;"	v
s:case_indent	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:case_indent = &sw$/;"	v
s:case_indent_after	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^    let s:case_indent_after = m[1]$/;"	v
s:case_indent_after	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:case_indent_after = &sw$/;"	v
s:ccex	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:cfu_type	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:cfu_type=0$/;"	v
s:check_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:class	C:\exVim\vim74\ftplugin\php.vim	/^let s:class = '\\(abstract\\s\\+\\|final\\s\\+\\)*class'$/;"	v
s:cmdheight	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:cntr	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:cntr = 0$/;"	v
s:coffeeIndentExpr	C:\exVim\vimfiles\bundle\vim-coffee-script\after\indent\html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:col	C:\exVim\vim74\syntax\2html.vim	/^	let s:col = s:col + 1$/;"	v
s:col	C:\exVim\vim74\syntax\2html.vim	/^    let s:col = 1$/;"	v
s:colorscheme_list	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:combinedString	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:combinedString = ''$/;"	v
s:comma_first	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	C:\exVim\vim74\syntax\wget.vim	/^let s:commands = map([$/;"	v
s:commands	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:commands = []$/;"	v
s:comment	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:comment = "999999"$/;"	v
s:commentTagPattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:commentTagPattern     = '^\\s*\\*\\=\\s*@[a-zA-Z]\\+\\(\\s\\|$\\)'$/;"	v
s:comment_rx	C:\exVim\vim74\indent\make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:common_efm	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_lim	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:compiler	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:compiler = "gcc" $/;"	v
s:conceal	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^let s:conceal = ''$/;"	v
s:concealends	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	C:\exVim\vimfiles\bundle\vim-markdown\syntax\markdown.vim	/^let s:concealends = ''$/;"	v
s:concealinfo	C:\exVim\vim74\syntax\2html.vim	/^	let s:concealinfo = synconcealed(s:lnum, s:col)$/;"	v
s:concealinfo	C:\exVim\vim74\syntax\2html.vim	/^    let s:concealinfo = [0, '']$/;"	v
s:conditionalEnd	C:\exVim\vim74\ftplugin\matlab.vim	/^	let s:conditionalEnd = '\\(([^()]*\\)\\@!\\<end\\>\\([^()]*)\\)\\@!'$/;"	v
s:conditionalEnd	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^  let s:conditionalEnd = '\\([-+{\\*\\:(\\\/]\\s*\\)\\@<!\\<end\\>\\(\\s*[-+}\\:\\*\\\/)]\\)\\@!'$/;"	v
s:conditional_directive_rx	C:\exVim\vim74\indent\make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:config	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:config = {$/;"	v
s:confirm_at	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:confirm_at = -1$/;"	v
s:confirm_at	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:confirm_at = -1$/;"	v
s:confirm_at	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:confirm_at = -1$/;"	v
s:confirm_at	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:confirm_at = -1$/;"	v
s:continuation_regex	C:\exVim\vim74\indent\falcon.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=].*,\\)' . s:line_term$/;"	v
s:continuation_rx	C:\exVim\vim74\indent\make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	C:\exVim\vim74\indent\make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_add_paren.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_case.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_disable_abbr.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_last_paren.vim	/^let s:converter = {$/;"	v
s:converter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_overlap.vim	/^let s:converter = {$/;"	v
s:count	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_floatingwin.vim	/^let s:count=0$/;"	v
s:countonly	C:\exVim\vim74\indent\html.vim	/^let s:countonly = 0$/;"	v
s:countonly	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:countonly = 0$/;"	v
s:cpo_sav	C:\exVim\vim74\autoload\tohtml.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	C:\exVim\vim74\syntax\2html.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\autoload\ccomplete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\fortran_g77.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\gcc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\mcs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\onsgmls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\se.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\splint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\xmllint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\compiler\xmlwf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\abap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\changelog.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\dtrace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\hamster.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\haskell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\ishd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\kwt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\lua.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\msmessages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\postscr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\r.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\registry.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rhelp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rrst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\spec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\ftplugin\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\perl6.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\sdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\sh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\indent\zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\optwin.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\plugin\matchparen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\scripts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\synmenu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\abel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\art.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\asm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\asn.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\autohotkey.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\ayacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\blank.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\clean.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\clipper.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\csc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cupl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\cweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\d.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\doxygen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\fasm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\forth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\fortran.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\fstab.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\gdb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\gp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\gsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\hb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\idl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\initex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\ist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\jam.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\ldapconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\lout.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\lua.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\make.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\masm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\monk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\msidl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\natural.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\nroff.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\objc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\opl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\plaintex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\progress.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\python.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\reva.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\rpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\scheme.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sendpr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sisu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\smil.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\snnspat.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\spup.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\st.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\synload.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\tasm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\xbl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vim74\syntax\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	C:\exVim\vim74\ftplugin\ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cposet	C:\exVim\vim74\compiler\fortran_F.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	C:\exVim\vim74\compiler\fortran_cv.vim	/^let s:cposet = &cpoptions$/;"	v
s:cposet	C:\exVim\vim74\compiler\fortran_elf90.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	C:\exVim\vim74\compiler\fortran_lf95.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	C:\exVim\vim74\ftplugin\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	C:\exVim\vim74\ftplugin\ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	C:\exVim\vim74\indent\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cs_cpo_save	C:\exVim\vim74\syntax\cs.vim	/^let s:cs_cpo_save = &cpo$/;"	v
s:cscope	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:cscope = ''$/;"	v
s:cscope_list	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:cscope_list = []$/;"	v
s:csfile	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:csfile = '.\/cscope.out'$/;"	v
s:css1indent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:css1indent = 0$/;"	v
s:cterm_color	C:\exVim\vim74\syntax\2html.vim	/^    let s:cterm_color = {$/;"	v
s:cur_menu_char	C:\exVim\vim74\makemenu.vim	/^let s:cur_menu_char = ""$/;"	v
s:cur_menu_item	C:\exVim\vim74\makemenu.vim	/^let s:cur_menu_item = 0$/;"	v
s:cur_menu_name	C:\exVim\vim74\makemenu.vim	/^let s:cur_menu_name = ""$/;"	v
s:cur_menu_nr	C:\exVim\vim74\makemenu.vim	/^let s:cur_menu_nr = 0$/;"	v
s:cur_mode	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^let s:cur_mode = ''$/;"	v
s:cur_project_file	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:cur_project_file = "" $/;"	v
s:current_syntax	C:\exVim\vim74\syntax\2html.vim	/^  let s:current_syntax = 'none'$/;"	v
s:current_syntax	C:\exVim\vim74\syntax\2html.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	C:\exVim\vim74\syntax\2html.vim	/^  let s:current_syntax = w:current_syntax$/;"	v
s:cursor_c	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^let s:cursor_c=0$/;"	v
s:cursor_l	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_utils.vim	/^let s:cursor_l=1$/;"	v
s:cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:d2r	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:d2r= [ [ 1000000 , 'M)'   ],[900000 , 'CM)' ], [500000 , 'D)'  ], [400000 , 'CD)' ], [100000 , 'C)'  ], [90000 , 'XC)' ], [50000 , 'L)' ], [40000 , 'XL)' ], [10000 , 'X)' ], [9000  , 'IX)'], [5000 , 'V)'], [1000 , 'M'  ], [900  , 'CM'], [500 , 'D'], [400  , 'CD'], [100 , 'C'], [90   , 'XC'], [50  , 'L'], [40   , 'XL'], [10  , 'X'], [9    , 'IX'], [5   , 'V'], [4    , 'IV'], [1   , 'I'] ]$/;"	v
s:debug	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^    let s:debug = 1$/;"	v
s:debug	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:debug = 0$/;"	v
s:debugfile	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:debugfile = $HOME.'\/undotree_debug.log'$/;"	v
s:defaultClassDescriptionSpace	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultClassDescriptionSpace = 1$/;"	v
s:defaultFieldDescriptionSpace	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultFieldDescriptionSpace = 1$/;"	v
s:defaultMethodDescriptionSpace	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultMethodDescriptionSpace = 1$/;"	v
s:defaultORcase	C:\exVim\vim74\indent\php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:defaultParamText	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultParamText  = (exists('b:jcommenter_default_param'))  ? b:jcommenter_default_param : ''$/;"	v
s:defaultReturnText	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultReturnText = (exists('b:jcommenter_default_return')) ? b:jcommenter_default_return : ''$/;"	v
s:defaultThrowText	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:defaultThrowText  = (exists('b:jcommenter_default_throw'))   ? b:jcommenter_default_throw : ''$/;"	v
s:default_id_file_filter	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^let s:default_id_file_filter = [$/;"	v
s:default_includes	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^let s:default_includes = [$/;"	v
s:defaults_list	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:defaults_list=[$/;"	v
s:delimiterMap	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:delims	C:\exVim\vim74\syntax\perl6.vim	/^let s:delims = [$/;"	v
s:dictionary_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^  let s:dictionary_cache = {}$/;"	v
s:did_ft	C:\exVim\vim74\syntax\syntax.vim	/^  let s:did_ft = 0$/;"	v
s:did_ft	C:\exVim\vim74\syntax\syntax.vim	/^  let s:did_ft = 1$/;"	v
s:did_function_definitions	C:\exVim\vim74\ftplugin\erlang.vim	/^	let s:did_function_definitions = 1$/;"	v
s:diff_id	C:\exVim\vim74\syntax\2html.vim	/^	let s:diff_id = diff_hlID(s:lnum, s:col)$/;"	v
s:diff_id	C:\exVim\vim74\syntax\2html.vim	/^    let s:diff_id = 0$/;"	v
s:diff_mode	C:\exVim\vim74\syntax\2html.vim	/^let s:diff_mode = &diff$/;"	v
s:diffattr	C:\exVim\vim74\syntax\2html.vim	/^    let s:diffattr = diff_hlID(s:lnum, 1)$/;"	v
s:difffillchar	C:\exVim\vim74\syntax\2html.vim	/^  let s:difffillchar = '-'$/;"	v
s:difffillchar	C:\exVim\vim74\syntax\2html.vim	/^let s:difffillchar = &fillchars[matchend(&fillchars, 'diff:')]$/;"	v
s:diffpanel	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:diffpanel = s:new(s:panel)$/;"	v
s:diffstylelist	C:\exVim\vim74\syntax\2html.vim	/^let s:diffstylelist = {$/;"	v
s:dir	C:\exVim\vim74\ftplugin\clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	C:\exVim\vim74\ftplugin\clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	C:\exVim\vim74\ftplugin\clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dirArrows	C:\exVim\vimfiles\bundle\nerdtree\syntax\nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~').escape(g:NERDTreeDirArrowExpandable, '~')$/;"	v
s:dir_for_worktree	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dircounts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^let s:dircounts = {}$/;"	v
s:directives	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:directives={}$/;"	v
s:docCommentEnd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:docCommentEnd   = -1$/;"	v
s:docCommentStart	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:docCommentStart = -1$/;"	v
s:dot_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:dot_file = '.\/hv.dot'$/;"	v
s:dotvim	C:\exVim\vim74\autoload\getscript.vim	/^  let s:dotvim= ".vim"$/;"	v
s:dotvim	C:\exVim\vim74\autoload\getscript.vim	/^  let s:dotvim= "vimfiles"$/;"	v
s:ds_pattern	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^let s:ds_pattern = '\\v"'  . s:string_chunk . '"'$/;"	v
s:dtd_cpo_save	C:\exVim\vim74\syntax\dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
s:ed	C:\exVim\vim74\syntax\tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:edit_options	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^let s:edit_options = [$/;"	v
s:emacs	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emmet_settings	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^let s:emmet_settings = {$/;"	v
s:encoding	C:\exVim\vim74\keymap\croatian.vim	/^	let s:encoding = 'cp1250'$/;"	v
s:encoding	C:\exVim\vim74\keymap\croatian.vim	/^	let s:encoding = 'iso-8859-2'$/;"	v
s:encoding	C:\exVim\vim74\keymap\croatian.vim	/^let s:encoding = &enc$/;"	v
s:end	C:\exVim\vim74\syntax\2html.vim	/^    let s:end = line("$")$/;"	v
s:end	C:\exVim\vim74\syntax\2html.vim	/^  let s:end = html_end_line$/;"	v
s:end	C:\exVim\vim74\syntax\2html.vim	/^  let s:end = line("$")$/;"	v
s:end	C:\exVim\vim74\syntax\2html.vim	/^  let s:end = line('$')$/;"	v
s:end	C:\exVim\vim74\syntax\2html.vim	/^let s:end=line('$')$/;"	v
s:end_conditional_directive_rx	C:\exVim\vim74\indent\make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	C:\exVim\vim74\indent\ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:end_start_regex =$/;"	v
s:endline	C:\exVim\vim74\indent\php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:endtags	C:\exVim\vim74\indent\html.vim	/^let s:endtags = [0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:endtags	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:endtags = [0,0,0,0,0,0,0,0]   " some places unused$/;"	v
s:enumeration_pattern	C:\exVim\vim74\indent\rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:erlang_fun_begin	C:\exVim\vim74\ftplugin\erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	C:\exVim\vim74\ftplugin\erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:escapeDebugStops	C:\exVim\vim74\indent\php.vim	/^let s:escapeDebugStops = 0$/;"	v
s:event_listeners	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^let s:event_listeners = {$/;"	v
s:excs_fold_end	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_fold_end = '>>>>>>'$/;"	v
s:excs_fold_start	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_fold_start = '<<<<<<'$/;"	v
s:excs_ignore_case	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_ignore_case = 1$/;"	v
s:excs_need_search_again	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_need_search_again = 0$/;"	v
s:excs_picked_search_result	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_picked_search_result = []$/;"	v
s:excs_quick_view_idx	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_quick_view_idx = 1$/;"	v
s:excs_quick_view_search_pattern	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:excs_quick_view_search_pattern = ''$/;"	v
s:exists	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang.vim	/^let s:exists = {}$/;"	v
s:exists_context_filetype	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^    let s:exists_context_filetype = 0$/;"	v
s:exists_context_filetype	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^    let s:exists_context_filetype = 1$/;"	v
s:expandedtab	C:\exVim\vim74\syntax\2html.vim	/^	    let s:expandedtab = substitute(s:expandedtab, '\\t', repeat(' ', s:i), '')$/;"	v
s:expandedtab	C:\exVim\vim74\syntax\2html.vim	/^	let s:expandedtab = s:concealinfo[1]$/;"	v
s:expandedtab	C:\exVim\vim74\syntax\2html.vim	/^	let s:expandedtab = strpart(s:line, s:startcol - 1, s:col - s:startcol)$/;"	v
s:expr_case	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:expr_case = '^\\s*\\(case\\s\\+[^\\:]*\\|default\\)\\s*:\\s*'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = "." . strpart(s:lang, 0, 2)$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".cs"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".de"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".nl"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".pl"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".sk"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^      let s:ext = ".sr"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".cs.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".el"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".el.cp737"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".el.utf-8"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".hr.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".hu.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".ja.euc"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".ja.sjis"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".ko.euc"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".pl.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".sk.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".sr.cp1250"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".tr.iso9"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".zh.big5"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".zh.euc"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".zh_cn"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = ".zh_tw"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = '.hr'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = '.hu'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = '.ru'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^    let s:ext = '.ru.cp1251'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext .= '.utf-8'$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext = ""$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext = "." . $xx$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext = ".de"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext = ".eo.utf-8"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^  let s:ext = ".vi.utf-8"$/;"	v
s:ext	C:\exVim\vim74\tutor\tutor.vim	/^let s:ext = ""$/;"	v
s:extend	C:\exVim\vim74\indent\sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extfname	C:\exVim\vim74\syntax\tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:extra_space	C:\exVim\vim74\syntax\2html.vim	/^	    let s:extra_space = 0$/;"	v
s:extra_space	C:\exVim\vim74\syntax\2html.vim	/^	    let s:extra_space = s:foldcolumn - s:allfolds[0].level$/;"	v
s:f	C:\exVim\vim74\spell\cleanadd.vim	/^      let s:f = escape(s:fname, ' \\|<')$/;"	v
s:f	C:\exVim\vim74\spell\cleanadd.vim	/^      let s:f = fnameescape(s:fname)$/;"	v
s:falcon_deindent_keywords	C:\exVim\vim74\indent\falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	C:\exVim\vim74\indent\falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:fg_pdef	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:fgc	C:\exVim\vim74\syntax\2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	C:\exVim\vim74\syntax\2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(hlID("Normal"), "fg#", s:whatterm))$/;"	v
s:ficounts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file_filters	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:file_filters = []$/;"	v
s:file_ignore_patterns	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:file_ignore_patterns = []$/;"	v
s:file_name	C:\exVim\vim74\indent\erlang.vim	/^let s:file_name = ''$/;"	v
s:filecounts	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filetype_dict	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^let s:filetype_dict = {$/;"	v
s:filler	C:\exVim\vim74\syntax\2html.vim	/^  let s:filler = diff_filler(s:lnum)$/;"	v
s:filtermx	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_sign_id	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:firstfold	C:\exVim\vim74\syntax\2html.vim	/^	  let s:firstfold = 0$/;"	v
s:firstfold	C:\exVim\vim74\syntax\2html.vim	/^      let s:firstfold = 1$/;"	v
s:fname	C:\exVim\vim74\syntax\colortest.vim	/^    let s:fname = escape(s:fname, ' \\|')$/;"	v
s:fname	C:\exVim\vim74\syntax\colortest.vim	/^    let s:fname = fnameescape(s:fname)$/;"	v
s:fname	C:\exVim\vim74\syntax\colortest.vim	/^  let s:fname = expand('<sfile>')$/;"	v
s:foldId	C:\exVim\vim74\syntax\2html.vim	/^	let s:foldId = s:foldId + 1$/;"	v
s:foldId	C:\exVim\vim74\syntax\2html.vim	/^let s:foldId = 0$/;"	v
s:foldcolumn	C:\exVim\vim74\syntax\2html.vim	/^	let s:foldcolumn = afold.level+1$/;"	v
s:foldcolumn	C:\exVim\vim74\syntax\2html.vim	/^  let s:foldcolumn = &foldcolumn$/;"	v
s:folded_assignment_rx	C:\exVim\vim74\indent\make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:folder_filter_include	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:folder_filter_include = 1$/;"	v
s:folder_filters	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:folder_filters = []$/;"	v
s:foldfillchar	C:\exVim\vim74\syntax\2html.vim	/^    let s:foldfillchar = '-'$/;"	v
s:foldfillchar	C:\exVim\vim74\syntax\2html.vim	/^  let s:foldfillchar = &fillchars[matchend(&fillchars, 'fold:')]$/;"	v
s:foldstack	C:\exVim\vim74\syntax\2html.vim	/^	let s:foldstack[0].id = s:foldId$/;"	v
s:foldstack	C:\exVim\vim74\syntax\2html.vim	/^let s:foldstack = []$/;"	v
s:foldtext_save	C:\exVim\vim74\syntax\2html.vim	/^  let s:foldtext_save = &foldtext$/;"	v
s:foreground	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:foreground = "cccccc"$/;"	v
s:formatelempat	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:fpats	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:fpats = {$/;"	v
s:frozenset	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:ft	C:\exVim\vim74\syntax\c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:ft_rules_udev_rules_pattern	C:\exVim\vim74\filetype.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	C:\exVim\vim74\ftplugin\sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
s:function	C:\exVim\vim74\ftplugin\php.vim	/^let s:function = '\\(abstract\\s\\+\\|final\\s\\+\\|private\\s\\+\\|protected\\s\\+\\|public\\s\\+\\|static\\s\\+\\)*function'$/;"	v
s:functionDecl	C:\exVim\vim74\indent\php.vim	/^let s:functionDecl = '\\<function\\>\\%(\\s\\+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\\)\\=\\s*(.*'$/;"	v
s:functionWithoutEndStatement	C:\exVim\vimfiles\bundle\vim-matlab\indent\matlab.vim	/^let s:functionWithoutEndStatement = 0$/;"	v
s:ghc_mod_new	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:git_versions	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbs	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:globpath_third_arg	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\glsl\cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:green	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:green = "99cc99"$/;"	v
s:green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:grouping_algorithms	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:h	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:h = {}$/;"	v
s:h	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:h.ids = {}$/;"	v
s:has_highlighting	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let s:has_maven = 0$/;"	v
s:hash_colors	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:header	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^let s:header=''$/;"	v
s:header	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let s:header=''$/;"	v
s:headersRegexp	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:help_open = 0$/;"	v
s:help_open	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:help_open = 0$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:help_text = s:help_text_short$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:help_text_short = [$/;"	v
s:help_text_short	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:help_text_short = [$/;"	v
s:helpless	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:helpless = ['" Press ? for help.']$/;"	v
s:helpmore	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:helpmore = ['"    ===== Marks ===== ',$/;"	v
s:hidden	C:\exVim\vim74\syntax\hitest.vim	/^let s:hidden      = &hidden$/;"	v
s:hl_reg_map	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^let s:hl_reg_map = ["","q","w","e","r"]$/;"	v
s:hlgrps	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hooks	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:htmlIndentExpr	C:\exVim\vimfiles\bundle\vim-coffee-script\after\indent\html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:htmlfont	C:\exVim\vim74\syntax\2html.vim	/^  let s:htmlfont = "'". g:html_font . "', monospace"$/;"	v
s:htmlfont	C:\exVim\vim74\syntax\2html.vim	/^  let s:htmlfont = "monospace"$/;"	v
s:i	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	C:\exVim\vim74\macros\less.vim	/^    let s:i = s:i + 1$/;"	v
s:i	C:\exVim\vim74\macros\less.vim	/^  let s:i = 0$/;"	v
s:i	C:\exVim\vim74\menu.vim	/^      let s:i = stridx(s:n, "\\n")$/;"	v
s:i	C:\exVim\vim74\menu.vim	/^  let s:i = stridx(s:n, "\\n")$/;"	v
s:i	C:\exVim\vim74\syntax\2html.vim	/^		let s:i = &ts - (s:vcol % &ts)$/;"	v
s:i	C:\exVim\vim74\syntax\2html.vim	/^		let s:i = &ts$/;"	v
s:i	C:\exVim\vim74\syntax\2html.vim	/^	      let s:i = &ts - ((s:idx + s:startcol - 1) % &ts)$/;"	v
s:i	C:\exVim\vim74\syntax\help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:i	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:i           = ""$/;"	v
s:i	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:id	C:\exVim\vim74\syntax\2html.vim	/^	let s:id = s:CONCEAL_ID$/;"	v
s:id	C:\exVim\vim74\syntax\2html.vim	/^	let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	C:\exVim\vim74\syntax\2html.vim	/^	let s:id = synIDtrans(s:id)$/;"	v
s:id	C:\exVim\vim74\syntax\2html.vim	/^  let s:id = s:FOLD_C_ID$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id_file	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:id_file = '.\/ID'$/;"	v
s:idef	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idx	C:\exVim\vim74\menu.vim	/^      let s:idx = s:idx + 10$/;"	v
s:idx	C:\exVim\vim74\menu.vim	/^    let s:idx = 100$/;"	v
s:idx	C:\exVim\vim74\menu.vim	/^  let s:idx = s:idx + 10$/;"	v
s:idx	C:\exVim\vim74\menu.vim	/^let s:idx = 100$/;"	v
s:idx	C:\exVim\vim74\optwin.vim	/^let s:idx = 1$/;"	v
s:idx	C:\exVim\vim74\syntax\2html.vim	/^	    let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:idx	C:\exVim\vim74\syntax\2html.vim	/^	  let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:ignoreForReturn	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:ignoreForReturn = ['template', 'explicit', 'inline', 'static', 'virtual', 'void\\([[:blank:]]*\\*\\)\\@!', 'const', 'volatile', 'struct', 'extern']$/;"	v
s:img_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:img_file = '.\/hv.png'$/;"	v
s:imports	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^let s:imports = ''$/;"	v
s:indent	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:indent = ''$/;"	v
s:indent_tags	C:\exVim\vim74\indent\html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_tags	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^    let s:indent_tags = {}$/;"	v
s:infix	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix = "!\\\\?\\\\%(" . s:infix . "\\\\)"$/;"	v
s:infix	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix = join(s:both, "\\\\|")$/;"	v
s:infix_a	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_a = [$/;"	v
s:infix_a_long	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_a_long = join(s:infix_a, " ")$/;"	v
s:infix_a_pattern	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_a_pattern = join(s:infix_a_words, "\\\\|")$/;"	v
s:infix_a_words	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_a_words = split(s:infix_a_long)$/;"	v
s:infix_assoc	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_assoc = "!\\\\?\\\\%(" . s:infix_a_pattern . "\\\\)"$/;"	v
s:infix_n	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_n = "but does <=> leg cmp \\\\.\\\\. \\\\.\\\\.\\\\^\\\\^ \\\\^\\\\.\\\\. \\\\^\\\\.\\\\.\\\\^"$/;"	v
s:infix_n_pattern	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_n_pattern = join(s:infix_n_words, "\\\\|")$/;"	v
s:infix_n_words	C:\exVim\vim74\syntax\perl6.vim	/^let s:infix_n_words = split(s:infix_n)$/;"	v
s:inheritance_dent	C:\exVim\vim74\indent\eiffel.vim	/^let s:inheritance_dent = '\\s*\\(redefine\\|rename\\|export\\)\\>'$/;"	v
s:inherits_file	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:inherits_file = '.\/inherits'$/;"	v
s:init_search_input	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^let s:init_search_input = 1$/;"	v
s:interface	C:\exVim\vim74\ftplugin\php.vim	/^let s:interface = 'interface'$/;"	v
s:invalComments	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:invalComments      = '\\%(' . s:noCommentTrunk . '\\)\\|\\%(' . s:noParamTagComment . '\\)\\|\\%(' . s:noTagComment . '\\)'$/;"	v
s:is_cygwin	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_first_time	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^let s:is_first_time = 1$/;"	v
s:is_mac	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_unix	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_windows	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:itemization_pattern	C:\exVim\vim74\indent\rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:javaClassPattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:javaClassPattern	    = '\\(^\\|\\s\\)\\(class\\|interface\\)\\s\\+' . s:javaname . '\\({\\|\\s\\|$\\)'$/;"	v
s:javaMethodAntiPattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:javaMethodAntiPattern = '='$/;"	v
s:javaMethodPattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:javaMethodPattern     = '\\(^\\|\\s\\+\\)' . s:javaname . '\\s*(.*)\\s*\\(throws\\|{\\|;\\|$\\)'$/;"	v
s:javaVariablePattern	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:javaVariablePattern   = '\\(\\s\\|^\\)' . s:javaname . s:brackets . '.*\\(;\\|=.*;\\)'$/;"	v
s:java_home	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^	let s:java_home = '\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/'$/;"	v
s:java_home	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_java_completion.vim	/^let s:java_home = expand('$JAVA_HOME')$/;"	v
s:javaname	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:javaname = '[a-zA-Z_][a-zA-Z0-9_]*'$/;"	v
s:js1indent	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:js1indent = 0$/;"	v
s:js_keywords	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:js_keywords = '^\\s*\\(break\\|catch\\|const\\|continue\\|debugger\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|let\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:just_inserted_rule_rx	C:\exVim\vim74\indent\make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\getscript.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\netrw.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\netrwFileHandlers.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\tar.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\autoload\zip.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\decada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\g95.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\gfortran.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\gnat.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\hp_acc.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\ifort.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\intel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\irix5_c.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\irix5_cpp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\mips_c.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\mipspro_c89.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\mipspro_cpp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\msbuild.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\compiler\xbuild.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\php.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\ftplugin\python.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\eiffel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\java.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\mp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\python.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\sqlanywhere.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\vim.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\indent\xml.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_af_af.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ca_es.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_chinese_gb.936.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_chinese_taiwan.950.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_cs_cz.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_cs_cz.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_czech_czech_republic.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_czech_czech_republic.ascii.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_de_de.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_eo.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_es_es.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_fi_fi.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_fr_fr.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_hu_hu.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_hu_hu.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_it_it.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ja_jp.euc-jp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ja_jp.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_japanese_japan.932.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ko_kr.euckr.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ko_kr.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_nl_nl.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_no_no.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_pl_pl.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_pl_pl.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_polish_poland.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_pt_br.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_pt_pt.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ru_ru.koi8-r.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_ru_ru.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sk_sk.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sl_si.cp1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sl_si.latin2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sl_si.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_slovak_slovak_republic.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sr_rs.ascii.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sr_rs.iso_8859-5.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sr_rs.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_sv_se.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_uk_ua.cp1251.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_uk_ua.koi8-u.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_vi_vn.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_zh_cn.gb2312.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_zh_cn.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\lang\menu_zh_tw.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\plugin\getscriptPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\plugin\netrwPlugin.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\plugin\tarPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\plugin\vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\plugin\zipPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\autoit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\datascript.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\eiffel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\gprof.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\lsl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\perl6.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\po.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\sgmldecl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\valgrind.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vim74\syntax\vim.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vimfiles\bundle\LargeFile\plugin\LargeFile.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	C:\exVim\vimfiles\bundle\ex-visincr\plugin\visincrPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:kernels	C:\exVim\vim74\syntax\debcontrol.vim	/^let s:kernels = '\\%(linux\\|hurd\\|kfreebsd\\|knetbsd\\|kopensolaris\\|netbsd\\)'$/;"	v
s:key_preview	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:key_preview=''$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:keymap = {}$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['ClearHistory','C','Clear undo history']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Close','q','Close this panel']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['DiffToggle','D','Toggle diff panel']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Enter','<2-LeftMouse>','Revert to current']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Enter','<cr>','Revert to current']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['FocusTarget','<tab>','Set Focus to editor']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['GoNextSaved','>','Revert to next saved state']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['GoNextState','K','Revert to next state']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['GoPreviousSaved','<','Revert to previous saved state']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['GoPreviousState','J','Revert to previous state']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Help','?','Toggle quick help']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Redo','<c-r>','Redo']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['TimestampToggle','T','Toggle relative timestamp']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap += [['Undo','u','Undo']]$/;"	v
s:keymap	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:keymap = []$/;"	v
s:keywords	C:\exVim\vim74\syntax\perl6.vim	/^let s:keywords = {$/;"	v
s:kprange	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^let s:kprange = {$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^      let s:lang = ""$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	C:\exVim\vim74\menu.vim	/^    let s:lang = v:lang$/;"	v
s:lang	C:\exVim\vim74\tutor\tutor.vim	/^    let s:lang = $LANG$/;"	v
s:lang	C:\exVim\vim74\tutor\tutor.vim	/^    let s:lang = $LC_ALL$/;"	v
s:lang	C:\exVim\vim74\tutor\tutor.vim	/^    let s:lang = substitute(s:lang, '\\c@euro', '', '')$/;"	v
s:lang	C:\exVim\vim74\tutor\tutor.vim	/^    let s:lang = v:lang$/;"	v
s:lang	C:\exVim\vim74\tutor\tutor.vim	/^  let s:lang = ""$/;"	v
s:last_changedtick	C:\exVim\vim74\indent\erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_editbuf_winid	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^let s:last_editbuf_winid = -1$/;"	v
s:last_editplugin_bufnr	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^let s:last_editplugin_bufnr = -1$/;"	v
s:last_line_nr	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:last_line_nr = -1$/;"	v
s:last_line_nr	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:last_line_nr = -1$/;"	v
s:last_mps	C:\exVim\vim74\macros\matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_mps	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_start	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let s:last_start = 0$/;"	v
s:last_start	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let s:last_start = 0$/;"	v
s:last_words	C:\exVim\vim74\macros\matchit.vim	/^let s:last_words = ":"$/;"	v
s:last_words	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^let s:last_words = ":"$/;"	v
s:lazycat_list	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lazyredraw	C:\exVim\vim74\syntax\hitest.vim	/^let s:lazyredraw  = &lazyredraw$/;"	v
s:left_cols	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^let s:left_cols=-1$/;"	v
s:len	C:\exVim\vim74\syntax\2html.vim	/^	  let s:len = &columns$/;"	v
s:len	C:\exVim\vim74\syntax\2html.vim	/^    let s:len = strlen(s:line)$/;"	v
s:lenSpaceStr	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:length_pattern	C:\exVim\vim74\syntax\cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\|\\d\\+\\)\\>'$/;"	v
s:letlim	C:\exVim\vim74\indent\ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	C:\exVim\vim74\indent\sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	C:\exVim\vim74\indent\ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letpat	C:\exVim\vim74\indent\sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:level	C:\exVim\vim74\syntax\2html.vim	/^      let s:level = match(foldtextresult(s:lnum), '+-*\\zs[^-]') - 2$/;"	v
s:levelRegexpDict	C:\exVim\vimfiles\bundle\vim-markdown\ftplugin\markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = "Copyright (C) \\<enter>\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "GNU General Public License for more details.\\<enter>\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "This program is distributed in the hope that it will be useful,\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "This program is free software; you can redistribute it and\/or\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "You should have received a copy of the GNU General Public License\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "along with this program; if not, write to the Free Software\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "as published by the Free Software Foundation; either version 2\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "but WITHOUT ANY WARRANTY; without even the implied warranty of\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "modify it under the terms of the GNU General Public License\\<enter>"$/;"	v
s:licenseTag	C:\exVim\vimfiles\bundle\DoxygenToolkit.vim\plugin\DoxygenToolkit.vim	/^let s:licenseTag = s:licenseTag . "of the License, or (at your option) any later version.\\<enter>\\<enter>"$/;"	v
s:lim	C:\exVim\vim74\indent\ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	C:\exVim\vim74\indent\sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line	C:\exVim\vim74\syntax\2html.vim	/^	  let s:line = s:line . repeat(' ', &columns - virtcol([s:lnum, s:len]) - s:margin)$/;"	v
s:line	C:\exVim\vim74\syntax\2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:line = "393939"$/;"	v
s:line1	C:\exVim\vim74\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\<env\\s\\+', '', '')$/;"	v
s:line1	C:\exVim\vim74\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\S\\+=\\S\\+', '', 'g')$/;"	v
s:line1	C:\exVim\vim74\scripts.vim	/^let s:line1 = getline(1)$/;"	v
s:line2	C:\exVim\vim74\scripts.vim	/^  let s:line2 = getline(2)$/;"	v
s:line3	C:\exVim\vim74\scripts.vim	/^  let s:line3 = getline(3)$/;"	v
s:line4	C:\exVim\vim74\scripts.vim	/^  let s:line4 = getline(4)$/;"	v
s:line5	C:\exVim\vim74\scripts.vim	/^  let s:line5 = getline(5)$/;"	v
s:line_term	C:\exVim\vim74\indent\json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	C:\exVim\vim74\ftplugin\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	C:\exVim\vim74\syntax\2html.vim	/^    let s:lines[-1].="<\/span><\/span>"$/;"	v
s:lines	C:\exVim\vim74\syntax\2html.vim	/^let s:lines = []$/;"	v
s:lines	C:\exVim\vim74\syntax\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	C:\exVim\vim74\syntax\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:linesAppended	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:linesAppended = 0 " this counter is increased when the AppendStr-method$/;"	v
s:liststartregex	C:\exVim\vim74\indent\yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:lmax	C:\exVim\vim74\ftplugin\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	C:\exVim\vim74\ftplugin\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	C:\exVim\vim74\indent\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	C:\exVim\vim74\indent\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	C:\exVim\vim74\syntax\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	C:\exVim\vim74\syntax\fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	C:\exVim\vim74\ftplugin\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	C:\exVim\vim74\ftplugin\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	C:\exVim\vim74\indent\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	C:\exVim\vim74\indent\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	C:\exVim\vim74\syntax\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	C:\exVim\vim74\syntax\fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	C:\exVim\vim74\makemenu.vim	/^let s:lnum = line(".") - 1$/;"	v
s:lnum	C:\exVim\vim74\makemenu.vim	/^let s:lnum = s:lnum + 1$/;"	v
s:lnum	C:\exVim\vim74\optwin.vim	/^let s:lnum = line("$")$/;"	v
s:lnum	C:\exVim\vim74\scripts.vim	/^	let s:lnum += 1$/;"	v
s:lnum	C:\exVim\vim74\scripts.vim	/^      let s:lnum += 1$/;"	v
s:lnum	C:\exVim\vim74\scripts.vim	/^      let s:lnum = 1$/;"	v
s:lnum	C:\exVim\vim74\scripts.vim	/^    let s:lnum = 1$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^      let s:lnum = s:lnum + 1$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^    let s:lnum = 1$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^    let s:lnum = s:new_lnum$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^  let s:lnum = 1$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^  let s:lnum = html_start_line$/;"	v
s:lnum	C:\exVim\vim74\syntax\2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:loaded	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:loaded = {}$/;"	v
s:loaded	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:loaded = {}$/;"	v
s:loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:loaded = {}$/;"	v
s:ls	C:\exVim\vim74\syntax\2html.vim	/^let s:ls  = &ls$/;"	v
s:luapath	C:\exVim\vim74\syntax\vim.vim	/^   let s:luapath= fnameescape(s:luapath)$/;"	v
s:luapath	C:\exVim\vim74\syntax\vim.vim	/^let s:luapath= fnameescape(expand("<sfile>:p:h")."\/lua.vim")$/;"	v
s:lz	C:\exVim\vim74\macros\less.vim	/^let s:lz = &lz$/;"	v
s:m	C:\exVim\vim74\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	C:\exVim\vim74\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:m_winnr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^let s:m_winnr = -1$/;"	v
s:magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:man_find_arg	C:\exVim\vim74\ftplugin\man.vim	/^    let s:man_find_arg = "-l"$/;"	v
s:man_find_arg	C:\exVim\vim74\ftplugin\man.vim	/^let s:man_find_arg = "-w"$/;"	v
s:man_sect_arg	C:\exVim\vim74\ftplugin\man.vim	/^    let s:man_sect_arg = "-s"$/;"	v
s:man_sect_arg	C:\exVim\vim74\ftplugin\man.vim	/^let s:man_sect_arg = ""$/;"	v
s:man_tag_depth	C:\exVim\vim74\ftplugin\man.vim	/^let s:man_tag_depth = 0$/;"	v
s:mapkeyregex	C:\exVim\vim74\indent\yaml.vim	/^let s:mapkeyregex='\\v^\\s*%(\\''%([^'']|'''')*\\'''.$/;"	v
s:margin	C:\exVim\vim74\syntax\2html.vim	/^  let s:margin = 0$/;"	v
s:margin	C:\exVim\vim74\syntax\2html.vim	/^  let s:margin = strlen(s:end) + 1$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\config.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\php.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\php.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vim74\ftplugin\xhtml.vim	/^let s:match_words = ""$/;"	v
s:match_words	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^let s:match_words = ""$/;"	v
s:matched_member	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let s:matched_member=[]$/;"	v
s:matched_tags	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^let s:matched_tags=[]$/;"	v
s:matcher	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_length.vim	/^let s:matcher = {$/;"	v
s:maxoff	C:\exVim\vim74\indent\python.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	C:\exVim\vim74\indent\zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:member_sources	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^  let s:member_sources = {}$/;"	v
s:menu_char_prefix	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:menu_root	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^        let s:menu_root = 'Plugin.SingleCompile'$/;"	v
s:menu_root	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^        let s:menu_root = 'SingleCompile'$/;"	v
s:mmssff_pattern	C:\exVim\vim74\syntax\cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\>'$/;"	v
s:mode_dict	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^let s:mode_dict = {}$/;"	v
s:modeline	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	C:\exVim\vim74\ftplugin\ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:modemap	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modep	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:module	C:\exVim\vim74\indent\ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	C:\exVim\vim74\indent\sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Cancel.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\CursorMove.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Delete.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Exit.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Paste.vim	/^let s:module = {$/;"	v
s:module	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^let s:module = {$/;"	v
s:modules	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:molokai_original	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\monokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\colors\monokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:molokai_original	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:more	C:\exVim\vim74\syntax\hitest.vim	/^let s:more	  = &more$/;"	v
s:msl_regex	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:msl_regex = s:continuation_regex.'|'.s:expr_case$/;"	v
s:mx	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\lang\html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:my_syncolor	C:\exVim\vim74\syntax\doxygen.vim	/^    let s:my_syncolor=1$/;"	v
s:my_syncolor	C:\exVim\vim74\syntax\doxygen.vim	/^  let s:my_syncolor=0$/;"	v
s:my_synlink	C:\exVim\vim74\syntax\doxygen.vim	/^    let s:my_synlink=1$/;"	v
s:my_synlink	C:\exVim\vim74\syntax\doxygen.vim	/^  let s:my_synlink=0$/;"	v
s:mzschemepath	C:\exVim\vim74\syntax\vim.vim	/^   let s:mzschemepath= fnameescape(s:mzschemepath)$/;"	v
s:mzschemepath	C:\exVim\vim74\syntax\vim.vim	/^let s:mzschemepath= fnameescape(expand("<sfile>:p:h")."\/scheme.vim")$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^	let s:n = ""$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^	let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^    let s:n = ""$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^    let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^  let s:n = globpath(&runtimepath, "keymap\/*.vim")$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^let s:n = globpath(&runtimepath, "colors\/*.vim")$/;"	v
s:n	C:\exVim\vim74\menu.vim	/^let s:n = globpath(&runtimepath, "compiler\/*.vim")$/;"	v
s:n	C:\exVim\vim74\syntax\2html.vim	/^	let s:n = 2$/;"	v
s:n	C:\exVim\vim74\syntax\2html.vim	/^      let s:n = s:n - 1$/;"	v
s:n	C:\exVim\vim74\syntax\2html.vim	/^    let s:n = s:filler$/;"	v
s:n	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^	let s:name = s:n$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^	let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^      let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:_]*\\)\\(_[0-9a-zA-Z-]*\\)\\=\\.vim', '\\1', '')$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^    let s:name = s:n$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^    let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	C:\exVim\vim74\menu.vim	/^  let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:]*\\)\\.vim', '\\1', '')$/;"	v
s:name	C:\exVim\vim74\scripts.vim	/^    let s:name = 'wish'$/;"	v
s:name	C:\exVim\vim74\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	C:\exVim\vim74\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*\\<env\\>\\s\\+\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	C:\exVim\vim74\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\([^\/\\\\ ]*\\>\\).*', '\\1', '')$/;"	v
s:name	C:\exVim\vim74\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\S*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:names	C:\exVim\vim74\menu.vim	/^let s:names = sort(map(split(s:n, "\\n"), 'substitute(v:val, "\\\\c.*[\/\\\\\\\\:\\\\]]\\\\([^\/\\\\\\\\:]*\\\\)\\\\.vim", "\\\\1", "")'), 1)$/;"	v
s:need_trans	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:needpatch213	C:\exVim\vim74\autoload\netrw.vim	/^ let s:needpatch213= 1$/;"	v
s:neocomplete_source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^let s:neocomplete_source = {$/;"	v
s:netrw_ftp_cmd	C:\exVim\vim74\autoload\netrw.vim	/^let s:netrw_ftp_cmd= g:netrw_ftp_cmd$/;"	v
s:netrw_has_nt_rcp	C:\exVim\vim74\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 0$/;"	v
s:netrw_has_nt_rcp	C:\exVim\vim74\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 1$/;"	v
s:netrw_rcpmode	C:\exVim\vim74\autoload\netrw.vim	/^ let s:netrw_rcpmode    = ''$/;"	v
s:netrw_rcpmode	C:\exVim\vim74\autoload\netrw.vim	/^ let s:netrw_rcpmode    = '-b'$/;"	v
s:netrw_usercuc	C:\exVim\vim74\autoload\netrw.vim	/^let s:netrw_usercuc = &cursorcolumn$/;"	v
s:netrw_usercul	C:\exVim\vim74\autoload\netrw.vim	/^let s:netrw_usercul = &cursorline$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	    let s:new .= s:FoldColumn_build('|', s:allfolds[0].level - 1, s:extra_space, '-',$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	    let s:new = s:new . s:FoldColumn_build("-", 1, s:extra_space, "",$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	    let s:new = s:new . s:FoldColumn_build('|', s:allfolds[0].level - 1, 0, "",$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	    let s:new = s:new . s:FoldColumn_build('|', s:foldstack[0].level, s:foldcolumn - s:foldstack[0].level, "",$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	    let s:new = s:new . s:FoldColumn_fill()$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	  let s:new = s:new . s:FoldColumn_build(" ", 1, s:foldcolumn - s:allfolds[0].level - 1, "",$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	  let s:new = s:new . s:FoldColumn_build("+", 1, 0, "",$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new .= "<span id='"$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new .= "fold".s:foldId.s:settings.id_suffix."' class='".s:allfolds[0].type."'>"$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new .= (exists('g:html_diff_win_num') ? "win".g:html_diff_win_num : "")$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:FoldColumn_fill() . s:new$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:HtmlFormat_n(repeat(' ', s:margin), s:LINENR_ID, 0, 0) . s:new$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . " " . s:filler . " inserted lines "$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . "<span class='fulltext'>"$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . (s:settings.number_lines ? s:HtmlFormat_n(s:numcol, s:FOLDED_ID, 0, 0) : "") . substitute(s:HtmlFormat_t(foldtextresult(s:lnum), s:FOLDED_ID, 0), '<\/span>', s:HtmlEndline.'\\n\\0', '')$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, &columns - strlen(s:new) - s:margin)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, 3)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new . s:HtmlFormat(s:expandedtab,  s:id, s:diff_id, "", 0)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^	let s:new = s:new."<\/span><\/span>"$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^      let s:new = repeat(s:difffillchar, 3)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^      let s:new = s:HtmlFormat_d(s:new, s:DIFF_D_ID, 0)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^      let s:new = s:new . repeat(s:foldfillchar, &columns - strlen(s:new))$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^      let s:new = s:new . s:HtmlFormat_n("", s:LINENR_ID, 0, s:lnum)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^      let s:new = s:new . s:HtmlFormat_n(s:numcol, s:LINENR_ID, 0, s:lnum)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^    let s:new = (s:settings.number_lines ? s:HtmlFormat_n(s:numcol, s:FOLDED_ID, 0, s:lnum): "") . s:HtmlFormat_t(s:new, s:FOLDED_ID, 0)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^    let s:new = foldtextresult(s:lnum)$/;"	v
s:new	C:\exVim\vim74\syntax\2html.vim	/^  let s:new = ""$/;"	v
s:new_lnum	C:\exVim\vim74\syntax\2html.vim	/^    let s:new_lnum = foldclosedend(s:lnum)$/;"	v
s:newfold	C:\exVim\vim74\syntax\2html.vim	/^	let s:newfold.type = "open-fold"$/;"	v
s:newfold	C:\exVim\vim74\syntax\2html.vim	/^      let s:newfold = {'firstline': s:lnum, 'lastline': foldclosedend(s:lnum), 'level': s:level,'type': "closed-fold"}$/;"	v
s:newstate	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:newstate = {}$/;"	v
s:newwin	C:\exVim\vim74\syntax\2html.vim	/^let s:newwin = winnr()$/;"	v
s:newwin_stl	C:\exVim\vim74\syntax\2html.vim	/^let s:newwin_stl = &l:stl$/;"	v
s:next_sign_id	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:noCommentTrunk	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:noCommentTrunk     = '^\\s*\\\/\\*\\*\\s*\\n\\%(\\s*\\*\\s*\\n\\)*\\%(\\s*\\*\\s*@\\|\\s*\\*\\\/\\)'$/;"	v
s:noParamTagComment	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:noParamTagComment  = '^\\s*\\*\\s*@\\%(param\\|throws\\|exception\\)\\%(\\s\\+\\h\\w*\\)\\=\\s*$'$/;"	v
s:noTagComment	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:noTagComment       = '^\\s*\\*\\s*@\\%(return\\|see\\|version\\|since\\)\\s*$'$/;"	v
s:no_indent	C:\exVim\vim74\indent\eiffel.vim	/^let s:no_indent = '^\\s*\\(class\\|feature\\|creation\\|inherit\\)\\>'$/;"	v
s:node	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:node = {}$/;"	v
s:node_file	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:non_bracket_continuation_regex	C:\exVim\vim74\indent\falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_bracket_continuation_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:none	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notPhpHereDoc	C:\exVim\vim74\indent\php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|die\\|else\\)'$/;"	v
s:not_end	C:\exVim\vim74\ftplugin\framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notelse	C:\exVim\vim74\ftplugin\fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	C:\exVim\vim74\ftplugin\ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	C:\exVim\vim74\ftplugin\aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	C:\exVim\vim74\ftplugin\fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	C:\exVim\vim74\ftplugin\sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	C:\exVim\vim74\ftplugin\vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notifiers	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:notprocedure	C:\exVim\vim74\ftplugin\fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	C:\exVim\vim74\ftplugin\fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notslash	C:\exVim\vim74\macros\matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:notslash	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:ns_char	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_char = '\\%(\\%([\\n\\r\\uFEFF \\t]\\)\\@!\\p\\)'$/;"	v
s:ns_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator)$/;"	v
s:ns_char_without_c_indicator	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]', '')$/;"	v
s:ns_directive_name	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_directive_name	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_global_tag_prefix	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_local_tag_prefix	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_local_tag_prefix	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|[:#]\\@!'.s:ns_plain_safe_in.'\\)'$/;"	v
s:ns_plain_char_in	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_without_colhash.'\\)'$/;"	v
s:ns_plain_char_out	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|[:#]\\@!'.s:ns_plain_safe_out.'\\)'$/;"	v
s:ns_plain_char_out	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out_without_colhash.'\\)'$/;"	v
s:ns_plain_first_in	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:c_indicator.'\\@!'.s:ns_char.'\\|[?:\\-]\\%('.s:ns_plain_safe_in.'\\)\\@=\\)'$/;"	v
s:ns_plain_first_in	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe_in.'\\)\\@=\\)'$/;"	v
s:ns_plain_first_out	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:c_indicator.'\\@!'.s:ns_char.'\\|[?:\\-]\\%('.s:ns_plain_safe_out.'\\)\\@=\\)'$/;"	v
s:ns_plain_first_out	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe_out.'\\)\\@=\\)'$/;"	v
s:ns_plain_in	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_in	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_out	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:_neg_collection.'\\\\)', '[^\\1\\2]', '')$/;"	v
s:ns_plain_safe_in_without_colhash	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collection, '[^\\1:#]', '')$/;"	v
s:ns_plain_safe_out	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out_without_colhash	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collection, '[^\\1:#]', '')$/;"	v
s:ns_tag_char	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:ns_tag_prefix	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_tag_prefix	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_uri_char	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()\\[\\]]\\)'$/;"	v
s:ns_uri_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_uri_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_word_char	C:\exVim\vim74\syntax\yaml.vim	/^let s:ns_word_char = '\\%(\\w\\|-\\)'$/;"	v
s:ns_word_char	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:numcol	C:\exVim\vim74\syntax\2html.vim	/^    let s:numcol = repeat(' ', s:margin - 1 - strlen(s:lnum)) . s:lnum . ' '$/;"	v
s:ob	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:ob              = ""$/;"	v
s:obj	C:\exVim\vim74\indent\ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:obj	C:\exVim\vim74\indent\sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:ocaml_word_char	C:\exVim\vim74\ftplugin\ocaml.vim	/^    let s:ocaml_word_char = '\\w|[À-ÿ]|'''$/;"	v
s:ocamlpp	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:offset	C:\exVim\vim74\syntax\2html.vim	/^	      let s:offset -= s:i - 1$/;"	v
s:offset	C:\exVim\vim74\syntax\2html.vim	/^	  let s:offset = 0$/;"	v
s:old_bind	C:\exVim\vim74\syntax\2html.vim	/^let s:old_bind = &l:scrollbind$/;"	v
s:old_cpo	C:\exVim\vimfiles\bundle\nerdtree\plugin\NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_et	C:\exVim\vim74\syntax\2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_fen	C:\exVim\vim74\syntax\2html.vim	/^let s:old_fen = &foldenable$/;"	v
s:old_icon	C:\exVim\vim74\optwin.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	C:\exVim\vim74\syntax\2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_isprint	C:\exVim\vim74\syntax\2html.vim	/^  let s:old_isprint = &isprint$/;"	v
s:old_magic	C:\exVim\vim74\syntax\2html.vim	/^let s:old_magic = &magic$/;"	v
s:old_more	C:\exVim\vim74\syntax\2html.vim	/^let s:old_more = &more$/;"	v
s:old_paste	C:\exVim\vim74\syntax\2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_report	C:\exVim\vim74\syntax\2html.vim	/^let s:old_report = &report$/;"	v
s:old_ru	C:\exVim\vim74\optwin.vim	/^let s:old_ru = &ru$/;"	v
s:old_sc	C:\exVim\vim74\optwin.vim	/^let s:old_sc = &sc$/;"	v
s:old_search	C:\exVim\vim74\syntax\2html.vim	/^let s:old_search = @\/$/;"	v
s:old_style	C:\exVim\vim74\syntax\erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:old_tagrelative	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^let s:old_tagrelative=&tagrelative$/;"	v
s:old_tags	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^let s:old_tags=&tags$/;"	v
s:old_title	C:\exVim\vim74\optwin.vim	/^let s:old_title = &title$/;"	v
s:old_title	C:\exVim\vim74\syntax\2html.vim	/^let s:old_title = &title$/;"	v
s:old_titlestring	C:\exVim\vimfiles\bundle\ex-config\autoload\exconfig.vim	/^let s:old_titlestring=&titlestring$/;"	v
s:old_width	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:old_winfixheight	C:\exVim\vim74\syntax\2html.vim	/^let s:old_winfixheight = &l:winfixheight$/;"	v
s:old_winheight	C:\exVim\vim74\syntax\2html.vim	/^let s:old_winheight = winheight(0)$/;"	v
s:oldcolumn	C:\exVim\vim74\syntax\lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldcpo	C:\exVim\vim74\syntax\tcsh.vim	/^let s:oldcpo = &cpo$/;"	v
s:oldline	C:\exVim\vim74\syntax\lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:oneProbe	C:\exVim\vim74\syntax\dtrace.vim	/^let s:oneProbe = '\\%(BEGIN\\|END\\|ERROR\\|\\S\\{-}:\\S\\{-}:\\S\\{-}:\\S\\{-}\\)\\_s*'$/;"	v
s:one_line_scope_regex	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_time_notices_issued	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:options_list	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:options_list=[$/;"	v
s:or_replace	C:\exVim\vim74\ftplugin\sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orange	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:orange = "f99157"$/;"	v
s:orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:orders	C:\exVim\vim74\syntax\hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	C:\exVim\vim74\ftplugin\cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:orgbufnr	C:\exVim\vim74\syntax\2html.vim	/^let s:orgbufnr = winbufnr(0)$/;"	v
s:orgwin	C:\exVim\vim74\syntax\2html.vim	/^let s:orgwin = bufwinnr(s:orgbufnr)$/;"	v
s:origwin_stl	C:\exVim\vim74\syntax\2html.vim	/^let s:origwin_stl = &l:stl$/;"	v
s:ou	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:outdent	C:\exVim\vim74\indent\eiffel.vim	/^let s:outdent = '^\\s*\\(else\\|invariant\\|variant\\|do\\|require\\|until\\|loop\\|local\\)\\>'$/;"	v
s:overwin	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:overwin = {$/;"	v
s:pairs	C:\exVim\vim74\syntax\debcontrol.vim	/^let s:pairs = 'hurd-i386\\|kfreebsd-i386\\|kfreebsd-amd64\\|knetbsd-i386\\|kopensolaris-i386\\|netbsd-alpha\\|netbsd-i386'$/;"	v
s:panel	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:panel = {}$/;"	v
s:paras	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let s:paras = {}$/;"	v
s:pat	C:\exVim\vimfiles\bundle\vim-coffee-script\compiler\coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:perlpath	C:\exVim\vim74\syntax\vim.vim	/^   let s:perlpath= fnameescape(s:perlpath)$/;"	v
s:perlpath	C:\exVim\vim74\syntax\vim.vim	/^let s:perlpath= fnameescape(expand("<sfile>:p:h")."\/perl.vim")$/;"	v
s:pgb	C:\exVim\vim74\syntax\2html.vim	/^	  let s:pgb.needs_redraw = 0$/;"	v
s:pgb	C:\exVim\vim74\syntax\2html.vim	/^    let s:pgb = s:ProgressBar("Processing folds:", line('$')*2, s:orgwin)$/;"	v
s:pgb	C:\exVim\vim74\syntax\2html.vim	/^    let s:pgb.needs_redraw = 0$/;"	v
s:pgb	C:\exVim\vim74\syntax\2html.vim	/^  let s:pgb = s:ProgressBar("Processing lines:", s:end - s:lnum + 1, s:orgwin)$/;"	v
s:pre_less_cur_syn	C:\exVim\vimfiles\bundle\vim-less\after\syntax\html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:prefix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prepended	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prevc	C:\exVim\vim74\syntax\2html.vim	/^		  let s:prevc = matchstr(s:expandedtab, '.\\%' . (s:idx + 1) . 'c')$/;"	v
s:prevc	C:\exVim\vim74\syntax\2html.vim	/^		  let s:prevc = matchstr(s:line, '.\\%' . (s:startcol + s:idx + s:offset) . 'c')$/;"	v
s:preview_buffer	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:preview_buffer=[]$/;"	v
s:priorities	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:priorities = {$/;"	v
s:progressbar	C:\exVim\vim74\syntax\2html.vim	/^  let s:progressbar={}$/;"	v
s:project_name	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_menu_def.vim	/^let s:project_name=""$/;"	v
s:property	C:\exVim\vim74\indent\sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:purple	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:purple = "cc99cc"$/;"	v
s:pylint_new	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^let s:pylint_new = -1$/;"	v
s:pythonpath	C:\exVim\vim74\syntax\vim.vim	/^   let s:pythonpath= fnameescape(s:pythonpath)$/;"	v
s:pythonpath	C:\exVim\vim74\syntax\vim.vim	/^let s:pythonpath= fnameescape(expand("<sfile>:p:h")."\/python.vim")$/;"	v
s:q_adverbs	C:\exVim\vim74\syntax\perl6.vim	/^    let s:q_adverbs = [$/;"	v
s:qfix_file	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:qfix_file = '.\/error.qfix'$/;"	v
s:quiet_warnings	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:radix_chars	C:\exVim\vim74\syntax\clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:rangeEnd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:rangeEnd = 1   " line on which the range ended$/;"	v
s:rangeStart	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\jcommenter.vim	/^let s:rangeStart = 1 " line on which the range started$/;"	v
s:red	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:red = "f2777a"$/;"	v
s:red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:regexpengine	C:\exVim\vim74\syntax\perl.vim	/^  let s:regexpengine=&regexpengine$/;"	v
s:register_a	C:\exVim\vim74\syntax\hitest.vim	/^let s:register_a  = @a$/;"	v
s:register_se	C:\exVim\vim74\syntax\hitest.vim	/^let s:register_se = @\/$/;"	v
s:registered_plugin	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^let s:registered_plugin = {}$/;"	v
s:registry	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:relative_indent	C:\exVim\vim74\indent\eiffel.vim	/^let s:relative_indent = '^\\s*\\(deferred\\|class\\|feature\\|creation\\|inherit\\|loop\\|from\\|until\\|if\\|else\\|elseif\\|ensure\\|require\\|check\\|do\\|local\\|invariant\\|variant\\|rename\\|redefine\\|do\\|export\\)\\>'$/;"	v
s:repo_prototype	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:report	C:\exVim\vim74\syntax\hitest.vim	/^let s:report      = &report$/;"	v
s:repos	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:repos = {}$/;"	v
s:restore_info	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex.vim	/^let s:restore_info = '.\/restore_info'$/;"	v
s:result	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^let s:result = ''$/;"	v
s:retlines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_completion.vim	/^let s:retlines=[]$/;"	v
s:root_dir	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:routines	C:\exVim\vim74\syntax\perl6.vim	/^let s:routines = [$/;"	v
s:rst2pseudoxml	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:ruby_deindent_keywords	C:\exVim\vim74\indent\ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	C:\exVim\vim74\indent\ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	C:\exVim\vim74\ftplugin\ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	C:\exVim\vim74\ftplugin\ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	C:\exVim\vim74\ftplugin\ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	C:\exVim\vim74\ftplugin\ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	C:\exVim\vim74\autoload\rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	C:\exVim\vim74\autoload\rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubypath	C:\exVim\vim74\syntax\vim.vim	/^   let s:rubypath= fnameescape(s:rubypath)$/;"	v
s:rubypath	C:\exVim\vim74\syntax\vim.vim	/^let s:rubypath= fnameescape(expand("<sfile>:p:h")."\/ruby.vim")$/;"	v
s:rule_rx	C:\exVim\vim74\indent\make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:run_result_tempfile	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^let s:run_result_tempfile = ''$/;"	v
s:s	C:\exVim\vim74\ftplugin\ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:s	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	C:\exVim\vim74\compiler\go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\csh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\initex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\plaintex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\sgml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\svg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\tcsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\ftplugin\xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\indent\clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\indent\yaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\macros\matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\mswin.vim	/^  let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	C:\exVim\vim74\syntax\euphoria3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\syntax\euphoria4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\syntax\j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vim74\syntax\named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\emmet-vim\plugin\emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\ex-matchit\plugin\matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_add_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_disable_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_last_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\converter_remove_overlap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\matcher_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_filename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neocomplete.vim\plugin\neocomplete\tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplete\sources\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\helpers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\ftplugin\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\indent\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\plugin\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\neosnippet.vim\syntax\neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\actionscript\mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ada\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ansible\ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\apiblueprint\drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\applescript\osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asciidoc\asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\asm\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bemhtml\bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\bro\bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\c\splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cabal\cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\chef\foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\co\coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cobol\cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coffee\coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\coq\coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cpp\verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cs\mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\css\stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cucumber\cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\cuda\nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\d\dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dart\dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\docbk\igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dockerfile\dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\dustjs\swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\elixir\elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\eruby\ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\glsl\cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\go\govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haml\haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\handlebars\handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haskell\scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\haxe\haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\hss\hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\html\w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\jade\jade_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\java\javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\javascript\standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\json\jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\less\recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lex\flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\limbo\limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lisp\clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\llvm\llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\lua\luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\markdown\mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\matlab\mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\mercury\mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nasm\nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nix\nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\nroff\mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objc\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\objcpp\gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ocaml\camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\perl\perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\php\phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\po\msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\pod\podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\puppet\puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\qml\qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\r\svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\racket\racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rnc\rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\ruby\rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scala\scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\scss\scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sh\shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\slim\slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sml\smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\spec\rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sql\sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\stylus\stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tcl\nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\tex\lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\texinfo\makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\text\language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\twig\twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\typescript\tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vala\valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\verilog\verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vhdl\vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xhtml\tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xml\xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\xquery\basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yacc\bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\yaml\yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\z80\z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zpt\zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\zsh\zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\tabular\after\plugin\TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-easymotion\plugin\EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-matlab\ftplugin\matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_exc	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:save_exc              = ""$/;"	v
s:save_exc	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:save_exc = g:omni_syntax_group_exclude_sql$/;"	v
s:save_inc	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:save_inc              = ""$/;"	v
s:save_inc	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:save_inc = g:omni_syntax_group_include_sql$/;"	v
s:save_prev_table	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:save_prev_table       = ""$/;"	v
s:savecpo	C:\exVim\vim74\compiler\perl.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	C:\exVim\vimfiles\bundle\tabular\plugin\Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_cpo	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	C:\exVim\vimfiles\bundle\SingleCompile\autoload\SingleCompileAsync.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	C:\exVim\vimfiles\bundle\SingleCompile\plugin\SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:script_path	C:\exVim\vim74\autoload\phpcomplete.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:sdir	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^let s:sdir = neocomplete#util#substitute_path_separator($/;"	v
s:search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:searchpairflags	C:\exVim\vim74\indent\php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:section	C:\exVim\vim74\ftplugin\php.vim	/^let s:section = '\\(.*\\%#\\)\\@!\\_^\\s*\\zs\\('.s:function.'\\|'.s:class.'\\|'.s:interface.'\\)'$/;"	v
s:sectionend	C:\exVim\vim74\ftplugin\j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
s:sectionstart	C:\exVim\vim74\ftplugin\j.vim	/^let s:sectionstart = '.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|verb\\|monad\\|dyad\\)\\s\\+\\%(:\\s*0\\|def\\s\\+0\\|define\\)\\>.*'$/;"	v
s:seed	C:\exVim\vimfiles\bundle\emmet-vim\autoload\emmet\util.vim	/^let s:seed = localtime()$/;"	v
s:selection	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:selection = "515151"$/;"	v
s:self_file	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:settings	C:\exVim\vim74\syntax\2html.vim	/^let s:settings = tohtml#GetUserSettings()$/;"	v
s:setup_done	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic\signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:sgml_cpo_save	C:\exVim\vim74\syntax\sgml.vim	/^let s:sgml_cpo_save = &cpo$/;"	v
s:sh_fold_functions	C:\exVim\vim74\syntax\sh.vim	/^ let s:sh_fold_functions= and(g:sh_fold_enabled,1)$/;"	v
s:sh_fold_heredoc	C:\exVim\vim74\syntax\sh.vim	/^ let s:sh_fold_heredoc  = and(g:sh_fold_enabled,2)$/;"	v
s:sh_fold_ifdofor	C:\exVim\vim74\syntax\sh.vim	/^ let s:sh_fold_ifdofor  = and(g:sh_fold_enabled,4)$/;"	v
s:sh_indent_defaults	C:\exVim\vim74\indent\sh.vim	/^let s:sh_indent_defaults = {$/;"	v
s:shade_hl_defaults	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:shell	C:\exVim\vim74\syntax\sh.vim	/^  let s:shell = resolve("\/bin\/sh")$/;"	v
s:shell	C:\exVim\vim74\syntax\sh.vim	/^  let s:shell = resolve("\/usr\/bin\/sh")$/;"	v
s:shell	C:\exVim\vim74\syntax\sh.vim	/^ let s:shell = ""$/;"	v
s:shiftwidth	C:\exVim\vim74\indent\yaml.vim	/^    let s:shiftwidth = function('shiftwidth')$/;"	v
s:shortmess	C:\exVim\vim74\syntax\hitest.vim	/^let s:shortmess   = &shortmess$/;"	v
s:single_dent	C:\exVim\vim74\indent\eiffel.vim	/^let s:single_dent = '^[^-]\\+[[:alnum:]]\\+ is\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:skip	C:\exVim\vim74\indent\cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip_expr	C:\exVim\vim74\indent\ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:sol	C:\exVim\vim74\ftplugin\sh.vim	/^    let s:sol = '\\%(;\\s*\\|^\\s*\\)\\@<='  " start of line$/;"	v
s:solarized_termtrans_default	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sortKeyFormat	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^    let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sortKeyFormat	C:\exVim\vimfiles\bundle\nerdtree\lib\nerdtree\path.vim	/^    let s:sortKeyFormat = "%04d"$/;"	v
s:sorter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_filename.vim	/^let s:sorter = {$/;"	v
s:sorter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\file_include.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplete\sources\neosnippet.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:source = {$/;"	v
s:source	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source_runtime	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_user	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:sp_back	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spaceStr	C:\exVim\vimfiles\bundle\nerdcommenter\plugin\NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:spacing_errors	C:\exVim\vim74\syntax\changelog.vim	/^  let s:spacing_errors = 1$/;"	v
s:spacing_errors	C:\exVim\vim74\syntax\changelog.vim	/^  let s:spacing_errors = b:changelog_spacing_errors$/;"	v
s:spacing_errors	C:\exVim\vim74\syntax\changelog.vim	/^  let s:spacing_errors = g:changelog_spacing_errors$/;"	v
s:spc	C:\exVim\vim74\spell\he.vim	/^let s:spc = &l:spc$/;"	v
s:spc	C:\exVim\vim74\spell\yi.vim	/^let s:spc = &l:spc$/;"	v
s:spellfile_URL	C:\exVim\vim74\autoload\spellfile.vim	/^let s:spellfile_URL = ''    " Start with nothing so that s:donedict is reset.$/;"	v
s:sphinx_cache_location	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:splat_regex	C:\exVim\vim74\indent\ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:sql_file_procedure	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:sql_file_procedure    = ""$/;"	v
s:sql_file_table	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:sql_file_table        = ""$/;"	v
s:sql_file_view	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:sql_file_view         = ""$/;"	v
s:ss_pattern	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^let s:ss_pattern = '\\v''' . s:string_chunk . ''''$/;"	v
s:st	C:\exVim\vim74\syntax\tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:startcol	C:\exVim\vim74\syntax\2html.vim	/^      let s:startcol = s:col " The start column for processing text$/;"	v
s:str	C:\exVim\vim74\syntax\tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	C:\exVim\vim74\syntax\tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	C:\exVim\vim74\syntax\tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	C:\exVim\vim74\syntax\tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:string_chunk	C:\exVim\vimfiles\bundle\auto-pairs\plugin\auto-pairs.vim	/^let s:string_chunk = '\\v%(\\\\\\_.|[^\\1]|[\\r\\n]){-}'$/;"	v
s:stylelist	C:\exVim\vim74\syntax\2html.vim	/^    let s:stylelist[s:id] = '.FoldColumn { ' . s:CSS1(s:id) . '}'$/;"	v
s:stylelist	C:\exVim\vim74\syntax\2html.vim	/^  let s:stylelist = { s:LINENR_ID : ".LineNr { " . s:CSS1( s:LINENR_ID ) . "}" }$/;"	v
s:stylelist	C:\exVim\vim74\syntax\2html.vim	/^  let s:stylelist = {}$/;"	v
s:subtype	C:\exVim\vim74\syntax\liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:success	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let s:success=1$/;"	v
s:success	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let s:success=1$/;"	v
s:suite	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	C:\exVim\vimfiles\bundle\neosnippet.vim\test\functions.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:symbols_file	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:symbols_file = '.\/symbols'$/;"	v
s:syn_list	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:syn_list              = []$/;"	v
s:syn_remove_words	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^let s:syn_remove_words = 'matchgroup=,contains,'.$/;"	v
s:syn_value	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:syn_value             = []$/;"	v
s:syng_linecom	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	C:\exVim\vim74\indent\falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	C:\exVim\vim74\indent\ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	C:\exVim\vim74\indent\falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	C:\exVim\vim74\indent\ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	C:\exVim\vim74\indent\ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:t_none	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tag	C:\exVim\vim74\indent\haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:tag = ''$/;"	v
s:tag_close	C:\exVim\vim74\syntax\2html.vim	/^  let s:tag_close = ' \/>'$/;"	v
s:tag_close	C:\exVim\vim74\syntax\2html.vim	/^  let s:tag_close = '>'$/;"	v
s:tag_list	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:tag_list = []$/;"	v
s:taglib_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:taglib_loaded=[]$/;"	v
s:tags_list	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^  let s:tags_list = {}$/;"	v
s:taintopt	C:\exVim\vim74\compiler\perl.vim	/^	let s:taintopt = ''$/;"	v
s:taintopt	C:\exVim\vim74\compiler\perl.vim	/^	let s:taintopt = 'T'$/;"	v
s:target_hl2_first_defaults	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\highlight.vim	/^let s:target_hl_move = {$/;"	v
s:tbl_alias	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:tbl_alias             = []$/;"	v
s:tbl_cols	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:tbl_cols              = []$/;"	v
s:tbl_name	C:\exVim\vim74\autoload\sqlcomplete.vim	/^let s:tbl_name              = []$/;"	v
s:tclpath	C:\exVim\vim74\syntax\vim.vim	/^    let s:tclpath= fnameescape(s:tclpath)$/;"	v
s:tclpath	C:\exVim\vim74\syntax\vim.vim	/^ let s:tclpath= fnameescape(expand("<sfile>:p:h")."\/tcl.vim")$/;"	v
s:temp	C:\exVim\vim74\syntax\perl6.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	C:\exVim\vim74\syntax\perl6.vim	/^let s:temp = split(s:words_space)$/;"	v
s:temp00	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:templates	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let s:templates = []$/;"	v
s:templates	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.vim	/^let s:templates=[]$/;"	v
s:templates_ft	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_iab.vim	/^let s:templates_ft={}$/;"	v
s:terminal_italic	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminated	C:\exVim\vim74\indent\php.vim	/^let s:terminated = '\\%(\\%(;\\%(\\s*\\%(?>\\|}\\)\\)\\=\\|<<<''\\=\\a\\w*''\\=$\\|^\\s*}\\)'.s:endline.'\\)\\|^[^''"`]*[''"`]$'$/;"	v
s:terms_italic	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:ternary	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test	C:\exVim\vim74\ftplugin\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	C:\exVim\vim74\indent\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	C:\exVim\vim74\syntax\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:texMathDelimList	C:\exVim\vim74\syntax\tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	C:\exVim\vim74\syntax\tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_conceal	C:\exVim\vim74\syntax\tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	C:\exVim\vim74\syntax\tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_fast	C:\exVim\vim74\syntax\tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	C:\exVim\vim74\syntax\tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_fast	C:\exVim\vim74\syntax\tex.vim	/^ let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fast	C:\exVim\vim74\syntax\tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_no_error	C:\exVim\vim74\syntax\tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:text	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:thiswin	C:\exVim\vim74\optwin.vim	/^  let s:thiswin = winnr()$/;"	v
s:thiswin	C:\exVim\vim74\optwin.vim	/^let s:thiswin = winnr()$/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:title = "-Cscope-" $/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:title = "-GSearch-" $/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:title = "-Hierarchy-" $/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:title = "-QFix-" $/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:title = "-Symbol-" $/;"	v
s:title	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:title = "-Tags-" $/;"	v
s:tlist_app_name	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	C:\exVim\vimfiles\bundle\ex-taglist\plugin\taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:token_pattern	C:\exVim\vim74\indent\dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:top_lines	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^let s:top_lines=-1$/;"	v
s:tree_up_dir_line	C:\exVim\vimfiles\bundle\nerdtree\syntax\nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:treedepthstring	C:\exVim\vim74\autoload\netrw.vim	/^ let s:treedepthstring= "| "$/;"	v
s:treedepthstring	C:\exVim\vim74\autoload\netrw.vim	/^ let s:treedepthstring= "â "$/;"	v
s:trust_user_indent	C:\exVim\vim74\indent\eiffel.vim	/^let s:trust_user_indent = '\\(+\\)\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:trytcl	C:\exVim\vim74\syntax\vim.vim	/^ let s:trytcl= (&shell !~ '\\<\\%(bash\\>\\|4[nN][tT]\\|\\<zsh\\)\\>\\%(\\.exe\\)\\=$')$/;"	v
s:trytcl	C:\exVim\vim74\syntax\vim.vim	/^ let s:trytcl= 1$/;"	v
s:tutorfile	C:\exVim\vim74\tutor\tutor.vim	/^let s:tutorfile = "\/tutor\/tutor"$/;"	v
s:tutorxx	C:\exVim\vim74\tutor\tutor.vim	/^let s:tutorxx = $VIMRUNTIME . s:tutorfile . s:ext$/;"	v
s:type	C:\exVim\vim74\indent\ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	C:\exVim\vim74\indent\sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:type	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let s:type=''$/;"	v
s:type	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let s:type=''$/;"	v
s:type_map	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\fortran\gfortran.vim	/^let s:type_map = {}$/;"	v
s:types	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^let s:types = {$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:types=[]$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cpp_completion.vim	/^let s:types=[]$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let s:types=[]$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ruby_completion.vim	/^let s:types=[]$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_util.vim	/^let s:types=[]$/;"	v
s:types	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let s:types=[]$/;"	v
s:u	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:u           = ""$/;"	v
s:u	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\php.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\php.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\sgml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\sgml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\svg.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\svg.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\tcsh.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\tcsh.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vim74\ftplugin\xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	C:\exVim\vimfiles\bundle\vim-stylus\ftplugin\stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_lock	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^let s:undo_lock = {}$/;"	v
s:undo_spellang	C:\exVim\vim74\menu.vim	/^  let s:undo_spellang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:undotree	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^let s:undotree = s:new(s:panel)$/;"	v
s:unselInputType	C:\exVim\vim74\syntax\2html.vim	/^    let s:unselInputType = " type='invalid_input_type'"$/;"	v
s:unselInputType	C:\exVim\vim74\syntax\2html.vim	/^    let s:unselInputType = ""$/;"	v
s:usestate	C:\exVim\vimfiles\bundle\ex-indenthtml.vim\indent\html.vim	/^let s:usestate = 1$/;"	v
s:usr_input	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^let s:usr_input = ''$/;"	v
s:val	C:\exVim\vim74\indent\sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:values	C:\exVim\vim74\autoload\csscomplete.vim	/^	let s:values = split("azimuth background background-attachment background-color background-image background-position background-repeat border bottom border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color  border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width caption-side clear clip color content counter-increment counter-reset cue cue-after cue-before cursor display direction elevation empty-cells float font font-family font-size font-style font-variant font-weight height left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-right margin-left margin-top margin-bottom max-height max-width min-height min-width orphans outline outline-color outline-style outline-width overflow padding padding-top padding-right padding-bottom padding-left page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness speak speak-header speak-numeral speak-punctuation speech-rate stress table-layout text-align text-decoration text-indent text-transform top unicode-bidi vertical-align visibility voice-family volume white-space width widows word-spacing z-index")$/;"	v
s:var_stmt	C:\exVim\vimfiles\bundle\vim-javascript\indent\javascript.vim	/^let s:var_stmt = '^\\s*(const\\|let\\|var)'$/;"	v
s:varnames	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^let s:varnames = []$/;"	v
s:vcol	C:\exVim\vim74\syntax\2html.vim	/^		let s:vcol = virtcol([s:lnum, s:startcol + s:idx + s:offset - len(s:prevc)])$/;"	v
s:verbosefiles	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^let s:version = 12$/;"	v
s:version_file	C:\exVim\vim74\ftplugin\ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vim_cmdline_mapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_markdown_folding_level	C:\exVim\vimfiles\bundle\vim-markdown\after\ftplugin\markdown.vim	/^let s:vim_markdown_folding_level = get(g:, "vim_markdown_folding_level", 1)$/;"	v
s:violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vjde_cs_default_types	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_cs_completion.vim	/^let s:vjde_cs_default_types={'context' : 'System.Web.HttpContext' , 'Request' : ' System.Web.HttpRequest' , 'Response' : 'System.Web.HttpResponse'}$/;"	v
s:vjde_cs_default_types	C:\exVim\vimfiles\bundle\vjde\src\vjde_cs_completion.vim	/^let s:vjde_cs_default_types={'context' : 'System.Web.HttpContext' , 'Request' : ' System.Web.HttpRequest' , 'Response' : 'System.Web.HttpResponse'}$/;"	v
s:vjde_doccmd	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:vjde_doccmd=''$/;"	v
s:vjde_tag_loaded	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_tag_loader.vim	/^let s:vjde_tag_loaded={}$/;"	v
s:vmode	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vname	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:wait_import	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:wait_import=[]$/;"	v
s:warnopt	C:\exVim\vim74\compiler\perl.vim	/^	let s:warnopt = 'W'$/;"	v
s:warnopt	C:\exVim\vim74\compiler\perl.vim	/^	let s:warnopt = 'w'$/;"	v
s:whatterm	C:\exVim\vim74\syntax\2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	C:\exVim\vim74\syntax\2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:when_no_matched_or_others	C:\exVim\vim74\ftplugin\sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched\\>\\)\\|\\<others\\>\\)\\@!\\)'$/;"	v
s:whitespace	C:\exVim\vim74\syntax\2html.vim	/^  let s:whitespace = ""$/;"	v
s:whitespace	C:\exVim\vim74\syntax\2html.vim	/^  let s:whitespace = "white-space: pre-wrap; "$/;"	v
s:wig_cond	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:window	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:window = "4d5057"$/;"	v
s:winid_generator	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^let s:winid_generator = 0$/;"	v
s:words	C:\exVim\vim74\autoload\clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-readably*","*read-eval*","*source-path*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods",".","..","\/","<","<=","=","==",">",">=","EMPTY-NODE","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc!","assoc","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","booleans","bound-fn","bound-fn*","bound?","butlast","byte","byte-array","bytes","case","cast","catch","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","concat","cond","cond->","cond->>","condp","conj!","conj","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","def","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj!","disj","dissoc!","dissoc","distinct","distinct?","do","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","doubles","drop","drop-last","drop-while","empty","empty?","ensure","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","finally","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","identical?","identity","if","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","init-proxy","instance?","int","int-array","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","monitor-enter","monitor-exit","munge","name","namespace","namespace-munge","neg?","new","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop!","pop","pop-thread-bindings","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","quot","quote","rand","rand-int","rand-nth","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","realized?","record?","recur","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seque","sequence","sequential?","set!","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","symbol","symbol?","sync","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","throw","time","to-array","to-array-2d","trampoline","transient","tree-seq","true?","try","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unsigned-bit-shift-right","update-in","update-proxy","use","val","vals","var","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"]$/;"	v
s:words	C:\exVim\vim74\syntax\perl6.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	C:\exVim\vim74\syntax\perl6.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	C:\exVim\vim74\syntax\perl6.vim	/^    let s:words_space = join(words, " ")$/;"	v
s:words_space	C:\exVim\vim74\syntax\perl6.vim	/^let s:words_space = join(s:routines, " ")$/;"	v
s:worktree_for_dir	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrapscan	C:\exVim\vim74\syntax\hitest.vim	/^let s:wrapscan    = &wrapscan$/;"	v
s:wsh_cpo_save	C:\exVim\vim74\syntax\wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	C:\exVim\vim74\syntax\xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:xml_start	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.vim	/^let s:xml_start = -1$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\ex-colorschemes\colors\Tomorrow-Night-Eighties.vim	/^let s:yellow = "ffcc66"$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	C:\exVim\vimfiles\bundle\vim-colors-solarized\colors\solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:zipfile_escape	C:\exVim\vim74\autoload\zip.vim	/^let s:zipfile_escape = ' ?&;\\'$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^let s:zoom_in = 0$/;"	v
s:zoom_in	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^let s:zoom_in = 0$/;"	v
s:zsh_syntax_variables	C:\exVim\vim74\syntax\zsh.vim	/^  let s:zsh_syntax_variables = 'all'$/;"	v
s:zsh_syntax_variables	C:\exVim\vim74\syntax\zsh.vim	/^  let s:zsh_syntax_variables = g:zsh_syntax_variables$/;"	v
s;1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s;1$/;"	m
s;2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s;2$/;"	m
s;3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s;3$/;"	m
s<,1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s<,1$/;"	m
s<1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s<1$/;"	m
s<<1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s<<1$/;"	m
s=1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s=1$/;"	m
s=2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s=2$/;"	m
s=3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s=3$/;"	m
s>1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s>1$/;"	m
s?1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s?1$/;"	m
s@1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s@1$/;"	m
sTagFile	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^struct sTagFile {$/;"	s	file:
sTagFile::__anon65::ignorecase	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    short ignorecase;$/;"	m	struct:sTagFile::__anon65	file:	access:public
sTagFile::__anon65::name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    const char *name;$/;"	m	struct:sTagFile::__anon65	file:	access:public
sTagFile::__anon65::nameLength	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    size_t nameLength;$/;"	m	struct:sTagFile::__anon65	file:	access:public
sTagFile::__anon65::partial	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    short partial;$/;"	m	struct:sTagFile::__anon65	file:	access:public
sTagFile::__anon65::pos	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    off_t pos; $/;"	m	struct:sTagFile::__anon65	file:	access:public
sTagFile::__anon66::list	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    tagExtensionField *list;$/;"	m	struct:sTagFile::__anon66	file:	access:public
sTagFile::__anon66::max	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	    unsigned short max;$/;"	m	struct:sTagFile::__anon66	file:	access:public
sTagFile::__anon67::author	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *author;$/;"	m	struct:sTagFile::__anon67	file:	access:public
sTagFile::__anon67::name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *name;$/;"	m	struct:sTagFile::__anon67	file:	access:public
sTagFile::__anon67::url	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *url;$/;"	m	struct:sTagFile::__anon67	file:	access:public
sTagFile::__anon67::version	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *version;$/;"	m	struct:sTagFile::__anon67	file:	access:public
sTagFile::fields	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } fields;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon66	file:	access:public
sTagFile::format	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    short format;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::fp	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    FILE* fp;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::initialized	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    short initialized;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::line	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    vstring line;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::name	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    vstring name;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::pos	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    off_t pos;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::program	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } program;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon67	file:	access:public
sTagFile::search	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } search;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon65	file:	access:public
sTagFile::size	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    off_t size;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::sortMethod	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    sortType sortMethod;$/;"	m	struct:sTagFile	file:	access:public
s[1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s[1$/;"	m
s[2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s[2$/;"	m
s[3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s[3$/;"	m
s\1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\\1$/;"	m
s\2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\\2$/;"	m
s\3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s\\3$/;"	m
s]1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s]1$/;"	m
s]2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s]2$/;"	m
s]3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s]3$/;"	m
s^1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s^1$/;"	m
s_	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal s_$/;"	m
s_1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s_1$/;"	m
s`1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s`1$/;"	m
s`2	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s`2$/;"	m
s`3	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s`3$/;"	m
sa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal sa$/;"	m
saa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal saa$/;"	m
samerootsyml	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^		def save(file)$/;"	f	class:Vjde.VjdeProject
save_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist save_in, save_out;$/;"	m	struct:Agnodeinfo_t	access:public
save_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist save_in, save_out;$/;"	m	struct:Agnodeinfo_t	access:public
savebookmark	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scale	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  scale;		\/* composite device to graph units (zoom and dpi) *\/$/;"	m	struct:GVJ_s	access:public
scale	C:\exVim\graphviz\include\graphviz\types.h	/^	double scale;$/;"	m	struct:layout_t	access:public
scan	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:scan(str, pattern) abort$/;"	f
screen	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int screen;$/;"	m	struct:GVJ_s	access:public
scroll	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
scrolledwindow2	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *scrolledwindow2=NULL;\/\/		init_list_store();$/;"	v
scrolledwindow3	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *scrolledwindow3=NULL;\/\/		init_list_store();$/;"	v
sdlshapes	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<H2><A NAME=sdlshapes>SDL Shapes for PostScript<\/A><\/H2>$/;"	a
search	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:search(pattern) abort$/;"	f
search	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:search(pattern) abort$/;"	f
search	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:search(pattern) abort$/;"	f
search	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    } search;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon65	file:	access:public
search.keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
search.on_char	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
search.on_enter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
search.on_leave	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion\command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
searchDefine	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int searchDefine ;$/;"	v	file:
search_compl	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^function s:search_compl(forward)$/;"	f
search_compl_start	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^function s:search_compl_start()$/;"	f
search_compl_stop	C:\exVim\vimfiles\bundle\ex-searchcompl\plugin\searchcompl.vim	/^function s:search_compl_stop()$/;"	f
search_for_pattern	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:search_for_pattern( linenr, pattern )$/;"	f
search_result_comp	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function s:search_result_comp (line1, line2)$/;"	f
search_sync_placeholder	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:search_sync_placeholder(start, end, number) "{{{$/;"	f
search_vim_path	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\cache.vim	/^function! s:search_vim_path() "{{{$/;"	f
searchf	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtsearch_f	searchf; \/* search function	*\/$/;"	m	struct:_dtmethod_s	access:public
searchf	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	Dtsearch_f	searchf;\/* search function			*\/$/;"	m	struct:_dt_s	access:public
searchsyn	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
sed_delimiter	C:\exVim\vim74\syntax\sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	C:\exVim\vim74\syntax\sed.vim	/^	let __sed_i = __sed_i + 1$/;"	v
sed_i	C:\exVim\vim74\syntax\sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	C:\exVim\vim74\syntax\sed.vim	/^    let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_i	C:\exVim\vim74\syntax\sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	C:\exVim\vim74\syntax\sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	C:\exVim\vim74\syntax\sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	C:\exVim\vim74\syntax\sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
selected_href	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *selected_href;		\/* href of selected object - or NULL *\/$/;"	m	struct:GVJ_s	access:public
selected_obj	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *selected_obj;      \/* graph object that has been selected *\/$/;"	m	struct:GVJ_s	access:public
selected_obj_attributes	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gv_argvlist_t selected_obj_attributes; \/* attribute triplets: name, value, type *\/$/;"	m	struct:GVJ_s	access:public
selected_obj_type_name	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gv_argvlist_t selected_obj_type_name; \/* (e.g. "edge" "node3" "e" "->" "node5" "") *\/$/;"	m	struct:GVJ_s	access:public
selector	C:\exVim\vimfiles\bundle\indentLine\after\syntax\yaml.vim	/^let _selector = v:version > 703 ? '\\%#=1' : ''$/;"	v
sendToVim	C:\exVim\vim74\tools\xcmdsrv_client.c	/^char * sendToVim __ARGS((Display *dpy, char *name, char *cmd, int asKeys, int *code));$/;"	p	file:	signature:(Display *dpy, char *name, char *cmd, int asKeys, int *code)
sendToVim	C:\exVim\vim74\tools\xcmdsrv_client.c	/^sendToVim(dpy, name, cmd, asKeys, code)$/;"	f
sep	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	809;"	d	file:
sep	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	827;"	d	file:
seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned long seq[3];	\/* local object sequence number counter *\/$/;"	m	struct:Agclos_s	access:public
seq	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned seq:(sizeof(unsigned) * 8 - 4);	\/* sequence no. *\/$/;"	m	struct:Agtag_s	access:public
seq_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t seq_link;		\/* must be first *\/$/;"	m	struct:Agsubnode_s	access:public
seq_link	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dtlink_t seq_link;$/;"	m	struct:Agedge_s	access:public
set	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean set;  \/* true if position is set *\/$/;"	m	struct:textlabel_t	access:public
set	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t *set;$/;"	m	struct:Agnodeinfo_t	access:public
set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set(...) abort$/;"	f
set	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Palette\Highlight.vim	/^function! s:set(name, config)$/;"	f
set.add	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.add(x) abort$/;"	f
set.clear	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.clear() abort$/;"	f
set.difference_update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
set.discard	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.discard(e) abort$/;"	f
set.iand	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.iand(t) abort$/;"	f
set.intersection_update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
set.ior	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.ior(t) abort$/;"	f
set.isub	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.isub(t) abort$/;"	f
set.ixor	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.ixor(t) abort$/;"	f
set.pop	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.pop() abort$/;"	f
set.remove	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.remove(e) abort$/;"	f
set.symmetric_difference_update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
set.update	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\Set.vim	/^function! s:set.update(iterable) abort$/;"	f
setLoaded	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^    public void setLoaded(boolean loaded) {$/;"	m	class:ClassPathEntry	access:public	signature:(boolean loaded)
set_auto_completion_length	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_compression	C:\exVim\vim74\autoload\gzip.vim	/^fun s:set_compression(line)$/;"	f
set_default	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_menu	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! s:set_default_menu(words, source) abort "{{{$/;"	f
set_dictionary_helper	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_guicolors	C:\exVim\vim74\syntax\dircolors.vim	/^function! s:set_guicolors() abort$/;"	f
set_level_list	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:set_level_list( linenr )$/;"	f
set_para	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def set_para(n,v)$/;"	f	class:Vjde.VjdeTemplate
set_prefix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
set_snippet_dict	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\parser.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippets_file) "{{{$/;"	f
set_type	C:\exVim\graphviz\include\graphviz\types.h	/^	char set_type;$/;"	m	struct:Agraphinfo_t	access:public
setentries	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:setentries()$/;"	f
setline	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
settype	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:settype(type)$/;"	f
setupblank	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:setupblank()$/;"	f
sflag	C:\exVim\graphviz\include\graphviz\types.h	/^	int sflag, eflag;$/;"	m	struct:bezier	access:public
sg	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	    graph_t *sg;  $/;"	m	union:obj_state_s::__anon25	access:public
sh	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal sh$/;"	m
sh_maxlines	C:\exVim\vim74\syntax\sh.vim	/^  let sh_maxlines = 2 * sh_minlines$/;"	v
sh_minlines	C:\exVim\vim74\syntax\sh.vim	/^  let sh_minlines = 200$/;"	v
sha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal sha$/;"	m
shape	C:\exVim\graphviz\include\graphviz\types.h	/^	shape_desc *shape;$/;"	m	struct:Agnodeinfo_t	access:public
shape_desc	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct shape_desc {	\/* read-only shape descriptor *\/$/;"	s
shape_desc	C:\exVim\graphviz\include\graphviz\types.h	/^    } shape_desc;$/;"	t	typeref:struct:shape_desc
shape_desc::fns	C:\exVim\graphviz\include\graphviz\types.h	/^	shape_functions *fns;$/;"	m	struct:shape_desc	access:public
shape_desc::name	C:\exVim\graphviz\include\graphviz\types.h	/^	char *name;		\/* as read from graph file *\/$/;"	m	struct:shape_desc	access:public
shape_desc::polygon	C:\exVim\graphviz\include\graphviz\types.h	/^	polygon_t *polygon;	\/* base polygon info *\/$/;"	m	struct:shape_desc	access:public
shape_desc::usershape	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean usershape;$/;"	m	struct:shape_desc	access:public
shape_functions	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct shape_functions {	\/* read-only shape functions *\/$/;"	s
shape_functions	C:\exVim\graphviz\include\graphviz\types.h	/^    } shape_functions;$/;"	t	typeref:struct:shape_functions
shape_functions::codefn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*codefn) (GVJ_t * job, node_t * n);	\/* emits graphics code for node *\/$/;"	m	struct:shape_functions	access:public
shape_functions::freefn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*freefn) (node_t *);	\/* frees  shape from node u.shape_info structure *\/$/;"	m	struct:shape_functions	access:public
shape_functions::initfn	C:\exVim\graphviz\include\graphviz\types.h	/^	void (*initfn) (node_t *);	\/* initializes shape from node u.shape_info structure *\/$/;"	m	struct:shape_functions	access:public
shape_functions::insidefn	C:\exVim\graphviz\include\graphviz\types.h	/^	 boolean(*insidefn) (inside_t * inside_context, pointf);	\/* clips incident gvc->e spline on shape of gvc->n *\/$/;"	m	struct:shape_functions	access:public
shape_functions::pboxfn	C:\exVim\graphviz\include\graphviz\types.h	/^	int (*pboxfn)(node_t* n, port* p, int side, boxf rv[], int *kptr); \/* finds box path to reach port *\/$/;"	m	struct:shape_functions	access:public
shape_functions::portfn	C:\exVim\graphviz\include\graphviz\types.h	/^	 port(*portfn) (node_t *, char *, char *);	\/* finds aiming point and slope of port *\/$/;"	m	struct:shape_functions	access:public
shape_info	C:\exVim\graphviz\include\graphviz\types.h	/^	void *shape_info;$/;"	m	struct:Agnodeinfo_t	access:public
shape_kind	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef enum { SH_UNSET, SH_POLY, SH_RECORD, SH_POINT, SH_EPSF} shape_kind;$/;"	t	typeref:enum:__anon40
shape_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct shape_t {	\/* mutable shape information for a node *\/$/;"	s
shape_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } shape_t;$/;"	t	typeref:struct:shape_t
shape_t::nstrokes	C:\exVim\graphviz\include\graphviz\types.h	/^	int nstrokes;		\/* number of strokes in array *\/$/;"	m	struct:shape_t	access:public
shape_t::strokes	C:\exVim\graphviz\include\graphviz\types.h	/^	stroke_t *strokes;	\/* array of strokes *\/$/;"	m	struct:shape_t	access:public
shb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal shb$/;"	m
shellesc	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:shift(list) abort$/;"	f
shift	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:shift(list) abort$/;"	f
shift	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:shift(list) abort$/;"	f
shiftGraphs	C:\exVim\graphviz\include\graphviz\pack.h	/^    extern int shiftGraphs(int, Agraph_t**, point*, Agraph_t*, int);$/;"	p	signature:(int, Agraph_t**, point*, Agraph_t*, int)
shiftwidth	C:\exVim\vim74\indent\yaml.vim	/^    function s:shiftwidth()$/;"	f
shortest	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_create_cache	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:should_create_cache(bufnr) " {{{$/;"	f
should_use_migemo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
should_use_regexp	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
should_use_smartsign	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
should_use_wundo	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:should_use_wundo() "{{{$/;"	f
showMenu	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_boxes	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	const char **show_boxes; \/* emit code for correct box coordinates *\/$/;"	m	struct:GVCOMMON_s	access:public
show_category	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_category(category)$/;"	f
show_doc_thread	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean show_doc_thread(gpointer data) ;\/\/show the document;$/;"	p	file:	signature:(gpointer data)
show_doc_thread	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean show_doc_thread(gpointer data) {$/;"	f	signature:(gpointer data)
show_doc_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean show_doc_window(gpointer data) ;\/\/show the document;$/;"	p	file:	signature:(gpointer data)
show_doc_window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean show_doc_window(gpointer data) {\/\/show the document;$/;"	f	signature:(gpointer data)
show_done	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_done()$/;"	f
show_ng	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:show_type(type)$/;"	f
showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char	showboxes;$/;"	m	struct:Agraphinfo_t	access:public
showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char showboxes;$/;"	m	struct:Agedgeinfo_t	access:public
showboxes	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char showboxes;$/;"	m	struct:Agnodeinfo_t	access:public
shutil	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^import shutil$/;"	i
side	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char side;	\/* if port is on perimeter of node, this$/;"	m	struct:port	access:public
sidemask	C:\exVim\graphviz\include\graphviz\types.h	/^	int sidemask;$/;"	m	struct:pathend_t	access:public
sides	C:\exVim\graphviz\include\graphviz\types.h	/^	int sides;		\/* number of sides *\/$/;"	m	struct:polygon_t	access:public
sides	C:\exVim\graphviz\include\graphviz\types.h	/^	unsigned char sides;    \/* sides of node exposed to field *\/$/;"	m	struct:field_t	access:public
sign	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:sign(status)$/;"	f
sincos	C:\exVim\graphviz\include\graphviz\arith.h	/^    extern void sincos(double x, double *s, double *c);$/;"	p	signature:(double x, double *s, double *c)
sincos	C:\exVim\graphviz\include\graphviz\arith.h	96;"	d
size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		size;	\/* key size and type			*\/$/;"	m	struct:_dtdisc_s	access:public
size	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		size;	\/* number of objects			*\/$/;"	m	struct:_dtdata_s	access:public
size	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double size;$/;"	m	struct:__anon33	access:public
size	C:\exVim\graphviz\include\graphviz\textspan.h	/^ 	pointf size;$/;"	m	struct:__anon34	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:bezier	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:elist	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:nlist_t	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:splines	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf size;		\/* its dimension *\/$/;"	m	struct:field_t	access:public
size	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf size;$/;"	m	struct:layout_t	access:public
size	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double size;$/;"	m	struct:__anon58	access:public
size	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    off_t size;$/;"	m	struct:sTagFile	file:	access:public
size	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    size_t size;$/;"	m	struct:__anon64	file:	access:public
sizeXY	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^SIZE sizeXY; $/;"	v
skew	C:\exVim\graphviz\include\graphviz\types.h	/^	double skew;		\/* skew factor - as in parallelogram *\/$/;"	m	struct:polygon_t	access:public
skip_next_auto_completion	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:skip_next_auto_completion() "{{{$/;"	f
slug	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^def slug(self):$/;"	f	access:public
smart_execute_command	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smartdict_jp	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
snippets_expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! s:snippets_expand(cur_text, col) "{{{$/;"	f
snippets_expand_or_jump	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! s:snippets_expand_or_jump(cur_text, col) "{{{$/;"	f
snippets_jump_or_expand	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\mappings.vim	/^function! s:snippets_jump_or_expand(cur_text, col) "{{{$/;"	f
sob	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal sob$/;"	m
socklen_t	C:\exVim\graphviz\bin\config.h	490;"	d
sort	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		sortType sort;$/;"	m	struct:__anon70::__anon72	access:public
sortMethod	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^    sortType sortMethod;$/;"	m	struct:sTagFile	file:	access:public
sortType	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^} sortType ;$/;"	t	typeref:enum:__anon68
sort_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_filename	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:sort_filename( i1, i2 )$/;"	f
sort_mappings	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\keymap.vim	/^function! s:sort_mappings( i1, i2 )$/;"	f
sort_search_result	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function s:sort_search_result( start, end )$/;"	f
sorter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_filename.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\filters\sorter_word.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplete\sources\neosnippet.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_position	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\file.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_words	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
source.get_keyword_pos	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.hooks.on_final	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\dictionary.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\member.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\omni.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\tag.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\sources\buffer.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.hooks.on_post_filter	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplete\sources\neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.initialize	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neocomplcache\sources\snippets_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source_runtime.action_table.unite__new_candidate.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_runtime.gather_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) "{{{$/;"	f
source_user.action_table.unite__new_candidate.func	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_user.gather_candidates	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) "{{{$/;"	f
sp	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf sp, ep;$/;"	m	struct:bezier	access:public
spa	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal spa$/;"	m
space	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf space; \/* the diagonal size of the space for the label *\/$/;"	m	struct:textlabel_t	access:public
space	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String space;$/;"	f	class:Struts2Configure.MyAction	access:public
space	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String space;$/;"	f	class:Struts2Simple.MyAction	access:public
span	C:\exVim\graphviz\include\graphviz\types.h	/^		textspan_t *span;$/;"	m	struct:textlabel_t::__anon38::__anon39	access:public
span	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:span(f, xs) abort$/;"	f
span	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:span(f, xs) abort$/;"	f
span	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal spb$/;"	m
spc	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal spc$/;"	m
spellfile#GetDirChoices	C:\exVim\vim74\autoload\spellfile.vim	/^function! spellfile#GetDirChoices()$/;"	f
spellfile#LoadFile	C:\exVim\vim74\autoload\spellfile.vim	/^function! spellfile#LoadFile(lang)$/;"	f
spellfile#Nread	C:\exVim\vim74\autoload\spellfile.vim	/^function! spellfile#Nread(fname)$/;"	f
spellfile#WritableSpellDir	C:\exVim\vim74\autoload\spellfile.vim	/^function! spellfile#WritableSpellDir()$/;"	f
spl	C:\exVim\graphviz\include\graphviz\types.h	/^	splines *spl;$/;"	m	struct:Agedgeinfo_t	access:public
splineInfo	C:\exVim\graphviz\include\graphviz\types.h	/^    } splineInfo;$/;"	t	typeref:struct:__anon37
splineMerge	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean(*splineMerge) (node_t * n);	\/* Is n a node in the middle of an edge? *\/$/;"	m	struct:__anon37	access:public
splines	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct splines {$/;"	s
splines	C:\exVim\graphviz\include\graphviz\types.h	/^    } splines;$/;"	t	typeref:struct:splines
splines::bb	C:\exVim\graphviz\include\graphviz\types.h	/^	boxf bb;$/;"	m	struct:splines	access:public
splines::list	C:\exVim\graphviz\include\graphviz\types.h	/^	bezier *list;$/;"	m	struct:splines	access:public
splines::size	C:\exVim\graphviz\include\graphviz\types.h	/^	int size;$/;"	m	struct:splines	access:public
split3	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_keys	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\String.vim	/^function! s:split_by_keys(str)$/;"	f
split_leftright	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
spring	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
sprintXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern char* sprintXDot (xdot*);$/;"	p	signature:(xdot*)
sqlcomplete#Complete	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#Complete(findstart, base)$/;"	f
sqlcomplete#DrillIntoTable	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillIntoTable()$/;"	f
sqlcomplete#DrillOutOfColumns	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillOutOfColumns()$/;"	f
sqlcomplete#Map	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#Map(type)$/;"	f
sqlcomplete#PreCacheSyntax	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#PreCacheSyntax(...)$/;"	f
sqlcomplete#ResetCacheSyntax	C:\exVim\vim74\autoload\sqlcomplete.vim	/^function! sqlcomplete#ResetCacheSyntax(...)$/;"	f
src	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	String src;$/;"	f	class:Document	access:default
ssize_t	C:\exVim\graphviz\include\graphviz\gvpr.h	/^typedef int ssize_t;$/;"	t
stack	C:\exVim\vimfiles\asm-support\main.asm	/^stack segment$/;"	l
stage_info	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	C:\exVim\graphviz\include\graphviz\types.h	/^	port start, end;$/;"	m	struct:path	access:public
start	C:\exVim\vimfiles\asm-support\main.asm	/^start:$/;"	l
start	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^  let start = reltime()$/;"	v
start_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
statXDot	C:\exVim\graphviz\include\graphviz\xdot.h	/^extern int statXDot (xdot*, xdot_stats*);$/;"	p	signature:(xdot*, xdot_stats*)
state	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agdstate_t state;		\/* resource closures *\/$/;"	m	struct:Agclos_s	access:public
state	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    void *state;		\/* closure *\/$/;"	m	struct:Agcbstack_s	access:public
state	C:\exVim\graphviz\include\graphviz\types.h	/^	char state;$/;"	m	struct:Agnodeinfo_t	access:public
status	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	} status;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon71	access:public
stepmatch	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	C:\exVim\vim74\ftplugin\cucumber.vim	/^function! s:steps(lnum)$/;"	f
stopcolor	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	gvcolor_t pencolor, fillcolor, stopcolor;$/;"	m	struct:obj_state_s	access:public
stoped	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^BOOL stoped ;$/;"	v
stoped	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^BOOL stoped ;$/;"	v
stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_color_stop* stops;$/;"	m	struct:__anon48	access:public
stops	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_color_stop* stops;$/;"	m	struct:__anon49	access:public
store	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
str	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    char **str;			\/* the attribute string values *\/$/;"	m	struct:Agattr_s	access:public
str	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char *str;      \/* stored in utf-8 *\/$/;"	m	struct:textpara_t	access:public
str	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char *str;      \/* stored in utf-8 *\/$/;"	m	struct:__anon34	access:public
strchars	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^  function! s:strchars(str) abort$/;"	f
strdict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Dict_t *strdict;		\/* shared string dict *\/$/;"	m	struct:Agclos_s	access:public
stretch	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* stretch;$/;"	m	struct:_PostscriptAlias	access:public
stretch	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* stretch;$/;"	m	struct:_PostscriptAlias	access:public
strict	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    unsigned strict:1;		\/* if multi-edges forbidden *\/$/;"	m	struct:Agdesc_s	access:public
string	C:\exVim\graphviz\bin\exparse.h	/^	char*		string;$/;"	m	union:EXSTYPE	access:public
string	C:\exVim\graphviz\include\graphviz\color.h	/^	char *string;$/;"	m	union:color_s::__anon7	access:public
stringtype	C:\exVim\graphviz\include\graphviz\usershape.h	/^	char *stringtype;$/;"	m	struct:usershape_s	access:public
strip	C:\exVim\vim74\indent\bst.vim	/^function! s:strip(lnum)$/;"	f
strip	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:strip(str)$/;"	f
stripped	C:\exVim\vim74\indent\cobol.vim	/^function! s:stripped(lnum)$/;"	f
strnuppercmp	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int strnuppercmp (const char *s1, const char *s2, size_t n)$/;"	f	file:	signature:(const char *s1, const char *s2, size_t n)
stroke_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct stroke_t {	\/* information about a single stroke *\/$/;"	s
stroke_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } stroke_t;$/;"	t	typeref:struct:stroke_t
stroke_t::flags	C:\exVim\graphviz\include\graphviz\types.h	/^	int flags;		\/* stroke style flags *\/$/;"	m	struct:stroke_t	access:public
stroke_t::nvertices	C:\exVim\graphviz\include\graphviz\types.h	/^	int nvertices;		\/* number of points in the stroke *\/$/;"	m	struct:stroke_t	access:public
stroke_t::vertices	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *vertices;	\/* array of vertex points *\/$/;"	m	struct:stroke_t	access:public
strokes	C:\exVim\graphviz\include\graphviz\types.h	/^	stroke_t *strokes;	\/* array of strokes *\/$/;"	m	struct:shape_t	access:public
struppercmp	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static int struppercmp (const char *s1, const char *s2)$/;"	f	file:	signature:(const char *s1, const char *s2)
strwidth	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
style	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* style;$/;"	m	struct:_PostscriptAlias	access:public
style	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* style;$/;"	m	struct:_PostscriptAlias	access:public
style	C:\exVim\graphviz\include\graphviz\xdot.h	/^      char* style;             \/* xd_style *\/$/;"	m	union:_xdot_op::__anon61	access:public
sub	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sublist	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subprocess	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^import subprocess, sys $/;"	i
substitute_items	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:substitute_items(str, date, user, prefix)$/;"	f
substitute_last	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_placeholder_marker	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\neosnippet\view.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) "{{{$/;"	f
suffix	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
suite.escape	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^function! s:suite.escape()$/;"	f
suite.fuzzy	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^function! s:suite.fuzzy()$/;"	f
suite.get_completed_snippet	C:\exVim\vimfiles\bundle\neosnippet.vim\test\functions.vim	/^function! s:suite.get_completed_snippet()$/;"	f
suite.get_in_paren	C:\exVim\vimfiles\bundle\neosnippet.vim\test\functions.vim	/^function! s:suite.get_in_paren()$/;"	f
suite.overlap	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^function! s:suite.overlap()$/;"	f
suite.sort	C:\exVim\vimfiles\bundle\neocomplete.vim\test\neocomplete.vim	/^function! s:suite.sort()$/;"	f
sum_t	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
support	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="support"><H3>How do I get support?<\/H3><\/A>$/;"	a
svg_font_family	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_family;$/;"	m	struct:_PostscriptAlias	access:public
svg_font_family	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_family;$/;"	m	struct:_PostscriptAlias	access:public
svg_font_style	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_style;$/;"	m	struct:_PostscriptAlias	access:public
svg_font_style	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_style;$/;"	m	struct:_PostscriptAlias	access:public
svg_font_weight	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char* svg_font_weight;$/;"	m	struct:_PostscriptAlias	access:public
svg_font_weight	C:\exVim\graphviz\include\graphviz\textspan.h	/^	char* svg_font_weight;$/;"	m	struct:_PostscriptAlias	access:public
sw	C:\exVim\vim74\indent\go.vim	/^  function s:sw() abort$/;"	f
swapEnds	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean(*swapEnds) (edge_t * e);	\/* Should head and tail be swapped? *\/$/;"	m	struct:__anon37	access:public
syn	C:\exVim\vim74\indent\cucumber.vim	/^function! s:syn(lnum)$/;"	f
sync	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
synname	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:synname()$/;"	f
syntastic	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	C:\exVim\vimfiles\bundle\syntastic\plugin\syntastic.vim	/^augroup syntastic$/;"	a
syntastic	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\rst\sphinx.vim	/^augroup syntastic$/;"	a
syntastic	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\sass\sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#jscs	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#jscs(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#scss_lint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#scss_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setWids	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	C:\exVim\vimfiles\bundle\syntastic\autoload\syntastic\util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\changes.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\line.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\tag.vim	/^fu! s:syntax()$/;"	f
syntax	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\undo.vim	/^fu! s:syntax()$/;"	f
syntax_manual	C:\exVim\vim74\syntax\manual.vim	/^let syntax_manual = 1$/;"	v
syntax_on	C:\exVim\vim74\syntax\synload.vim	/^let syntax_on = 1$/;"	v
syntaxcomplete#Complete	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f
syntaxcomplete#OmniSyntaxList	C:\exVim\vim74\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f
syntaxset	C:\exVim\vim74\syntax\nosyntax.vim	/^augroup syntaxset$/;"	a
syntaxset	C:\exVim\vim74\syntax\syntax.vim	/^augroup syntaxset$/;"	a
sys	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^import subprocess, sys $/;"	i
sys	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^import sys$/;"	i
sys	C:\exVim\vimfiles\py-support\main.py	/^import sys$/;"	i
system	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! s:system(cmd) abort$/;"	f
system	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Process.vim	/^function! s:system(str, ...) abort$/;"	f
system_with_default	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:system_with_default(command, default)$/;"	f
sz	C:\exVim\graphviz\include\graphviz\pack.h	/^	int sz;			\/* row\/column size size *\/$/;"	m	struct:__anon32	access:public
sz	C:\exVim\graphviz\include\graphviz\xdot.h	/^    int sz;   \/* sizeof structure containing xdot_op as first field *\/$/;"	m	struct:__anon62	access:public
sz_knowncolors	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int sz_knowncolors;$/;"	m	struct:__anon20	access:public
s{1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s{1$/;"	m
s|1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s|1$/;"	m
s}1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s}1$/;"	m
s~1	C:\exVim\vimfiles\bundle\vim-easymotion\t\smartsign_spec.vim	/^        normal s~1$/;"	m
t	C:\exVim\graphviz\include\graphviz\types.h	/^	double **dist, **spring, **sum_t, ***t;$/;"	m	struct:Agraphinfo_t	access:public
t	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
t:vjde_preview_num	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.vim	/^    let t:vjde_preview_num=-1$/;"	v
t;	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal t;$/;"	m
t;a	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal t;a$/;"	m
tH	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal tH$/;"	m
tab2spacelen	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
tabular#DoGTabularize	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	C:\exVim\vimfiles\bundle\tabular\autoload\tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tads_minlines	C:\exVim\vim74\syntax\tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	C:\exVim\vim74\syntax\tads.vim	/^  let tads_sync_dist = 100$/;"	v
tag	C:\exVim\graphviz\include\graphviz\cgraph.h	/^    Agtag_t tag;$/;"	m	struct:Agobj_s	access:public
tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agedge_t	access:public
tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agnode_t	access:public
tag	C:\exVim\graphviz\include\graphviz\graph.h	/^	int tag:4;$/;"	m	struct:Agraph_t	access:public
tag	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	guint tag = 0;\/\/timeout id$/;"	v
tagClass?	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def tagClass?()$/;"	f	class:Vjde.CtagsTag
tagEntry	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^} tagEntry;$/;"	t	typeref:struct:__anon75
tagExtensionField	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^} tagExtensionField;$/;"	t	typeref:struct:__anon74
tagFile	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^typedef struct sTagFile tagFile;$/;"	t	typeref:struct:sTagFile
tagFileInfo	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^} tagFileInfo;$/;"	t	typeref:struct:__anon70
tagMaps	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^	static HashMap tagMaps= new HashMap();$/;"	f	class:Document	access:default
tagMethod?	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def tagMethod?()$/;"	f	class:Vjde.CtagsTag
tagResult	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	t	typeref:enum:__anon69
tagsClose	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsClose (tagFile *const file)$/;"	f	signature:(tagFile *const file)
tagsClose	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsClose (tagFile *const file);$/;"	p	signature:(tagFile *const file)
tagsField	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern const char *tagsField (const tagEntry *const entry, const char *const key)$/;"	f	signature:(const tagEntry *const entry, const char *const key)
tagsField	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern const char *tagsField (const tagEntry *const entry, const char *const key);$/;"	p	signature:(const tagEntry *const entry, const char *const key)
tagsFind	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsFind (tagFile *const file, tagEntry *const entry,$/;"	f	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
tagsFind	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsFind (tagFile *const file, tagEntry *const entry, const char *const name, const int options);$/;"	p	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
tagsFindNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsFindNext (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsFindNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsFindNext (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsFirst	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsFirst (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsFirst	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsFirst (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsNext (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsNext	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsNext (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsOpen	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagFile *tagsOpen (const char *const filePath, tagFileInfo *const info)$/;"	f	signature:(const char *const filePath, tagFileInfo *const info)
tagsOpen	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagFile *tagsOpen (const char *const filePath, tagFileInfo *const info);$/;"	p	signature:(const char *const filePath, tagFileInfo *const info)
tagsSetSortType	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^extern tagResult tagsSetSortType (tagFile *const file, const sortType type)$/;"	f	signature:(tagFile *const file, const sortType type)
tagsSetSortType	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^extern tagResult tagsSetSortType (tagFile *const file, const sortType type);$/;"	p	signature:(tagFile *const file, const sortType type)
tail	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnode_t *head, *tail;$/;"	m	struct:Agedge_t	access:public
tail	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **store, **limit, **head, **tail;$/;"	m	struct:nodequeue	access:public
tail	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:tail()$/;"	f
tail_label	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
tail_port	C:\exVim\graphviz\include\graphviz\types.h	/^	port tail_port, head_port;$/;"	m	struct:Agedgeinfo_t	access:public
tail_z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
tailendurl_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int tailendurl_map_n;           \/* tail end intersection with node *\/$/;"	m	struct:obj_state_s	access:public
tailendurl_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *tailendurl_map_p;$/;"	m	struct:obj_state_s	access:public
taillabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *taillabel;$/;"	m	struct:obj_state_s	access:public
tailtarget	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailtarget;$/;"	m	struct:obj_state_s	access:public
tailtooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailtooltip;$/;"	m	struct:obj_state_s	access:public
tailurl	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tailurl;$/;"	m	struct:obj_state_s	access:public
take_while	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:take_while(f, xs) abort$/;"	f
tar	C:\exVim\vim74\plugin\tarPlugin.vim	/^augroup tar$/;"	a
tar#Browse	C:\exVim\vim74\autoload\tar.vim	/^fun! tar#Browse(tarfile)$/;"	f
tar#Diff	C:\exVim\vim74\autoload\tar.vim	/^fun! tar#Diff(userfname,fname)$/;"	f
tar#Read	C:\exVim\vim74\autoload\tar.vim	/^fun! tar#Read(fname,mode)$/;"	f
tar#Vimuntar	C:\exVim\vim74\autoload\tar.vim	/^fun! tar#Vimuntar(...)$/;"	f
tar#Write	C:\exVim\vim74\autoload\tar.vim	/^fun! tar#Write(fname)$/;"	f
target	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *target;           \/* if GVRENDER_DOES_TARGETS *\/$/;"	m	struct:obj_state_s	access:public
tb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal tb$/;"	m
tba	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal tba$/;"	m
tempname	C:\exVim\vim74\autoload\gzip.vim	/^fun s:tempname(name)$/;"	f
terminate	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^static void terminate (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
test	C:\exVim\vimfiles\bundle\emmet-vim\unittest.vim	/^function! s:test(...)$/;"	f
testtry	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^    private String testtry(){$/;"	m	class:CalculateStats	file:	access:private	signature:()
text	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
text	C:\exVim\graphviz\include\graphviz\xdot.h	/^      xdot_text text;          \/* xd_text *\/$/;"	m	union:_xdot_op::__anon61	access:public
text	C:\exVim\graphviz\include\graphviz\xdot.h	/^  char* text;$/;"	m	struct:__anon56	access:public
text	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\python\codec.py	/^        text = fle.readlines()$/;"	v
textdialog	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
textfont_t	C:\exVim\graphviz\include\graphviz\textspan.h	/^    } textfont_t;$/;"	t	typeref:struct:__anon33
textlabel_t	C:\exVim\graphviz\include\graphviz\types.h	/^    typedef struct textlabel_t {$/;"	s
textlabel_t	C:\exVim\graphviz\include\graphviz\types.h	/^    } textlabel_t;$/;"	t	typeref:struct:textlabel_t
textlabel_t::__anon38::__anon39::nspans	C:\exVim\graphviz\include\graphviz\types.h	/^		short nspans;$/;"	m	struct:textlabel_t::__anon38::__anon39	access:public
textlabel_t::__anon38::__anon39::span	C:\exVim\graphviz\include\graphviz\types.h	/^		textspan_t *span;$/;"	m	struct:textlabel_t::__anon38::__anon39	access:public
textlabel_t::__anon38::html	C:\exVim\graphviz\include\graphviz\types.h	/^	    htmllabel_t *html;$/;"	m	union:textlabel_t::__anon38	access:public
textlabel_t::__anon38::txt	C:\exVim\graphviz\include\graphviz\types.h	/^	    } txt;$/;"	m	union:textlabel_t::__anon38	typeref:struct:textlabel_t::__anon38::__anon39	access:public
textlabel_t::charset	C:\exVim\graphviz\include\graphviz\types.h	/^	int charset;$/;"	m	struct:textlabel_t	access:public
textlabel_t::dimen	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf dimen; \/* the diagonal size of the label (estimated by layout) *\/$/;"	m	struct:textlabel_t	access:public
textlabel_t::fontcolor	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
textlabel_t::fontname	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
textlabel_t::fontsize	C:\exVim\graphviz\include\graphviz\types.h	/^	double fontsize;$/;"	m	struct:textlabel_t	access:public
textlabel_t::html	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean html; \/* true if html label *\/$/;"	m	struct:textlabel_t	access:public
textlabel_t::pos	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf pos;   \/* the center of the space for the label *\/$/;"	m	struct:textlabel_t	access:public
textlabel_t::set	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean set;  \/* true if position is set *\/$/;"	m	struct:textlabel_t	access:public
textlabel_t::space	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf space; \/* the diagonal size of the space for the label *\/$/;"	m	struct:textlabel_t	access:public
textlabel_t::text	C:\exVim\graphviz\include\graphviz\types.h	/^	char *text, *fontname, *fontcolor;$/;"	m	struct:textlabel_t	access:public
textlabel_t::u	C:\exVim\graphviz\include\graphviz\types.h	/^	} u;$/;"	m	struct:textlabel_t	typeref:union:textlabel_t::__anon38	access:public
textlabel_t::valign	C:\exVim\graphviz\include\graphviz\types.h	/^	char valign;  \/* 't' 'c' 'b' *\/$/;"	m	struct:textlabel_t	access:public
textlayout	C:\exVim\graphviz\include\graphviz\gvplugin_textlayout.h	/^	boolean (*textlayout) (textspan_t *span, char** fontpath);$/;"	m	struct:gvtextlayout_engine_s	access:public
textpara_t	C:\exVim\graphviz\include\graphviz\textpara.h	/^    typedef struct textpara_t {$/;"	s
textpara_t	C:\exVim\graphviz\include\graphviz\textpara.h	/^    } textpara_t;$/;"	t	typeref:struct:textpara_t
textpara_t::fontname	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char *fontname; $/;"	m	struct:textpara_t	access:public
textpara_t::fontsize	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
textpara_t::free_layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	void (*free_layout) (void *layout);   \/* FIXME - this is ugly *\/$/;"	m	struct:textpara_t	access:public
textpara_t::height	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
textpara_t::just	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char just;	\/* 'l' 'n' 'r' *\/$/;"	m	struct:textpara_t	access:public
textpara_t::layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	void *layout;$/;"	m	struct:textpara_t	access:public
textpara_t::postscript_alias	C:\exVim\graphviz\include\graphviz\textpara.h	/^	PostscriptAlias *postscript_alias; $/;"	m	struct:textpara_t	access:public
textpara_t::str	C:\exVim\graphviz\include\graphviz\textpara.h	/^	char *str;      \/* stored in utf-8 *\/$/;"	m	struct:textpara_t	access:public
textpara_t::width	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
textpara_t::yoffset_centerline	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
textpara_t::yoffset_layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
textspan	C:\exVim\graphviz\include\graphviz\gvplugin_render.h	/^	void (*textspan) (GVJ_t * job, pointf p, textspan_t * span);$/;"	m	struct:gvrender_engine_s	access:public
textspan_t	C:\exVim\graphviz\include\graphviz\textspan.h	/^    } textspan_t;$/;"	t	typeref:struct:__anon34
tha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal tha$/;"	m
thb	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal thb$/;"	m
thc	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal thc$/;"	m
theta	C:\exVim\graphviz\include\graphviz\types.h	/^	double theta;		\/* slope in radians *\/$/;"	m	struct:port	access:public
threading	C:\exVim\vimfiles\inoscript.vim	/^import threading$/;"	m
throw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:throw(message) abort$/;"	f
throw	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^function! s:throw(exp, where)$/;"	f
throw	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw_cmd	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
time	C:\exVim\vimfiles\inoscript.vim	/^import time$/;"	m
timeout_handler	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	guint timeout_handler = 0;$/;"	v
tipsWnd	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^_DL_EXPORT int tipsWnd(char *in)$/;"	f	signature:(char *in)
tipsWnd	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^_DL_EXPORT int tipsWnd(char *in)$/;"	f	signature:(char *in)
tn	C:\exVim\vimfiles\bundle\vjde\src\CSParser.cs	/^            static string tn = null;$/;"	f	class:Wangfc.CSParser	file:	access:private
tn	C:\exVim\vimfiles\bundle\vjde\src\TypeFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
tn	C:\exVim\vimfiles\bundle\vjde\src\UsingFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
toOut	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	public void toOut() {$/;"	m	class:Struts2Configure	access:public	signature:()
toOut	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	public void toOut() {$/;"	m	class:Struts2Simple	access:public	signature:()
toString	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^    public String toString() {$/;"	m	class:ClassPathDir	access:public	signature:()
toString	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    public String toString() {$/;"	m	class:ClassPathZip	access:public	signature:()
to_arr_str	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_arr_str$/;"	f	class:Vjde.JavaMethod
to_cfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_cfu$/;"	f	class:Vjde.JavaField
to_cfu	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_cfu$/;"	f	class:Vjde.JavaMethod
to_orig	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *to_orig;	\/* for dot's shapes.c    *\/$/;"	m	struct:Agedgeinfo_t	access:public
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                    def to_s$/;"	f	class:Vjde.JavaConstructor
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_s$/;"	f	class:Vjde.JavaClass
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_s$/;"	f	class:Vjde.JavaField
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_completion.rb	/^                def to_s$/;"	f	class:Vjde.JavaMethod
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_ctags_support.rb	/^        def to_s()$/;"	f	class:Vjde.CtagsTag
to_s	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_template.rb	/^        def to_s$/;"	f	class:Vjde.VjdeTemplate
to_stdout	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\genvimdata.rb	/^    def to_stdout$/;"	f	class:Generator
to_stdout	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\tld2xmldata.rb	/^    def to_stdout$/;"	f	class:Generator
to_string	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
to_text	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^        def to_text$/;"	f	class:Vjde.JavadocReader
to_text_arr	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\vjde_javadoc.rb	/^        def to_text_arr$/;"	f	class:Vjde.JavadocReader
to_virt	C:\exVim\graphviz\include\graphviz\types.h	/^	edge_t *to_virt;$/;"	m	struct:Agedgeinfo_t	access:public
todo_help_size	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let todo_help_size=3$/;"	v
todo_list	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list() $/;"	f
todo_list_help	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_help()$/;"	f
todo_list_init	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_init()$/;"	f
todo_list_jump	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_jump()$/;"	f
todo_list_open_only	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let todo_list_open_only=1$/;"	v
todo_list_openfile	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_openfile(filename)$/;"	f
todo_list_refresh	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_refresh()$/;"	f
todo_list_refresh_file	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_refresh_file()$/;"	f
todo_list_retrive	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:todo_list_retrive(flags)$/;"	f
todo_list_size	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let todo_list_size=30$/;"	v
todo_list_title	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let todo_list_title='__Todo_List__'$/;"	v
todo_list_vertical	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^let todo_list_vertical=1$/;"	v
toend	C:\exVim\vim74\ftplugin\cobol.vim	/^function! s:toend(direction)$/;"	f
toggleIgnoreFilter	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:toggleZoom()$/;"	f
toggle_todo_list	C:\exVim\vimfiles\bundle\vjde\plugin\vjde_todolist.vim	/^function! s:toggle_todo_list()$/;"	f
togglebg#map	C:\exVim\vimfiles\bundle\vim-colors-solarized\autoload\togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
tohtml#CharsetFromEncoding	C:\exVim\vim74\autoload\tohtml.vim	/^function! tohtml#CharsetFromEncoding(settings) "{{{$/;"	f
tohtml#Convert2HTML	C:\exVim\vim74\autoload\tohtml.vim	/^func! tohtml#Convert2HTML(line1, line2) "{{{$/;"	f
tohtml#Diff2HTML	C:\exVim\vim74\autoload\tohtml.vim	/^func! tohtml#Diff2HTML(win_list, buf_list) "{{{$/;"	f
tohtml#EncodingFromCharset	C:\exVim\vim74\autoload\tohtml.vim	/^function! tohtml#EncodingFromCharset(encoding) "{{{$/;"	f
tohtml#GetOption	C:\exVim\vim74\autoload\tohtml.vim	/^func! tohtml#GetOption(settings, option, default) "{{{$/;"	f
tohtml#GetUserSettings	C:\exVim\vim74\autoload\tohtml.vim	/^func! tohtml#GetUserSettings() "{{{$/;"	f
tokenizeCtor	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeCtor(Constructor ctor) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Constructor ctor)
tokenizeField	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeField(Field field) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Field field)
tokenizeMethod	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^  private static StringBuffer tokenizeMethod(Method method) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Method method)
tooltip	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *tooltip;          \/* if GVRENDER_DOES_TOOLTIPS *\/$/;"	m	struct:obj_state_s	access:public
top	C:\exVim\graphviz\share\graphviz\doc\html\info\arrows.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\attrs.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\command.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\grammar.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\index.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\lang.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\output.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\graphviz\share\graphviz\doc\html\info\shapes.html	/^<A NAME="top"><\/A>$/;"	a
top	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int top ;$/;"	v
top	C:\exVim\vimfiles\bundle\vjde\src\tipswnd.c	/^int top ;$/;"	v
topindent	C:\exVim\vim74\ftplugin\ocaml.vim	/^function s:topindent(lnum)$/;"	f
translate_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\erlang\erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
translation	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  translation;    \/* composite translation *\/$/;"	m	struct:GVJ_s	access:public
tree_in	C:\exVim\graphviz\include\graphviz\types.h	/^	elist tree_in, tree_out;$/;"	m	struct:Agnodeinfo_t	access:public
tree_index	C:\exVim\graphviz\include\graphviz\types.h	/^	int cutvalue, tree_index;$/;"	m	struct:Agedgeinfo_t	access:public
tree_out	C:\exVim\graphviz\include\graphviz\types.h	/^	elist tree_in, tree_out;$/;"	m	struct:Agnodeinfo_t	access:public
trim	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:trim(str) abort$/;"	f
trim	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:trim(str) abort$/;"	f
trimmed_system_with_default	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:trimmed_system_with_default(command, default)$/;"	f
true	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc.true$/;"	r
truncate	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
try_reading_file	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:try_reading_file(path)$/;"	f
turn_off_hl_error	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
turn_on_hl_error	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
twilight_sparkle	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^twilight_sparkle = {0: '', 1: 'derpy'}$/;"	v
txt	C:\exVim\graphviz\include\graphviz\types.h	/^	    } txt;$/;"	m	union:textlabel_t::__anon38	typeref:struct:textlabel_t::__anon38::__anon39	access:public
type	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		type;	\/* type information			*\/$/;"	m	struct:_dt_s	access:public
type	C:\exVim\graphviz\include\graphviz\cdt.h	/^	int		type;	\/* type of operation	*\/$/;"	m	struct:_dtmethod_s	access:public
type	C:\exVim\graphviz\include\graphviz\cdt.h	/^{	int		type;	\/* type of dictionary			*\/$/;"	m	struct:_dtdata_s	access:public
type	C:\exVim\graphviz\include\graphviz\color.h	/^    color_type_t type;$/;"	m	struct:color_s	access:public
type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	const char *type;$/;"	m	struct:gvplugin_active_loadimage_t	access:public
type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	obj_type type;$/;"	m	struct:obj_state_s	access:public
type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        const char *type;$/;"	m	struct:gvplugin_active_device_s	access:public
type	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        const char *type;$/;"	m	struct:gvplugin_active_render_s	access:public
type	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	const char *type;	\/* a string name, such as "png" or "ps" that$/;"	m	struct:__anon26	access:public
type	C:\exVim\graphviz\include\graphviz\usershape.h	/^	imagetype_t type;$/;"	m	struct:usershape_s	access:public
type	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xdot_grad_type type;$/;"	m	struct:__anon50	access:public
type	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String type() {$/;"	m	class:ResultImpl	access:public	signature:()
type	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String type() {$/;"	m	class:ResultImpl2	access:public	signature:()
types	C:\exVim\graphviz\include\graphviz\gvplugin.h	/^	gvplugin_installed_t *types;$/;"	m	struct:__anon27	access:public
types	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="types">Types<\/A><\/H3>$/;"	a
types	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^import types$/;"	i
u	C:\exVim\graphviz\include\graphviz\color.h	/^    } u;$/;"	m	struct:color_s	typeref:union:color_s::__anon7	access:public
u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agedgeinfo_t u;$/;"	m	struct:Agedge_t	access:public
u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agnodeinfo_t u;$/;"	m	struct:Agnode_t	access:public
u	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agraphinfo_t u;$/;"	m	struct:Agraph_t	access:public
u	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	} u;$/;"	m	struct:obj_state_s	typeref:union:obj_state_s::__anon25	access:public
u	C:\exVim\graphviz\include\graphviz\types.h	/^	} u;$/;"	m	struct:textlabel_t	typeref:union:textlabel_t::__anon38	access:public
u	C:\exVim\graphviz\include\graphviz\xdot.h	/^    } u;$/;"	m	struct:__anon50	typeref:union:__anon50::__anon51	access:public
u	C:\exVim\graphviz\include\graphviz\xdot.h	/^    } u;$/;"	m	struct:_xdot_op	typeref:union:_xdot_op::__anon61	access:public
u	C:\exVim\vim74\macros\less.vim	/^noremap <script> u <C-U><SID>L$/;"	m
u	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        normal! u$/;"	m
uc_minlines	C:\exVim\vim74\syntax\uc.vim	/^  let uc_minlines = 10$/;"	v
uid_t	C:\exVim\graphviz\bin\config.h	496;"	d
undo_lock._save	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
undo_lock.restore	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
undo_lock.save	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
undo_lock.undobreak	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
undotree.Action	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Action(action)$/;"	f
undotree.ActionClearHistory	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionClearHistory()$/;"	f
undotree.ActionClose	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionClose()$/;"	f
undotree.ActionDiffToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionDiffToggle()$/;"	f
undotree.ActionEnter	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionEnter()$/;"	f
undotree.ActionFocusTarget	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionFocusTarget()$/;"	f
undotree.ActionGoNextSaved	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionGoNextSaved()$/;"	f
undotree.ActionGoNextState	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionGoNextState()$/;"	f
undotree.ActionGoPreviousSaved	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionGoPreviousSaved()$/;"	f
undotree.ActionGoPreviousState	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionGoPreviousState()$/;"	f
undotree.ActionHelp	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionHelp()$/;"	f
undotree.ActionInTarget	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionInTarget(cmd)$/;"	f
undotree.ActionRedo	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionRedo()$/;"	f
undotree.ActionTimestampToggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionTimestampToggle()$/;"	f
undotree.ActionUndo	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ActionUndo()$/;"	f
undotree.AppendHelp	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.AppendHelp()$/;"	f
undotree.BindAu	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.BindAu()$/;"	f
undotree.BindKey	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.BindKey()$/;"	f
undotree.ConvertInput	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.ConvertInput(updatetree)$/;"	f
undotree.Draw	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Draw()$/;"	f
undotree.GetStatusLine	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.GetStatusLine()$/;"	f
undotree.Index2Screen	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Index2Screen(index)$/;"	f
undotree.Init	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Init()$/;"	f
undotree.MarkSeqs	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.MarkSeqs()$/;"	f
undotree.Render	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Render()$/;"	f
undotree.Screen2Index	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Screen2Index(line)$/;"	f
undotree.SetTargetFocus	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.SetTargetFocus()$/;"	f
undotree.Show	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Show()$/;"	f
undotree.Toggle	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Toggle()$/;"	f
undotree.Update	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.Update()$/;"	f
undotree.UpdateDiff	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree.UpdateDiff()$/;"	f
undotree._parseNode	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotree._parseNode(in,out)$/;"	f
undotreeAction	C:\exVim\vimfiles\bundle\undotree\plugin\undotree.vim	/^function! s:undotreeAction(action)$/;"	f
unformat_ocaml_type	C:\exVim\vim74\ftplugin\ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f
uniq	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unit	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\mypython.py	/^from pinkie_pie import unit_tests as unit$/;"	i
unite#sources#file_include#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplete#define	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! unite#sources#neocomplete#define() "{{{$/;"	f
unite#sources#neocomplete#start_complete	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! unite#sources#neocomplete#start_complete() "{{{$/;"	f
unite#sources#neocomplete#start_quick_match	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\unite\sources\neocomplete.vim	/^function! unite#sources#neocomplete#start_quick_match() "{{{$/;"	f
unite#sources#neosnippet#define	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! unite#sources#neosnippet#define() "{{{$/;"	f
unite#sources#neosnippet#start_complete	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet.vim	/^function! unite#sources#neosnippet#start_complete() "{{{$/;"	f
unite#sources#neosnippet_file#define	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\unite\sources\neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() "{{{$/;"	f
univ	C:\exVim\graphviz\include\graphviz\graph.h	/^	Agdata_t *univ;$/;"	m	struct:Agraph_t	access:public
unload	C:\exVim\vim74\optwin.vim	/^fun! <SID>unload()$/;"	f
unload	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! s:unload() abort$/;"	f
unload	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! s:unload() abort$/;"	f
unload	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! s:unload() abort$/;"	f
unmapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
unmarksigns	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unput	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	135;"	d	file:
unshift	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:unshift(list, val) abort$/;"	f
upDirCurrentRootClosed	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	C:\exVim\vimfiles\bundle\nerdtree\autoload\nerdtree\ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-cscope\autoload\excscope.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-gsearch\autoload\exgsearch.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-hierarchy\autoload\exhierarchy.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-project\autoload\exproject.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-qfix\autoload\exqfix.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-symbol\autoload\exsymbol.vim	/^function s:update_help_text()$/;"	f
update_help_text	C:\exVim\vimfiles\bundle\ex-tags\autoload\extags.vim	/^function s:update_help_text()$/;"	f
update_label	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void update_label() ;$/;"	p	file:	signature:()
update_label	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	void update_label()$/;"	f	signature:()
url	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *url;              \/* if GVRENDER_DOES_MAPS *\/$/;"	m	struct:obj_state_s	access:public
url	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *url;$/;"	m	struct:sTagFile::__anon67	file:	access:public
url	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *url;$/;"	m	struct:__anon70::__anon73	access:public
url	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^		public String url;$/;"	f	class:Struts2Configure.MyAction	access:public
url	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^		public String url;$/;"	f	class:Struts2Simple.MyAction	access:public
url_bsplinemap_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int *url_bsplinemap_n;          \/* array of url_bsplinemap_poly_n ints $/;"	m	struct:obj_state_s	access:public
url_bsplinemap_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *url_bsplinemap_p;       \/* all the polygon points *\/$/;"	m	struct:obj_state_s	access:public
url_bsplinemap_poly_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int url_bsplinemap_poly_n;      \/* number of polygons in url bspline map$/;"	m	struct:obj_state_s	access:public
url_map_n	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	int url_map_n;                  \/* number of points for url map if GVRENDER_DOES_MAPS *\/$/;"	m	struct:obj_state_s	access:public
url_map_p	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf *url_map_p;$/;"	m	struct:obj_state_s	access:public
url_map_shape	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	map_shape_t url_map_shape; $/;"	m	struct:obj_state_s	access:public
usage	C:\exVim\vim74\tools\efm_perl.pl	/^sub usage {$/;"	s
usage	C:\exVim\vim74\tools\shtags.pl	/^sub usage$/;"	s
useHTML	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^        boolean useHTML = true;$/;"	f	class:Document	access:default
useShort	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean useShort = FALSE;$/;"	v
use_doc	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	gboolean use_doc=FALSE;$/;"	v
use_gui	C:\exVim\vim74\vimtutor.bat	/^:use_gui$/;"	l
use_mutt_sidebar	C:\exVim\vim74\syntax\muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
use_previous_result	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\neocomplete\complete.vim	/^function! s:use_previous_result(source, context) abort "{{{$/;"	f
use_vim	C:\exVim\vim74\vimtutor.bat	/^:use_vim$/;"	l
user	C:\exVim\graphviz\bin\exparse.h	/^	void*		user;$/;"	m	union:EXSTYPE	access:public
user	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Void_t*		user;	\/* for user's usage			*\/$/;"	m	struct:_dt_s	access:public
user_input	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	string user_input;$/;"	v
username	C:\exVim\vim74\ftplugin\changelog.vim	/^  function! s:username()$/;"	f
usershape	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean usershape;$/;"	m	struct:shape_desc	access:public
usershape_s	C:\exVim\graphviz\include\graphviz\usershape.h	/^    struct usershape_s {$/;"	s
usershape_s::data	C:\exVim\graphviz\include\graphviz\usershape.h	/^	void *data;                   \/* data loaded by a renderer *\/$/;"	m	struct:usershape_s	access:public
usershape_s::datafree	C:\exVim\graphviz\include\graphviz\usershape.h	/^	void (*datafree)(usershape_t *us); \/* renderer's function for freeing data *\/$/;"	m	struct:usershape_s	access:public
usershape_s::datasize	C:\exVim\graphviz\include\graphviz\usershape.h	/^	size_t datasize;              \/* size of data (if mmap'ed) *\/$/;"	m	struct:usershape_s	access:public
usershape_s::dpi	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
usershape_s::f	C:\exVim\graphviz\include\graphviz\usershape.h	/^	FILE *f;$/;"	m	struct:usershape_s	access:public
usershape_s::h	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
usershape_s::link	C:\exVim\graphviz\include\graphviz\usershape.h	/^	Dtlink_t link;$/;"	m	struct:usershape_s	access:public
usershape_s::macro_id	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int macro_id;$/;"	m	struct:usershape_s	access:public
usershape_s::must_inline	C:\exVim\graphviz\include\graphviz\usershape.h	/^	boolean must_inline;$/;"	m	struct:usershape_s	access:public
usershape_s::name	C:\exVim\graphviz\include\graphviz\usershape.h	/^	const char *name;$/;"	m	struct:usershape_s	access:public
usershape_s::nocache	C:\exVim\graphviz\include\graphviz\usershape.h	/^	boolean nocache;$/;"	m	struct:usershape_s	access:public
usershape_s::stringtype	C:\exVim\graphviz\include\graphviz\usershape.h	/^	char *stringtype;$/;"	m	struct:usershape_s	access:public
usershape_s::type	C:\exVim\graphviz\include\graphviz\usershape.h	/^	imagetype_t type;$/;"	m	struct:usershape_s	access:public
usershape_s::w	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
usershape_s::x	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
usershape_s::y	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
usershape_t	C:\exVim\graphviz\include\graphviz\usershape.h	/^    typedef struct usershape_s usershape_t;$/;"	t	typeref:struct:usershape_s
usrign	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
v	C:\exVim\graphviz\include\graphviz\color.h	/^    unsigned char h, s, v;$/;"	m	struct:hsvrgbacolor_t	access:public
v	C:\exVim\graphviz\include\graphviz\types.h	/^	node_t **v;		\/* ordered list of nodes in rank    *\/$/;"	m	struct:rank_t	access:public
v	C:\exVim\vim74\macros\less.vim	/^map v :silent call <SID>End()<CR>$/;"	m
vacantdict	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
valid	C:\exVim\graphviz\include\graphviz\types.h	/^	boolean valid;$/;"	m	struct:rank_t	access:public
validfile	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
valign	C:\exVim\graphviz\include\graphviz\types.h	/^	char valign;  \/* 't' 'c' 'b' *\/$/;"	m	struct:textlabel_t	access:public
vals	C:\exVim\graphviz\include\graphviz\pack.h	/^	packval_t* vals;	\/* for arrays, sort numbers *\/$/;"	m	struct:__anon32	access:public
value	C:\exVim\graphviz\include\graphviz\graph.h	/^	char *name, *value;$/;"	m	struct:Agsym_t	access:public
value	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjava.java	/^        private int value;$/;"	f	class:CalculateStats.Choices	file:	access:private
value	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var value = ([] == [1,2,3]);$/;"	r
value	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^	const char *value;$/;"	m	struct:__anon74	access:public
value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^				public String value() {$/;"	m	class:ActionImpl	access:public	signature:()
value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^				public String value() {$/;"	m	class:ActionImpl2	access:public	signature:()
value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Action	access:public	signature:()
value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Result	access:public	signature:()
value	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^    public String value() {$/;"	m	class:ResultImpl2	access:public	signature:()
var	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^var = 42$/;"	r
var	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^var: 42$/;"	r
vconfig_t	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^    typedef struct vconfig_s vconfig_t;$/;"	t	typeref:struct:vconfig_s
vera_comment_strings	C:\exVim\vim74\syntax\vera.vim	/^let vera_comment_strings = 1$/;"	v
verbose	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int verbose;$/;"	m	struct:GVCOMMON_s	access:public
version	C:\exVim\vim74\tools\shtags.pl	/^sub version$/;"	s
version	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^	char *version;$/;"	m	struct:sTagFile::__anon67	file:	access:public
version	C:\exVim\vimfiles\bundle\vjde\src\readtags.h	/^		const char *version;$/;"	m	struct:__anon70::__anon73	access:public
vertices	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *vertices;	\/* array of vertex points *\/$/;"	m	struct:polygon_t	access:public
vertices	C:\exVim\graphviz\include\graphviz\types.h	/^	pointf *vertices;	\/* array of vertex points *\/$/;"	m	struct:stroke_t	access:public
vfha	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal vfha$/;"	m
view	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dt_t*		view;	\/* next on viewpath			*\/$/;"	m	struct:_dt_s	access:public
view	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	pointf  view;		\/* viewport size - points *\/$/;"	m	struct:GVJ_s	access:public
viewNum	C:\exVim\graphviz\include\graphviz\gvcommon.h	/^	int viewNum;     \/* current view - 1 based count of views,$/;"	m	struct:GVCOMMON_s	access:public
view_changelog	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! s:view_log()$/;"	f
vim_cmdline_mapping.keymapping	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
vim_cmdline_mapping.on_enter	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Over\Commandline\Modules\KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
vim_snippets#Filename	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vim_snippets.vim	/^function! vim_snippets#Filename(...)$/;"	f
vimball#Decompress	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f
vimball#MkVimball	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vimball#VimballHome	C:\exVim\vim74\autoload\vimball.vim	/^fun! vimball#VimballHome()$/;"	f
vimentry#apply	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#apply()$/;"	f
vimentry#apply_project_type	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#apply_project_type()$/;"	f
vimentry#check	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#check( name, val )$/;"	f
vimentry#clear_vars	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#clear_vars()$/;"	f
vimentry#get	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#get( name, ... )$/;"	f
vimentry#is_first_time	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#is_first_time()$/;"	f
vimentry#on	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#on( event, funcref )$/;"	f
vimentry#parse	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#parse()$/;"	f
vimentry#reset	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#reset()$/;"	f
vimentry#write_default_template	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function vimentry#write_default_template()$/;"	f
vimlintOutput	C:\exVim\vimfiles\bundle\syntastic\syntax_checkers\vim\vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vimrcEx	C:\exVim\vim74\vimrc_example.vim	/^  augroup vimrcEx$/;"	a
visincr#VisBlockIncr	C:\exVim\vimfiles\bundle\ex-visincr\autoload\visincr.vim	/^fun! visincr#VisBlockIncr(method,...)$/;"	f
vital	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital.vim	/^function! vital#of(name) abort$/;"	f
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassInfo.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathDir.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathEntry.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassesByName.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Completion.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Document.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\DynamicClassLoader.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\MultiValueMap.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageClasses.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\PackageCompletion.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\SourceDocReader.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2ConfigureMain.java	/^package vjde.completion;$/;"	p
vjde.completion	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^package vjde.completion;$/;"	p
vstring	C:\exVim\vimfiles\bundle\vjde\src\readtags.c	/^} vstring;$/;"	t	typeref:struct:__anon64	file:
vundle#begin	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#bundle_dir	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^let vundle#bundle_dir = expand('$HOME\/.vim\/bundle', 1)$/;"	v
vundle#bundles	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^let vundle#bundles = []$/;"	v
vundle#config#activate_bundles	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#lazy_load	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^let vundle#lazy_load = 0$/;"	v
vundle#log	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^let vundle#log = []$/;"	v
vundle#rc	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle\scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
vundle#updated_bundles	C:\exVim\vimfiles\bundle\Vundle.vim\autoload\vundle.vim	/^let vundle#updated_bundles = []$/;"	v
w	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
w	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
w	C:\exVim\vim74\macros\less.vim	/^map w b$/;"	m
w	C:\exVim\vim74\tutor\tutor.cs	/^       objekt - udává rozsah pøíkazu, napøíklad  w  (slovo),$/;"	m	signature:(slovo)
w	C:\exVim\vim74\tutor\tutor.cs	/^  2. Objekty jsou také shodné, jako napø.: w (slovo), $ (konec øádku), atd.$/;"	m	signature:(slovo)
w	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	C:\exVim\vimfiles\bundle\vim-easymotion\t\operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
walk	C:\exVim\graphviz\include\graphviz\cdt.h	/^	Dt_t*		walk;	\/* dictionary being walked		*\/$/;"	m	struct:_dt_s	access:public
walkDir	C:\exVim\vimfiles\py-support\walkpath.py	/^def walkDir(rootdir):$/;"	f	access:public
walker	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Vim\Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:warn(str) abort$/;"	f
wc	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal wc$/;"	m
wcswidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
webapp	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	String webapp;$/;"	f	class:Struts2Configure	access:default
webapp	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	String webapp;$/;"	f	class:Struts2Simple	access:default
webpng	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<H3><A NAME="webpng">Webpng: a more powerful gd example<\/A><\/H3>$/;"	a
weight	C:\exVim\graphviz\include\graphviz\textpara.h	/^        char* weight;$/;"	m	struct:_PostscriptAlias	access:public
weight	C:\exVim\graphviz\include\graphviz\textspan.h	/^        char* weight;$/;"	m	struct:_PostscriptAlias	access:public
weight	C:\exVim\graphviz\include\graphviz\types.h	/^	int weight;$/;"	m	struct:Agedgeinfo_t	access:public
weight_class	C:\exVim\graphviz\include\graphviz\types.h	/^	char ranktype, weight_class;$/;"	m	struct:Agnodeinfo_t	access:public
wh	C:\exVim\vimfiles\bundle\vim-easymotion\t\easymotion_spec.vim	/^        normal wh$/;"	m
whatis	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatis"><H3>What is gd?<\/H3><\/A>$/;"	a
whatsnew1.3	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.3"><H3>What's new in version 1.3?<\/H3><\/A>$/;"	a
whatsnew1.4	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.4"><H3>What's new in version 1.4?<\/H3><\/A>$/;"	a
whatsnew1.5	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.5"><H3>What's new in version 1.5?<\/H3><\/A>$/;"	a
whatsnew1.6	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.6"><H3>What's new in version 1.6?<\/H3><\/A>$/;"	a
whatsnew1.6.1	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.6.1"><H3>What's new in version 1.6.1?<\/H3><\/A>$/;"	a
whatsnew1.6.2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.6.2"><H3>What's new in version 1.6.2?<\/H3><\/A>$/;"	a
whatsnew1.6.3	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.6.3"><H3>What's new in version 1.6.3?<\/H3><\/A>$/;"	a
whatsnew1.7	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.7"><H3>What's new in version 1.7?<\/H3><\/A>$/;"	a
whatsnew1.7.1	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.7.1"><H3>What's new in version 1.7.1?<\/H3><\/A>$/;"	a
whatsnew1.7.2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.7.2"><H3>What's new in version 1.7.2?<\/H3><\/A>$/;"	a
whatsnew1.7.3	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.7.3"><H3>What's new in version 1.7.3?<\/H3><\/A>$/;"	a
whatsnew1.8	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.8"><H3>What's new in version 1.8?<\/H3><\/A>$/;"	a
whatsnew1.8.1	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.8.1"><H3>What's new in version 1.8.1?<\/H3><\/A>$/;"	a
whatsnew1.8.2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew1.8.2"><H3>What's new in version 1.8.2?<\/H3><\/A>$/;"	a
whatsnew1.8.3	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.8.3"><H3>What's new in version 1.8.3?<\/H3><\/A>$/;"	a
whatsnew1.8.4	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew1.8.4"><H3>What's new in version 1.8.4?<\/H3><\/A>$/;"	a
whatsnew2.0	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew2.0"><H3>What's new in version 2.0?<\/H3><\/A>$/;"	a
whatsnew2.0.1	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<P><A NAME="whatsnew2.0.1"><H3>What's new in version 2.0.1?<\/H3><\/A>$/;"	a
whatsnew2.0.10	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.10"><H3>What's new in version 2.0.10?<\/H3><\/A>$/;"	a
whatsnew2.0.11	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.11"><H3>What's new in version 2.0.11?<\/H3><\/A>$/;"	a
whatsnew2.0.12	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.12"><H3>What's new in version 2.0.12?<\/H3><\/A>$/;"	a
whatsnew2.0.13	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.13"><H3>What's new in version 2.0.13?<\/H3><\/A>$/;"	a
whatsnew2.0.14	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.14"><H3>What's new in version 2.0.14?<\/H3><\/A>$/;"	a
whatsnew2.0.15	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.15"><H3>What's new in version 2.0.15?<\/H3><\/A>$/;"	a
whatsnew2.0.16	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.16"><H3>What's new in version 2.0.16?<\/H3><\/A>$/;"	a
whatsnew2.0.17	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.17"><H3>What's new in version 2.0.17?<\/H3><\/A>$/;"	a
whatsnew2.0.18	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.18"><H3>What's new in version 2.0.18?<\/H3><\/A>$/;"	a
whatsnew2.0.19	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.19"><H3>What's new in version 2.0.19?<\/H3><\/A>$/;"	a
whatsnew2.0.2	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.2"><H3>What's new in version 2.0.2?<\/H3><\/A>$/;"	a
whatsnew2.0.20	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.20"><H3>What's new in version 2.0.20?<\/H3><\/A>$/;"	a
whatsnew2.0.21	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.21"><H3>What's new in version 2.0.21?<\/H3><\/A>$/;"	a
whatsnew2.0.22	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.22"><H3>What's new in version 2.0.22?<\/H3><\/A>$/;"	a
whatsnew2.0.23	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.23"><H3>What's new in version 2.0.23?<\/H3><\/A>$/;"	a
whatsnew2.0.24	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.24"><H3>What's new in version 2.0.24?<\/H3><\/A>$/;"	a
whatsnew2.0.25	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.25"><H3>What's new in version 2.0.25?<\/H3><\/A>$/;"	a
whatsnew2.0.26	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.26"><H3>What's new in version 2.0.26?<\/H3><\/A>$/;"	a
whatsnew2.0.27	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.27"><H3>What's new in version 2.0.27?<\/H3><\/A>$/;"	a
whatsnew2.0.28	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.28"><H3>What's new in version 2.0.28?<\/H3><\/A>$/;"	a
whatsnew2.0.29	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.29"><h3>What's new in version 2.0.29?<\/h3><\/a>$/;"	a
whatsnew2.0.3	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.3"><H3>What's new in version 2.0.3?<\/H3><\/A>$/;"	a
whatsnew2.0.30	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.30"><h3>What's new in version 2.0.30?<\/h3><\/a>$/;"	a
whatsnew2.0.31	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.31"><h3>What's new in version 2.0.31?<\/h3><\/a>$/;"	a
whatsnew2.0.32	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.32"><h3>What's new in version 2.0.32?<\/h3><\/a>$/;"	a
whatsnew2.0.33	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.33"><h3>What's new in version 2.0.33?<\/h3><\/a>$/;"	a
whatsnew2.0.34	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.34"><h3>What's new in version 2.0.34?<\/h3><\/a>$/;"	a
whatsnew2.0.4	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.4"><H3>What's new in version 2.0.4?<\/H3><\/A>$/;"	a
whatsnew2.0.5	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.5"><H3>What's new in version 2.0.5?<\/H3><\/A>$/;"	a
whatsnew2.0.6	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.6"><H3>What's new in version 2.0.6?<\/H3><\/A>$/;"	a
whatsnew2.0.7	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.7"><H3>What's new in version 2.0.7?<\/H3><\/A>$/;"	a
whatsnew2.0.8	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.8"><H3>What's new in version 2.0.8?<\/H3><\/A>$/;"	a
whatsnew2.0.9	C:\exVim\graphviz\share\graphviz\doc\html\gd.html	/^<A NAME="whatsnew2.0.9"><H3>What's new in version 2.0.9?<\/H3><\/A>$/;"	a
width	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^        unsigned int width;     \/* device width - device units *\/$/;"	m	struct:GVJ_s	access:public
width	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
width	C:\exVim\graphviz\include\graphviz\types.h	/^	double width, height;  \/* inches *\/$/;"	m	struct:Agnodeinfo_t	access:public
width	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double width;$/;"	m	struct:__anon56	access:public
width	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int width;$/;"	m	struct:_Rectangle	file:	access:public
win2pos2hint_to_w2l2c2h	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
win32api	C:\exVim\vimfiles\inoscript.vim	/^import win32api$/;"	m
win32con	C:\exVim\vimfiles\inoscript.vim	/^import win32con$/;"	m
wincall	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
window	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	void *window;		\/* display-specific data for gvrender plugin *\/$/;"	m	struct:GVJ_s	access:public
window	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	GtkWidget *window=NULL;$/;"	v
winid2nr	C:\exVim\vimfiles\bundle\ex-utility\autoload\ex\window.vim	/^function s:winid2nr (winid)$/;"	f
winnr2poses_to_list	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\HitAHint\Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
winposx	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	int winposx = 0;$/;"	v
winposy	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^	int winposy = 0;$/;"	v
winshell	C:\exVim\vimfiles\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:winshell() abort$/;"	f
with	C:\exVim\vimfiles\bundle\vim-coffee-script\test\test-reserved.coffee	/^abc.with = 42$/;"	r
with_index	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:with_index(list, ...) abort$/;"	f
word	C:\exVim\vim74\spell\fixdup.vim	/^  let word = getline(lnum)$/;"	v
wpisanie	C:\exVim\vim74\tutor\tutor.pl	/^     wpisanie:		:set ic$/;"	l
wpisz	C:\exVim\vim74\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/g   by zmieniæ wszystkie wyst±pienia w ca³ym pliku.$/;"	l
wpisz	C:\exVim\vim74\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/gc  by zmieniæ wszystkie wyst±pienia w ca³ym$/;"	l
wpisz	C:\exVim\vim74\tutor\tutor.pl	/^     wpisz:			:wq<ENTER>$/;"	l
wpisz	C:\exVim\vim74\tutor\tutor.pl	/^     wpisz: :#,#s\/stare\/nowe\/g gdzie #,# s± numerami linii ograniczaj±cych$/;"	l
wpisz	C:\exVim\vim74\tutor\tutor.pl	/^  wpisz :q<ENTER>        aby zamkn±æ okno pomocy.$/;"	l
wrap	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_a	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	C:\exVim\vim74\ftplugin\ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrapperfunc_lines	C:\exVim\vim74\syntax\2html.vim	/^    let wrapperfunc_lines += [ '  endif' ]$/;"	v
wrapperfunc_lines	C:\exVim\vim74\syntax\2html.vim	/^    let wrapperfunc_lines += [$/;"	v
wrapperfunc_lines	C:\exVim\vim74\syntax\2html.vim	/^    let wrapperfunc_lines = [$/;"	v
wrapperfunc_lines	C:\exVim\vim74\syntax\2html.vim	/^  let wrapperfunc_lines += [$/;"	v
wrapperfunc_lines	C:\exVim\vim74\syntax\2html.vim	/^  let wrapperfunc_lines = [$/;"	v
wrapreg	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
write_default	C:\exVim\vimfiles\bundle\ex-vimentry\autoload\vimentry.vim	/^function s:write_default( name, default, comment )$/;"	f
write_dictionary	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^def write_dictionary(module_name, module_list):$/;"	f	access:public
write_to	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        write_to = open(PYDICTION_DICT, 'a')$/;"	v
write_to	C:\exVim\vimfiles\bundle\pydiction\pydiction.py	/^        write_to = sys.stdout$/;"	v
writecache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	C:\exVim\vimfiles\bundle\ctrlp.vim\autoload\ctrlp\bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
writefile	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\System\Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writefile	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\System\Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
x	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	m	struct:pointf_s	access:public
x	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { int x, y; } point;$/;"	m	struct:__anon8	access:public
x	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	double x, y;$/;"	m	struct:Pxy_t	access:public
x	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
x	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
x	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
x	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double x, y;$/;"	m	struct:__anon56	access:public
x	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var x = 5, j = new Object(), myarray = ['hello', 'world'];$/;"	r
x	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int x;$/;"	m	struct:_Rectangle	file:	access:public
x0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
x0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0;$/;"	m	struct:__anon48	access:public
x1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
x1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1;$/;"	m	struct:__anon48	access:public
x_error_check	C:\exVim\vim74\tools\xcmdsrv_client.c	/^static int	x_error_check __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_check	C:\exVim\vim74\tools\xcmdsrv_client.c	/^x_error_check(dpy, error_event)$/;"	f	file:
xd_center	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_left, xd_center, xd_right$/;"	e	enum:__anon52
xd_fill_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fill_color,     xd_pen_color, xd_font, xd_style, xd_image,$/;"	e	enum:__anon59
xd_filled_bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_bezier,  xd_unfilled_bezier,$/;"	e	enum:__anon59
xd_filled_ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_ellipse, xd_unfilled_ellipse,$/;"	e	enum:__anon59
xd_filled_polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_polygon, xd_unfilled_polygon,$/;"	e	enum:__anon59
xd_font	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fill_color,     xd_pen_color, xd_font, xd_style, xd_image,$/;"	e	enum:__anon59
xd_fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fontchar$/;"	e	enum:__anon59
xd_grad_fill_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_grad_fill_color,     xd_grad_pen_color,$/;"	e	enum:__anon59
xd_grad_pen_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_grad_fill_color,     xd_grad_pen_color,$/;"	e	enum:__anon59
xd_image	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fill_color,     xd_pen_color, xd_font, xd_style, xd_image,$/;"	e	enum:__anon59
xd_left	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_left, xd_center, xd_right$/;"	e	enum:__anon52
xd_linear	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_linear,$/;"	e	enum:__anon46
xd_none	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_none,$/;"	e	enum:__anon46
xd_pen_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fill_color,     xd_pen_color, xd_font, xd_style, xd_image,$/;"	e	enum:__anon59
xd_polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_polyline,       xd_text,$/;"	e	enum:__anon59
xd_radial	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_radial$/;"	e	enum:__anon46
xd_right	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_left, xd_center, xd_right$/;"	e	enum:__anon52
xd_style	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_fill_color,     xd_pen_color, xd_font, xd_style, xd_image,$/;"	e	enum:__anon59
xd_text	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_polyline,       xd_text,$/;"	e	enum:__anon59
xd_unfilled_bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_bezier,  xd_unfilled_bezier,$/;"	e	enum:__anon59
xd_unfilled_ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_ellipse, xd_unfilled_ellipse,$/;"	e	enum:__anon59
xd_unfilled_polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xd_filled_polygon, xd_unfilled_polygon,$/;"	e	enum:__anon59
xdot	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot;$/;"	t	typeref:struct:__anon62
xdot_align	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_align;$/;"	t	typeref:enum:__anon52
xdot_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_color;$/;"	t	typeref:struct:__anon50
xdot_color_stop	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_color_stop;$/;"	t	typeref:struct:__anon47
xdot_font	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_font;$/;"	t	typeref:struct:__anon58
xdot_grad_type	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_grad_type;$/;"	t	typeref:enum:__anon46
xdot_image	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_image;$/;"	t	typeref:struct:__anon57
xdot_kind	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_kind; $/;"	t	typeref:enum:__anon59
xdot_linear_grad	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_linear_grad;$/;"	t	typeref:struct:__anon48
xdot_op	C:\exVim\graphviz\include\graphviz\xdot.h	/^typedef struct _xdot_op xdot_op;$/;"	t	typeref:struct:_xdot_op
xdot_point	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_point;$/;"	t	typeref:struct:__anon53
xdot_polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_polyline;$/;"	t	typeref:struct:__anon55
xdot_radial_grad	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_radial_grad;$/;"	t	typeref:struct:__anon49
xdot_rect	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_rect;$/;"	t	typeref:struct:__anon54
xdot_stats	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_stats;$/;"	t	typeref:struct:__anon63
xdot_text	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xdot_text;$/;"	t	typeref:struct:__anon56
xdots	C:\exVim\graphviz\include\graphviz\types.h	/^	void* xdots;$/;"	m	struct:layout_t	access:public
xfig_code	C:\exVim\graphviz\include\graphviz\textpara.h	/^        int xfig_code;$/;"	m	struct:_PostscriptAlias	access:public
xfig_code	C:\exVim\graphviz\include\graphviz\textspan.h	/^        int xfig_code;$/;"	m	struct:_PostscriptAlias	access:public
xlabel	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	char *xlabel;$/;"	m	struct:obj_state_s	access:public
xlabel	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *label, *head_label, *tail_label, *xlabel;$/;"	m	struct:Agedgeinfo_t	access:public
xlabel	C:\exVim\graphviz\include\graphviz\types.h	/^	textlabel_t *xlabel;$/;"	m	struct:Agnodeinfo_t	access:public
xml_data	C:\exVim\vimfiles\bundle\vjde\plugin\vjde\tld2xmldata.rb	/^    def xml_data(str)$/;"	f	class:Generator
xmlcomplete#CompleteTags	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! xmlcomplete#CompleteTags(findstart, base)$/;"	f
xmlcomplete#CreateConnection	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateConnection(canonical, ...) " {{{$/;"	f
xmlcomplete#CreateEntConnection	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateEntConnection(...) " {{{$/;"	f
xmlcomplete#GetLastOpenTag	C:\exVim\vim74\autoload\xmlcomplete.vim	/^function! xmlcomplete#GetLastOpenTag(unaryTagsStack)$/;"	f
xop_bezier	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_bezier,$/;"	e	enum:__anon60
xop_ellipse	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_ellipse,$/;"	e	enum:__anon60
xop_fill_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fill_color,     xop_pen_color, xop_font, xop_style, xop_image,$/;"	e	enum:__anon60
xop_font	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fill_color,     xop_pen_color, xop_font, xop_style, xop_image,$/;"	e	enum:__anon60
xop_fontchar	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fontchar$/;"	e	enum:__anon60
xop_grad_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_grad_color,$/;"	e	enum:__anon60
xop_image	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fill_color,     xop_pen_color, xop_font, xop_style, xop_image,$/;"	e	enum:__anon60
xop_kind	C:\exVim\graphviz\include\graphviz\xdot.h	/^} xop_kind; $/;"	t	typeref:enum:__anon60
xop_pen_color	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fill_color,     xop_pen_color, xop_font, xop_style, xop_image,$/;"	e	enum:__anon60
xop_polygon	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_polygon,$/;"	e	enum:__anon60
xop_polyline	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_polyline,       xop_text,$/;"	e	enum:__anon60
xop_style	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_fill_color,     xop_pen_color, xop_font, xop_style, xop_image,$/;"	e	enum:__anon60
xop_text	C:\exVim\graphviz\include\graphviz\xdot.h	/^    xop_polyline,       xop_text,$/;"	e	enum:__anon60
xpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Configure.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Configure	access:default
xpath	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\Struts2Simple.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Simple	access:default
xpenalty	C:\exVim\graphviz\include\graphviz\types.h	/^	short xpenalty;$/;"	m	struct:Agedgeinfo_t	access:public
xs_not_core	C:\exVim\vim74\syntax\xs.vim	/^let xs_not_core   = 1 " mark private core functions$/;"	v
xs_superseded	C:\exVim\vim74\syntax\xs.vim	/^let xs_superseded = 1 " mark C functions superseded by Perl replacements$/;"	v
y	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct pointf_s { double x, y; } pointf;$/;"	m	struct:pointf_s	access:public
y	C:\exVim\graphviz\include\graphviz\geom.h	/^typedef struct { int x, y; } point;$/;"	m	struct:__anon8	access:public
y	C:\exVim\graphviz\include\graphviz\pathgeom.h	/^	double x, y;$/;"	m	struct:Pxy_t	access:public
y	C:\exVim\graphviz\include\graphviz\usershape.h	/^	int x, y, w, h, dpi;$/;"	m	struct:usershape_s	access:public
y	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, w, h;$/;"	m	struct:__anon54	access:public
y	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
y	C:\exVim\graphviz\include\graphviz\xdot.h	/^  double x, y;$/;"	m	struct:__anon56	access:public
y	C:\exVim\vim74\macros\less.vim	/^map y k$/;"	m
y	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^y = \/myregex\/$/;"	r
y	C:\exVim\vimfiles\bundle\vjde\src\previewwindow.cpp	/^		int y;$/;"	m	struct:_Rectangle	file:	access:public
y0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0, r0;$/;"	m	struct:__anon49	access:public
y0	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x0, y0;$/;"	m	struct:__anon48	access:public
y1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1, r1;$/;"	m	struct:__anon49	access:public
y1	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x1, y1;$/;"	m	struct:__anon48	access:public
yS	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yoffset_centerline	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
yoffset_centerline	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double yoffset_layout, yoffset_centerline;$/;"	m	struct:__anon34	access:public
yoffset_layout	C:\exVim\graphviz\include\graphviz\textpara.h	/^	double fontsize, width, height, yoffset_layout, yoffset_centerline;$/;"	m	struct:textpara_t	access:public
yoffset_layout	C:\exVim\graphviz\include\graphviz\textspan.h	/^	double yoffset_layout, yoffset_centerline;$/;"	m	struct:__anon34	access:public
yourNamespace	C:\exVim\vimfiles\bundle\erics_vim_syntax_and_color_highlighting\myjavascript.js	/^var yourNamespace = {$/;"	r
ys	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	C:\exVim\vimfiles\bundle\vim-surround\plugin\surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
yy_accept	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst short int yy_accept[367] =$/;"	v	file:
yy_at_bol	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_base	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst short int yy_base[378] =$/;"	v	file:
yy_buf_pos	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state::yy_at_bol	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_c_buf_p	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_chk	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst short int yy_chk[951] =$/;"	v	file:
yy_create_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));$/;"	p	file:	signature:( FILE *file, int size )
yy_create_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )$/;"	f	signature:( FILE *file, int size )
yy_current_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static YY_BUFFER_STATE yy_current_buffer = 0;$/;"	v	file:
yy_def	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst short int yy_def[378] =$/;"	v	file:
yy_delete_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));$/;"	p	file:	signature:( YY_BUFFER_STATE b )
yy_delete_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_delete_buffer( YY_BUFFER_STATE b )$/;"	f	signature:( YY_BUFFER_STATE b )
yy_did_buffer_switch_on_eof	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst int yy_ec[256] =$/;"	v	file:
yy_fatal_error	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));$/;"	p	file:	signature:( yyconst char msg[] )
yy_fatal_error	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_fatal_error( yyconst char msg[] )$/;"	f	file:	signature:( yyconst char msg[] )
yy_fill_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_flex_alloc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void *yy_flex_alloc YY_PROTO(( yy_size_t ));$/;"	p	file:	signature:( yy_size_t )
yy_flex_alloc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void *yy_flex_alloc( yy_size_t size )$/;"	f	file:	signature:( yy_size_t size )
yy_flex_free	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_flex_free YY_PROTO(( void * ));$/;"	p	file:	signature:( void * )
yy_flex_free	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_flex_free( void *ptr )$/;"	f	file:	signature:( void *ptr )
yy_flex_realloc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));$/;"	p	file:	signature:( void *, yy_size_t )
yy_flex_realloc	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void *yy_flex_realloc( void *ptr, yy_size_t size )$/;"	f	file:	signature:( void *ptr, yy_size_t size )
yy_flex_strlen	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_flex_strlen YY_PROTO(( yyconst char * ));$/;"	p	file:	signature:( yyconst char * )
yy_flex_strlen	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_flex_strlen( yyconst char *s )$/;"	f	file:	signature:( yyconst char *s )
yy_flex_strncpy	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));$/;"	p	file:	signature:( char *, yyconst char *, int )
yy_flex_strncpy	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )$/;"	f	file:	signature:( char *s1, yyconst char *s2, int n )
yy_flush_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));$/;"	p	file:	signature:( YY_BUFFER_STATE b )
yy_flush_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_flush_buffer( YY_BUFFER_STATE b )$/;"	f	signature:( YY_BUFFER_STATE b )
yy_get_next_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_get_next_buffer YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_get_next_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_get_next_buffer()$/;"	f	file:
yy_get_previous_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yy_state_type yy_get_previous_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_get_previous_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yy_state_type yy_get_previous_state()$/;"	f	file:
yy_hold_char	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_init = 1;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));$/;"	p	file:	signature:( YY_BUFFER_STATE b, FILE *file )
yy_init_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )$/;"	f	signature:( YY_BUFFER_STATE b, FILE *file )
yy_input_file	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_last_accepting_cpos	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_load_buffer_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_load_buffer_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_load_buffer_state( void )$/;"	f	signature:( void )
yy_meta	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst int yy_meta[35] =$/;"	v	file:
yy_n_chars	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	246;"	d	file:
yy_nxt	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yyconst short int yy_nxt[951] =$/;"	v	file:
yy_pop_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_pop_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_pop_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_pop_state()$/;"	f	file:
yy_push_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_push_state YY_PROTO(( int new_state ));$/;"	p	file:	signature:( int new_state )
yy_push_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yy_push_state( int new_state )$/;"	f	file:	signature:( int new_state )
yy_scan_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));$/;"	p	file:	signature:( char *base, yy_size_t size )
yy_scan_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )$/;"	f	signature:( char *base, yy_size_t size )
yy_scan_bytes	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));$/;"	p	file:	signature:( yyconst char *bytes, int len )
yy_scan_bytes	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )$/;"	f	signature:( yyconst char *bytes, int len )
yy_scan_string	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));$/;"	p	file:	signature:( yyconst char *yy_str )
yy_scan_string	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )$/;"	f	signature:( yyconst char *yy_str )
yy_set_bol	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	255;"	d	file:
yy_set_interactive	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	248;"	d	file:
yy_size_t	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^typedef unsigned int yy_size_t;$/;"	t	file:
yy_start	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start_stack	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int *yy_start_stack = 0;$/;"	v	file:
yy_start_stack_depth	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_start_stack_depth = 0;$/;"	v	file:
yy_start_stack_ptr	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_start_stack_ptr = 0;$/;"	v	file:
yy_state_type	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));$/;"	p	file:	signature:( YY_BUFFER_STATE new_buffer )
yy_switch_to_buffer	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )$/;"	f	signature:( YY_BUFFER_STATE new_buffer )
yy_top_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_top_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_top_state	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yy_top_state()$/;"	f	file:
yy_try_NUL_trans	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));$/;"	p	file:	signature:( yy_state_type current_state )
yy_try_NUL_trans	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )$/;"	f	file:	signature:( yy_state_type yy_current_state )
yyconst	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	53;"	d	file:
yyconst	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	55;"	d	file:
yyin	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yyinput YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yyinput	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static int yyinput()$/;"	f	file:
yyleng	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int yyleng;$/;"	v
yyless	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	124;"	d	file:
yyless	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	1974;"	d	file:
yyless	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	1975;"	d	file:
yymore	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	684;"	d	file:
yyout	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyrestart	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yyrestart YY_PROTO(( FILE *input_file ));$/;"	p	file:	signature:( FILE *input_file )
yyrestart	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^void yyrestart( FILE *input_file )$/;"	f	signature:( FILE *input_file )
yyterminate	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	846;"	d	file:
yytext	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	268;"	d	file:
yyunput	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yyunput YY_PROTO(( int c, char *buf_ptr ));$/;"	p	file:	signature:( int c, char *buf_ptr )
yyunput	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^static void yyunput( int c, register char *yy_bp )$/;"	f	file:	signature:( int c, register char *yy_bp )
yywrap	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^extern "C" int yywrap YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yywrap	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^extern int yywrap YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yywrap	C:\exVim\vimfiles\bundle\vjde\src\lex.yy.c	/^int yywrap()$/;"	f
z	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double z, tail_z, head_z;   \/* z depths for 2.5D renderers such as vrml *\/$/;"	m	struct:obj_state_s	access:public
z	C:\exVim\graphviz\include\graphviz\xdot.h	/^    double x, y, z;$/;"	m	struct:__anon53	access:public
z	C:\exVim\vim74\macros\less.vim	/^map z <Space>$/;"	m
zip	C:\exVim\vim74\plugin\zipPlugin.vim	/^augroup zip$/;"	a
zip	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:zip(...) abort$/;"	f
zip	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:zip(...) abort$/;"	f
zip	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:zip(...) abort$/;"	f
zip#Browse	C:\exVim\vim74\autoload\zip.vim	/^fun! zip#Browse(zipfile)$/;"	f
zip#Read	C:\exVim\vim74\autoload\zip.vim	/^fun! zip#Read(fname,mode)$/;"	f
zip#Write	C:\exVim\vim74\autoload\zip.vim	/^fun! zip#Write(fname)$/;"	f
zipOrJar	C:\exVim\vimfiles\bundle\vjde\src\vjde\completion\ClassPathZip.java	/^    private File zipOrJar;$/;"	f	class:ClassPathZip	file:	access:private
zip_fill	C:\exVim\vimfiles\bundle\neocomplete.vim\autoload\vital\_neocomplete\Data\List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	C:\exVim\vimfiles\bundle\neosnippet.vim\autoload\vital\_neosnippet\Data\List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	C:\exVim\vimfiles\bundle\vim-easymotion\autoload\vital\_easymotion\Data\List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zoom	C:\exVim\graphviz\include\graphviz\gvcjob.h	/^	double  zoom;		\/* viewport zoom factor (points per graph unit) *\/$/;"	m	struct:GVJ_s	access:public
zt	C:\exVim\vim74\syntax\2html.vim	/^  norm! zt$/;"	m
zz	C:\exVim\vimfiles\cscript.vim	/^map zz :set foldmethod=indent<cr>$/;"	m
Â¡	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> Â¡ :EasyhlWord 1<CR>$/;"	m
Â¡	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> Â¡ :EasyhlRange 1<CR>$/;"	m
Â¢	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> Â¢ :EasyhlWord 4<CR>$/;"	m
Â¢	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> Â¢ :EasyhlRange 4<CR>$/;"	m
Â£	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> Â£ :EasyhlWord 3<CR>$/;"	m
Â£	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> Â£ :EasyhlRange 3<CR>$/;"	m
Âº	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> Âº :EasyhlCancel 0<CR>$/;"	m
â¢	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            nnoremap <unique> <silent> â¢ :EasyhlWord 2<CR>$/;"	m
â¢	C:\exVim\vimfiles\bundle\ex-easyhl\plugin\easyhl.vim	/^            vnoremap <unique> <silent> â¢ :EasyhlRange 2<CR>$/;"	m
ã®	C:\exVim\vim74\keymap\kana.vim	/^no ã®$/;"	m
